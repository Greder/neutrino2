m4trace:/usr/share/aclocal/libtool.m4:61: -1- AC_DEFUN([LT_INIT], [AC_PREREQ([2.62])dnl We use AC_PATH_PROGS_FEATURE_CHECK
AC_REQUIRE([AC_CONFIG_AUX_DIR_DEFAULT])dnl
AC_BEFORE([$0], [LT_LANG])dnl
AC_BEFORE([$0], [LT_OUTPUT])dnl
AC_BEFORE([$0], [LTDL_INIT])dnl
m4_require([_LT_CHECK_BUILDDIR])dnl

dnl Autoconf doesn't catch unexpanded LT_ macros by default:
m4_pattern_forbid([^_?LT_[A-Z_]+$])dnl
m4_pattern_allow([^(_LT_EOF|LT_DLGLOBAL|LT_DLLAZY_OR_NOW|LT_MULTI_MODULE)$])dnl
dnl aclocal doesn't pull ltoptions.m4, ltsugar.m4, or ltversion.m4
dnl unless we require an AC_DEFUNed macro:
AC_REQUIRE([LTOPTIONS_VERSION])dnl
AC_REQUIRE([LTSUGAR_VERSION])dnl
AC_REQUIRE([LTVERSION_VERSION])dnl
AC_REQUIRE([LTOBSOLETE_VERSION])dnl
m4_require([_LT_PROG_LTMAIN])dnl

_LT_SHELL_INIT([SHELL=${CONFIG_SHELL-/bin/sh}])

dnl Parse OPTIONS
_LT_SET_OPTIONS([$0], [$1])

# This can be used to rebuild libtool when needed
LIBTOOL_DEPS=$ltmain

# Always use our own libtool.
LIBTOOL='$(SHELL) $(top_builddir)/libtool'
AC_SUBST(LIBTOOL)dnl

_LT_SETUP

# Only expand once:
m4_define([LT_INIT])
])
m4trace:/usr/share/aclocal/libtool.m4:99: -1- AU_DEFUN([AC_PROG_LIBTOOL], [m4_if($#, 0, [LT_INIT], [LT_INIT($@)])])
m4trace:/usr/share/aclocal/libtool.m4:99: -1- AC_DEFUN([AC_PROG_LIBTOOL], [AC_DIAGNOSE([obsolete], [The macro `AC_PROG_LIBTOOL' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [LT_INIT], [LT_INIT($@)])])
m4trace:/usr/share/aclocal/libtool.m4:100: -1- AU_DEFUN([AM_PROG_LIBTOOL], [m4_if($#, 0, [LT_INIT], [LT_INIT($@)])])
m4trace:/usr/share/aclocal/libtool.m4:100: -1- AC_DEFUN([AM_PROG_LIBTOOL], [AC_DIAGNOSE([obsolete], [The macro `AM_PROG_LIBTOOL' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [LT_INIT], [LT_INIT($@)])])
m4trace:/usr/share/aclocal/libtool.m4:619: -1- AC_DEFUN([LT_OUTPUT], [: ${CONFIG_LT=./config.lt}
AC_MSG_NOTICE([creating $CONFIG_LT])
_LT_GENERATED_FILE_INIT(["$CONFIG_LT"],
[# Run this file to recreate a libtool stub with the current configuration.])

cat >>"$CONFIG_LT" <<\_LTEOF
lt_cl_silent=false
exec AS_MESSAGE_LOG_FD>>config.log
{
  echo
  AS_BOX([Running $as_me.])
} >&AS_MESSAGE_LOG_FD

lt_cl_help="\
'$as_me' creates a local libtool stub from the current configuration,
for use in further configure time tests before the real libtool is
generated.

Usage: $[0] [[OPTIONS]]

  -h, --help      print this help, then exit
  -V, --version   print version number, then exit
  -q, --quiet     do not print progress messages
  -d, --debug     don't remove temporary files

Report bugs to <bug-libtool@gnu.org>."

lt_cl_version="\
m4_ifset([AC_PACKAGE_NAME], [AC_PACKAGE_NAME ])config.lt[]dnl
m4_ifset([AC_PACKAGE_VERSION], [ AC_PACKAGE_VERSION])
configured by $[0], generated by m4_PACKAGE_STRING.

Copyright (C) 2011 Free Software Foundation, Inc.
This config.lt script is free software; the Free Software Foundation
gives unlimited permision to copy, distribute and modify it."

while test 0 != $[#]
do
  case $[1] in
    --version | --v* | -V )
      echo "$lt_cl_version"; exit 0 ;;
    --help | --h* | -h )
      echo "$lt_cl_help"; exit 0 ;;
    --debug | --d* | -d )
      debug=: ;;
    --quiet | --q* | --silent | --s* | -q )
      lt_cl_silent=: ;;

    -*) AC_MSG_ERROR([unrecognized option: $[1]
Try '$[0] --help' for more information.]) ;;

    *) AC_MSG_ERROR([unrecognized argument: $[1]
Try '$[0] --help' for more information.]) ;;
  esac
  shift
done

if $lt_cl_silent; then
  exec AS_MESSAGE_FD>/dev/null
fi
_LTEOF

cat >>"$CONFIG_LT" <<_LTEOF
_LT_OUTPUT_LIBTOOL_COMMANDS_INIT
_LTEOF

cat >>"$CONFIG_LT" <<\_LTEOF
AC_MSG_NOTICE([creating $ofile])
_LT_OUTPUT_LIBTOOL_COMMANDS
AS_EXIT(0)
_LTEOF
chmod +x "$CONFIG_LT"

# configure is writing to config.log, but config.lt does its own redirection,
# appending to config.log, which fails on DOS, as config.log is still kept
# open by configure.  Here we exec the FD to /dev/null, effectively closing
# config.log, so it can be properly (re)opened and appended to by config.lt.
lt_cl_success=:
test yes = "$silent" &&
  lt_config_lt_args="$lt_config_lt_args --quiet"
exec AS_MESSAGE_LOG_FD>/dev/null
$SHELL "$CONFIG_LT" $lt_config_lt_args || lt_cl_success=false
exec AS_MESSAGE_LOG_FD>>config.log
$lt_cl_success || AS_EXIT(1)
])
m4trace:/usr/share/aclocal/libtool.m4:811: -1- AC_DEFUN([LT_SUPPORTED_TAG], [])
m4trace:/usr/share/aclocal/libtool.m4:822: -1- AC_DEFUN([LT_LANG], [AC_BEFORE([$0], [LT_OUTPUT])dnl
m4_case([$1],
  [C],			[_LT_LANG(C)],
  [C++],		[_LT_LANG(CXX)],
  [Go],			[_LT_LANG(GO)],
  [Java],		[_LT_LANG(GCJ)],
  [Fortran 77],		[_LT_LANG(F77)],
  [Fortran],		[_LT_LANG(FC)],
  [Windows Resource],	[_LT_LANG(RC)],
  [m4_ifdef([_LT_LANG_]$1[_CONFIG],
    [_LT_LANG($1)],
    [m4_fatal([$0: unsupported language: "$1"])])])dnl
])
m4trace:/usr/share/aclocal/libtool.m4:914: -1- AU_DEFUN([AC_LIBTOOL_CXX], [LT_LANG(C++)])
m4trace:/usr/share/aclocal/libtool.m4:914: -1- AC_DEFUN([AC_LIBTOOL_CXX], [AC_DIAGNOSE([obsolete], [The macro `AC_LIBTOOL_CXX' is obsolete.
You should run autoupdate.])dnl
LT_LANG(C++)])
m4trace:/usr/share/aclocal/libtool.m4:915: -1- AU_DEFUN([AC_LIBTOOL_F77], [LT_LANG(Fortran 77)])
m4trace:/usr/share/aclocal/libtool.m4:915: -1- AC_DEFUN([AC_LIBTOOL_F77], [AC_DIAGNOSE([obsolete], [The macro `AC_LIBTOOL_F77' is obsolete.
You should run autoupdate.])dnl
LT_LANG(Fortran 77)])
m4trace:/usr/share/aclocal/libtool.m4:916: -1- AU_DEFUN([AC_LIBTOOL_FC], [LT_LANG(Fortran)])
m4trace:/usr/share/aclocal/libtool.m4:916: -1- AC_DEFUN([AC_LIBTOOL_FC], [AC_DIAGNOSE([obsolete], [The macro `AC_LIBTOOL_FC' is obsolete.
You should run autoupdate.])dnl
LT_LANG(Fortran)])
m4trace:/usr/share/aclocal/libtool.m4:917: -1- AU_DEFUN([AC_LIBTOOL_GCJ], [LT_LANG(Java)])
m4trace:/usr/share/aclocal/libtool.m4:917: -1- AC_DEFUN([AC_LIBTOOL_GCJ], [AC_DIAGNOSE([obsolete], [The macro `AC_LIBTOOL_GCJ' is obsolete.
You should run autoupdate.])dnl
LT_LANG(Java)])
m4trace:/usr/share/aclocal/libtool.m4:918: -1- AU_DEFUN([AC_LIBTOOL_RC], [LT_LANG(Windows Resource)])
m4trace:/usr/share/aclocal/libtool.m4:918: -1- AC_DEFUN([AC_LIBTOOL_RC], [AC_DIAGNOSE([obsolete], [The macro `AC_LIBTOOL_RC' is obsolete.
You should run autoupdate.])dnl
LT_LANG(Windows Resource)])
m4trace:/usr/share/aclocal/libtool.m4:1246: -1- AC_DEFUN([_LT_WITH_SYSROOT], [AC_MSG_CHECKING([for sysroot])
AC_ARG_WITH([sysroot],
[AS_HELP_STRING([--with-sysroot@<:@=DIR@:>@],
  [Search for dependent libraries within DIR (or the compiler's sysroot
   if not specified).])],
[], [with_sysroot=no])

dnl lt_sysroot will always be passed unquoted.  We quote it here
dnl in case the user passed a directory name.
lt_sysroot=
case $with_sysroot in #(
 yes)
   if test yes = "$GCC"; then
     lt_sysroot=`$CC --print-sysroot 2>/dev/null`
   fi
   ;; #(
 /*)
   lt_sysroot=`echo "$with_sysroot" | sed -e "$sed_quote_subst"`
   ;; #(
 no|'')
   ;; #(
 *)
   AC_MSG_RESULT([$with_sysroot])
   AC_MSG_ERROR([The sysroot must be an absolute path.])
   ;;
esac

 AC_MSG_RESULT([${lt_sysroot:-no}])
_LT_DECL([], [lt_sysroot], [0], [The root where to search for ]dnl
[dependent libraries, and where our libraries should be installed.])])
m4trace:/usr/share/aclocal/libtool.m4:1577: -1- AC_DEFUN([_LT_COMPILER_OPTION], [m4_require([_LT_FILEUTILS_DEFAULTS])dnl
m4_require([_LT_DECL_SED])dnl
AC_CACHE_CHECK([$1], [$2],
  [$2=no
   m4_if([$4], , [ac_outfile=conftest.$ac_objext], [ac_outfile=$4])
   echo "$lt_simple_compile_test_code" > conftest.$ac_ext
   lt_compiler_flag="$3"  ## exclude from sc_useless_quotes_in_assignment
   # Insert the option either (1) after the last *FLAGS variable, or
   # (2) before a word containing "conftest.", or (3) at the end.
   # Note that $ac_compile itself does not contain backslashes and begins
   # with a dollar sign (not a hyphen), so the echo should work correctly.
   # The option is referenced via a variable to avoid confusing sed.
   lt_compile=`echo "$ac_compile" | $SED \
   -e 's:.*FLAGS}\{0,1\} :&$lt_compiler_flag :; t' \
   -e 's: [[^ ]]*conftest\.: $lt_compiler_flag&:; t' \
   -e 's:$: $lt_compiler_flag:'`
   (eval echo "\"\$as_me:$LINENO: $lt_compile\"" >&AS_MESSAGE_LOG_FD)
   (eval "$lt_compile" 2>conftest.err)
   ac_status=$?
   cat conftest.err >&AS_MESSAGE_LOG_FD
   echo "$as_me:$LINENO: \$? = $ac_status" >&AS_MESSAGE_LOG_FD
   if (exit $ac_status) && test -s "$ac_outfile"; then
     # The compiler can only warn and ignore the option if not recognized
     # So say no if there are warnings other than the usual output.
     $ECHO "$_lt_compiler_boilerplate" | $SED '/^$/d' >conftest.exp
     $SED '/^$/d; /^ *+/d' conftest.err >conftest.er2
     if test ! -s conftest.er2 || diff conftest.exp conftest.er2 >/dev/null; then
       $2=yes
     fi
   fi
   $RM conftest*
])

if test yes = "[$]$2"; then
    m4_if([$5], , :, [$5])
else
    m4_if([$6], , :, [$6])
fi
])
m4trace:/usr/share/aclocal/libtool.m4:1619: -1- AU_DEFUN([AC_LIBTOOL_COMPILER_OPTION], [m4_if($#, 0, [_LT_COMPILER_OPTION], [_LT_COMPILER_OPTION($@)])])
m4trace:/usr/share/aclocal/libtool.m4:1619: -1- AC_DEFUN([AC_LIBTOOL_COMPILER_OPTION], [AC_DIAGNOSE([obsolete], [The macro `AC_LIBTOOL_COMPILER_OPTION' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [_LT_COMPILER_OPTION], [_LT_COMPILER_OPTION($@)])])
m4trace:/usr/share/aclocal/libtool.m4:1628: -1- AC_DEFUN([_LT_LINKER_OPTION], [m4_require([_LT_FILEUTILS_DEFAULTS])dnl
m4_require([_LT_DECL_SED])dnl
AC_CACHE_CHECK([$1], [$2],
  [$2=no
   save_LDFLAGS=$LDFLAGS
   LDFLAGS="$LDFLAGS $3"
   echo "$lt_simple_link_test_code" > conftest.$ac_ext
   if (eval $ac_link 2>conftest.err) && test -s conftest$ac_exeext; then
     # The linker can only warn and ignore the option if not recognized
     # So say no if there are warnings
     if test -s conftest.err; then
       # Append any errors to the config.log.
       cat conftest.err 1>&AS_MESSAGE_LOG_FD
       $ECHO "$_lt_linker_boilerplate" | $SED '/^$/d' > conftest.exp
       $SED '/^$/d; /^ *+/d' conftest.err >conftest.er2
       if diff conftest.exp conftest.er2 >/dev/null; then
         $2=yes
       fi
     else
       $2=yes
     fi
   fi
   $RM -r conftest*
   LDFLAGS=$save_LDFLAGS
])

if test yes = "[$]$2"; then
    m4_if([$4], , :, [$4])
else
    m4_if([$5], , :, [$5])
fi
])
m4trace:/usr/share/aclocal/libtool.m4:1663: -1- AU_DEFUN([AC_LIBTOOL_LINKER_OPTION], [m4_if($#, 0, [_LT_LINKER_OPTION], [_LT_LINKER_OPTION($@)])])
m4trace:/usr/share/aclocal/libtool.m4:1663: -1- AC_DEFUN([AC_LIBTOOL_LINKER_OPTION], [AC_DIAGNOSE([obsolete], [The macro `AC_LIBTOOL_LINKER_OPTION' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [_LT_LINKER_OPTION], [_LT_LINKER_OPTION($@)])])
m4trace:/usr/share/aclocal/libtool.m4:1670: -1- AC_DEFUN([LT_CMD_MAX_LEN], [AC_REQUIRE([AC_CANONICAL_HOST])dnl
# find the maximum length of command line arguments
AC_MSG_CHECKING([the maximum length of command line arguments])
AC_CACHE_VAL([lt_cv_sys_max_cmd_len], [dnl
  i=0
  teststring=ABCD

  case $build_os in
  msdosdjgpp*)
    # On DJGPP, this test can blow up pretty badly due to problems in libc
    # (any single argument exceeding 2000 bytes causes a buffer overrun
    # during glob expansion).  Even if it were fixed, the result of this
    # check would be larger than it should be.
    lt_cv_sys_max_cmd_len=12288;    # 12K is about right
    ;;

  gnu*)
    # Under GNU Hurd, this test is not required because there is
    # no limit to the length of command line arguments.
    # Libtool will interpret -1 as no limit whatsoever
    lt_cv_sys_max_cmd_len=-1;
    ;;

  cygwin* | mingw* | cegcc*)
    # On Win9x/ME, this test blows up -- it succeeds, but takes
    # about 5 minutes as the teststring grows exponentially.
    # Worse, since 9x/ME are not pre-emptively multitasking,
    # you end up with a "frozen" computer, even though with patience
    # the test eventually succeeds (with a max line length of 256k).
    # Instead, let's just punt: use the minimum linelength reported by
    # all of the supported platforms: 8192 (on NT/2K/XP).
    lt_cv_sys_max_cmd_len=8192;
    ;;

  mint*)
    # On MiNT this can take a long time and run out of memory.
    lt_cv_sys_max_cmd_len=8192;
    ;;

  amigaos*)
    # On AmigaOS with pdksh, this test takes hours, literally.
    # So we just punt and use a minimum line length of 8192.
    lt_cv_sys_max_cmd_len=8192;
    ;;

  bitrig* | darwin* | dragonfly* | freebsd* | netbsd* | openbsd*)
    # This has been around since 386BSD, at least.  Likely further.
    if test -x /sbin/sysctl; then
      lt_cv_sys_max_cmd_len=`/sbin/sysctl -n kern.argmax`
    elif test -x /usr/sbin/sysctl; then
      lt_cv_sys_max_cmd_len=`/usr/sbin/sysctl -n kern.argmax`
    else
      lt_cv_sys_max_cmd_len=65536	# usable default for all BSDs
    fi
    # And add a safety zone
    lt_cv_sys_max_cmd_len=`expr $lt_cv_sys_max_cmd_len \/ 4`
    lt_cv_sys_max_cmd_len=`expr $lt_cv_sys_max_cmd_len \* 3`
    ;;

  interix*)
    # We know the value 262144 and hardcode it with a safety zone (like BSD)
    lt_cv_sys_max_cmd_len=196608
    ;;

  os2*)
    # The test takes a long time on OS/2.
    lt_cv_sys_max_cmd_len=8192
    ;;

  osf*)
    # Dr. Hans Ekkehard Plesser reports seeing a kernel panic running configure
    # due to this test when exec_disable_arg_limit is 1 on Tru64. It is not
    # nice to cause kernel panics so lets avoid the loop below.
    # First set a reasonable default.
    lt_cv_sys_max_cmd_len=16384
    #
    if test -x /sbin/sysconfig; then
      case `/sbin/sysconfig -q proc exec_disable_arg_limit` in
        *1*) lt_cv_sys_max_cmd_len=-1 ;;
      esac
    fi
    ;;
  sco3.2v5*)
    lt_cv_sys_max_cmd_len=102400
    ;;
  sysv5* | sco5v6* | sysv4.2uw2*)
    kargmax=`grep ARG_MAX /etc/conf/cf.d/stune 2>/dev/null`
    if test -n "$kargmax"; then
      lt_cv_sys_max_cmd_len=`echo $kargmax | sed 's/.*[[	 ]]//'`
    else
      lt_cv_sys_max_cmd_len=32768
    fi
    ;;
  *)
    lt_cv_sys_max_cmd_len=`(getconf ARG_MAX) 2> /dev/null`
    if test -n "$lt_cv_sys_max_cmd_len" && \
       test undefined != "$lt_cv_sys_max_cmd_len"; then
      lt_cv_sys_max_cmd_len=`expr $lt_cv_sys_max_cmd_len \/ 4`
      lt_cv_sys_max_cmd_len=`expr $lt_cv_sys_max_cmd_len \* 3`
    else
      # Make teststring a little bigger before we do anything with it.
      # a 1K string should be a reasonable start.
      for i in 1 2 3 4 5 6 7 8; do
        teststring=$teststring$teststring
      done
      SHELL=${SHELL-${CONFIG_SHELL-/bin/sh}}
      # If test is not a shell built-in, we'll probably end up computing a
      # maximum length that is only half of the actual maximum length, but
      # we can't tell.
      while { test X`env echo "$teststring$teststring" 2>/dev/null` \
	         = "X$teststring$teststring"; } >/dev/null 2>&1 &&
	      test 17 != "$i" # 1/2 MB should be enough
      do
        i=`expr $i + 1`
        teststring=$teststring$teststring
      done
      # Only check the string length outside the loop.
      lt_cv_sys_max_cmd_len=`expr "X$teststring" : ".*" 2>&1`
      teststring=
      # Add a significant safety factor because C++ compilers can tack on
      # massive amounts of additional arguments before passing them to the
      # linker.  It appears as though 1/2 is a usable value.
      lt_cv_sys_max_cmd_len=`expr $lt_cv_sys_max_cmd_len \/ 2`
    fi
    ;;
  esac
])
if test -n "$lt_cv_sys_max_cmd_len"; then
  AC_MSG_RESULT($lt_cv_sys_max_cmd_len)
else
  AC_MSG_RESULT(none)
fi
max_cmd_len=$lt_cv_sys_max_cmd_len
_LT_DECL([], [max_cmd_len], [0],
    [What is the maximum length of a command?])
])
m4trace:/usr/share/aclocal/libtool.m4:1809: -1- AU_DEFUN([AC_LIBTOOL_SYS_MAX_CMD_LEN], [m4_if($#, 0, [LT_CMD_MAX_LEN], [LT_CMD_MAX_LEN($@)])])
m4trace:/usr/share/aclocal/libtool.m4:1809: -1- AC_DEFUN([AC_LIBTOOL_SYS_MAX_CMD_LEN], [AC_DIAGNOSE([obsolete], [The macro `AC_LIBTOOL_SYS_MAX_CMD_LEN' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [LT_CMD_MAX_LEN], [LT_CMD_MAX_LEN($@)])])
m4trace:/usr/share/aclocal/libtool.m4:1920: -1- AC_DEFUN([LT_SYS_DLOPEN_SELF], [m4_require([_LT_HEADER_DLFCN])dnl
if test yes != "$enable_dlopen"; then
  enable_dlopen=unknown
  enable_dlopen_self=unknown
  enable_dlopen_self_static=unknown
else
  lt_cv_dlopen=no
  lt_cv_dlopen_libs=

  case $host_os in
  beos*)
    lt_cv_dlopen=load_add_on
    lt_cv_dlopen_libs=
    lt_cv_dlopen_self=yes
    ;;

  mingw* | pw32* | cegcc*)
    lt_cv_dlopen=LoadLibrary
    lt_cv_dlopen_libs=
    ;;

  cygwin*)
    lt_cv_dlopen=dlopen
    lt_cv_dlopen_libs=
    ;;

  darwin*)
    # if libdl is installed we need to link against it
    AC_CHECK_LIB([dl], [dlopen],
		[lt_cv_dlopen=dlopen lt_cv_dlopen_libs=-ldl],[
    lt_cv_dlopen=dyld
    lt_cv_dlopen_libs=
    lt_cv_dlopen_self=yes
    ])
    ;;

  tpf*)
    # Don't try to run any link tests for TPF.  We know it's impossible
    # because TPF is a cross-compiler, and we know how we open DSOs.
    lt_cv_dlopen=dlopen
    lt_cv_dlopen_libs=
    lt_cv_dlopen_self=no
    ;;

  *)
    AC_CHECK_FUNC([shl_load],
	  [lt_cv_dlopen=shl_load],
      [AC_CHECK_LIB([dld], [shl_load],
	    [lt_cv_dlopen=shl_load lt_cv_dlopen_libs=-ldld],
	[AC_CHECK_FUNC([dlopen],
	      [lt_cv_dlopen=dlopen],
	  [AC_CHECK_LIB([dl], [dlopen],
		[lt_cv_dlopen=dlopen lt_cv_dlopen_libs=-ldl],
	    [AC_CHECK_LIB([svld], [dlopen],
		  [lt_cv_dlopen=dlopen lt_cv_dlopen_libs=-lsvld],
	      [AC_CHECK_LIB([dld], [dld_link],
		    [lt_cv_dlopen=dld_link lt_cv_dlopen_libs=-ldld])
	      ])
	    ])
	  ])
	])
      ])
    ;;
  esac

  if test no = "$lt_cv_dlopen"; then
    enable_dlopen=no
  else
    enable_dlopen=yes
  fi

  case $lt_cv_dlopen in
  dlopen)
    save_CPPFLAGS=$CPPFLAGS
    test yes = "$ac_cv_header_dlfcn_h" && CPPFLAGS="$CPPFLAGS -DHAVE_DLFCN_H"

    save_LDFLAGS=$LDFLAGS
    wl=$lt_prog_compiler_wl eval LDFLAGS=\"\$LDFLAGS $export_dynamic_flag_spec\"

    save_LIBS=$LIBS
    LIBS="$lt_cv_dlopen_libs $LIBS"

    AC_CACHE_CHECK([whether a program can dlopen itself],
	  lt_cv_dlopen_self, [dnl
	  _LT_TRY_DLOPEN_SELF(
	    lt_cv_dlopen_self=yes, lt_cv_dlopen_self=yes,
	    lt_cv_dlopen_self=no, lt_cv_dlopen_self=cross)
    ])

    if test yes = "$lt_cv_dlopen_self"; then
      wl=$lt_prog_compiler_wl eval LDFLAGS=\"\$LDFLAGS $lt_prog_compiler_static\"
      AC_CACHE_CHECK([whether a statically linked program can dlopen itself],
	  lt_cv_dlopen_self_static, [dnl
	  _LT_TRY_DLOPEN_SELF(
	    lt_cv_dlopen_self_static=yes, lt_cv_dlopen_self_static=yes,
	    lt_cv_dlopen_self_static=no,  lt_cv_dlopen_self_static=cross)
      ])
    fi

    CPPFLAGS=$save_CPPFLAGS
    LDFLAGS=$save_LDFLAGS
    LIBS=$save_LIBS
    ;;
  esac

  case $lt_cv_dlopen_self in
  yes|no) enable_dlopen_self=$lt_cv_dlopen_self ;;
  *) enable_dlopen_self=unknown ;;
  esac

  case $lt_cv_dlopen_self_static in
  yes|no) enable_dlopen_self_static=$lt_cv_dlopen_self_static ;;
  *) enable_dlopen_self_static=unknown ;;
  esac
fi
_LT_DECL([dlopen_support], [enable_dlopen], [0],
	 [Whether dlopen is supported])
_LT_DECL([dlopen_self], [enable_dlopen_self], [0],
	 [Whether dlopen of programs is supported])
_LT_DECL([dlopen_self_static], [enable_dlopen_self_static], [0],
	 [Whether dlopen of statically linked programs is supported])
])
m4trace:/usr/share/aclocal/libtool.m4:2045: -1- AU_DEFUN([AC_LIBTOOL_DLOPEN_SELF], [m4_if($#, 0, [LT_SYS_DLOPEN_SELF], [LT_SYS_DLOPEN_SELF($@)])])
m4trace:/usr/share/aclocal/libtool.m4:2045: -1- AC_DEFUN([AC_LIBTOOL_DLOPEN_SELF], [AC_DIAGNOSE([obsolete], [The macro `AC_LIBTOOL_DLOPEN_SELF' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [LT_SYS_DLOPEN_SELF], [LT_SYS_DLOPEN_SELF($@)])])
m4trace:/usr/share/aclocal/libtool.m4:3166: -1- AC_DEFUN([_LT_PATH_TOOL_PREFIX], [m4_require([_LT_DECL_EGREP])dnl
AC_MSG_CHECKING([for $1])
AC_CACHE_VAL(lt_cv_path_MAGIC_CMD,
[case $MAGIC_CMD in
[[\\/*] |  ?:[\\/]*])
  lt_cv_path_MAGIC_CMD=$MAGIC_CMD # Let the user override the test with a path.
  ;;
*)
  lt_save_MAGIC_CMD=$MAGIC_CMD
  lt_save_ifs=$IFS; IFS=$PATH_SEPARATOR
dnl $ac_dummy forces splitting on constant user-supplied paths.
dnl POSIX.2 word splitting is done only on the output of word expansions,
dnl not every word.  This closes a longstanding sh security hole.
  ac_dummy="m4_if([$2], , $PATH, [$2])"
  for ac_dir in $ac_dummy; do
    IFS=$lt_save_ifs
    test -z "$ac_dir" && ac_dir=.
    if test -f "$ac_dir/$1"; then
      lt_cv_path_MAGIC_CMD=$ac_dir/"$1"
      if test -n "$file_magic_test_file"; then
	case $deplibs_check_method in
	"file_magic "*)
	  file_magic_regex=`expr "$deplibs_check_method" : "file_magic \(.*\)"`
	  MAGIC_CMD=$lt_cv_path_MAGIC_CMD
	  if eval $file_magic_cmd \$file_magic_test_file 2> /dev/null |
	    $EGREP "$file_magic_regex" > /dev/null; then
	    :
	  else
	    cat <<_LT_EOF 1>&2

*** Warning: the command libtool uses to detect shared libraries,
*** $file_magic_cmd, produces output that libtool cannot recognize.
*** The result is that libtool may fail to recognize shared libraries
*** as such.  This will affect the creation of libtool libraries that
*** depend on shared libraries, but programs linked with such libtool
*** libraries will work regardless of this problem.  Nevertheless, you
*** may want to report the problem to your system manager and/or to
*** bug-libtool@gnu.org

_LT_EOF
	  fi ;;
	esac
      fi
      break
    fi
  done
  IFS=$lt_save_ifs
  MAGIC_CMD=$lt_save_MAGIC_CMD
  ;;
esac])
MAGIC_CMD=$lt_cv_path_MAGIC_CMD
if test -n "$MAGIC_CMD"; then
  AC_MSG_RESULT($MAGIC_CMD)
else
  AC_MSG_RESULT(no)
fi
_LT_DECL([], [MAGIC_CMD], [0],
	 [Used to examine libraries when file_magic_cmd begins with "file"])dnl
])
m4trace:/usr/share/aclocal/libtool.m4:3228: -1- AU_DEFUN([AC_PATH_TOOL_PREFIX], [m4_if($#, 0, [_LT_PATH_TOOL_PREFIX], [_LT_PATH_TOOL_PREFIX($@)])])
m4trace:/usr/share/aclocal/libtool.m4:3228: -1- AC_DEFUN([AC_PATH_TOOL_PREFIX], [AC_DIAGNOSE([obsolete], [The macro `AC_PATH_TOOL_PREFIX' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [_LT_PATH_TOOL_PREFIX], [_LT_PATH_TOOL_PREFIX($@)])])
m4trace:/usr/share/aclocal/libtool.m4:3251: -1- AC_DEFUN([LT_PATH_LD], [AC_REQUIRE([AC_PROG_CC])dnl
AC_REQUIRE([AC_CANONICAL_HOST])dnl
AC_REQUIRE([AC_CANONICAL_BUILD])dnl
m4_require([_LT_DECL_SED])dnl
m4_require([_LT_DECL_EGREP])dnl
m4_require([_LT_PROG_ECHO_BACKSLASH])dnl

AC_ARG_WITH([gnu-ld],
    [AS_HELP_STRING([--with-gnu-ld],
	[assume the C compiler uses GNU ld @<:@default=no@:>@])],
    [test no = "$withval" || with_gnu_ld=yes],
    [with_gnu_ld=no])dnl

ac_prog=ld
if test yes = "$GCC"; then
  # Check if gcc -print-prog-name=ld gives a path.
  AC_MSG_CHECKING([for ld used by $CC])
  case $host in
  *-*-mingw*)
    # gcc leaves a trailing carriage return, which upsets mingw
    ac_prog=`($CC -print-prog-name=ld) 2>&5 | tr -d '\015'` ;;
  *)
    ac_prog=`($CC -print-prog-name=ld) 2>&5` ;;
  esac
  case $ac_prog in
    # Accept absolute paths.
    [[\\/]]* | ?:[[\\/]]*)
      re_direlt='/[[^/]][[^/]]*/\.\./'
      # Canonicalize the pathname of ld
      ac_prog=`$ECHO "$ac_prog"| $SED 's%\\\\%/%g'`
      while $ECHO "$ac_prog" | $GREP "$re_direlt" > /dev/null 2>&1; do
	ac_prog=`$ECHO $ac_prog| $SED "s%$re_direlt%/%"`
      done
      test -z "$LD" && LD=$ac_prog
      ;;
  "")
    # If it fails, then pretend we aren't using GCC.
    ac_prog=ld
    ;;
  *)
    # If it is relative, then search for the first ld in PATH.
    with_gnu_ld=unknown
    ;;
  esac
elif test yes = "$with_gnu_ld"; then
  AC_MSG_CHECKING([for GNU ld])
else
  AC_MSG_CHECKING([for non-GNU ld])
fi
AC_CACHE_VAL(lt_cv_path_LD,
[if test -z "$LD"; then
  lt_save_ifs=$IFS; IFS=$PATH_SEPARATOR
  for ac_dir in $PATH; do
    IFS=$lt_save_ifs
    test -z "$ac_dir" && ac_dir=.
    if test -f "$ac_dir/$ac_prog" || test -f "$ac_dir/$ac_prog$ac_exeext"; then
      lt_cv_path_LD=$ac_dir/$ac_prog
      # Check to see if the program is GNU ld.  I'd rather use --version,
      # but apparently some variants of GNU ld only accept -v.
      # Break only if it was the GNU/non-GNU ld that we prefer.
      case `"$lt_cv_path_LD" -v 2>&1 </dev/null` in
      *GNU* | *'with BFD'*)
	test no != "$with_gnu_ld" && break
	;;
      *)
	test yes != "$with_gnu_ld" && break
	;;
      esac
    fi
  done
  IFS=$lt_save_ifs
else
  lt_cv_path_LD=$LD # Let the user override the test with a path.
fi])
LD=$lt_cv_path_LD
if test -n "$LD"; then
  AC_MSG_RESULT($LD)
else
  AC_MSG_RESULT(no)
fi
test -z "$LD" && AC_MSG_ERROR([no acceptable ld found in \$PATH])
_LT_PATH_LD_GNU
AC_SUBST([LD])

_LT_TAGDECL([], [LD], [1], [The linker used to build libraries])
])
m4trace:/usr/share/aclocal/libtool.m4:3340: -1- AU_DEFUN([AM_PROG_LD], [m4_if($#, 0, [LT_PATH_LD], [LT_PATH_LD($@)])])
m4trace:/usr/share/aclocal/libtool.m4:3340: -1- AC_DEFUN([AM_PROG_LD], [AC_DIAGNOSE([obsolete], [The macro `AM_PROG_LD' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [LT_PATH_LD], [LT_PATH_LD($@)])])
m4trace:/usr/share/aclocal/libtool.m4:3341: -1- AU_DEFUN([AC_PROG_LD], [m4_if($#, 0, [LT_PATH_LD], [LT_PATH_LD($@)])])
m4trace:/usr/share/aclocal/libtool.m4:3341: -1- AC_DEFUN([AC_PROG_LD], [AC_DIAGNOSE([obsolete], [The macro `AC_PROG_LD' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [LT_PATH_LD], [LT_PATH_LD($@)])])
m4trace:/usr/share/aclocal/libtool.m4:3670: -1- AC_DEFUN([LT_PATH_NM], [AC_REQUIRE([AC_PROG_CC])dnl
AC_CACHE_CHECK([for BSD- or MS-compatible name lister (nm)], lt_cv_path_NM,
[if test -n "$NM"; then
  # Let the user override the test.
  lt_cv_path_NM=$NM
else
  lt_nm_to_check=${ac_tool_prefix}nm
  if test -n "$ac_tool_prefix" && test "$build" = "$host"; then
    lt_nm_to_check="$lt_nm_to_check nm"
  fi
  for lt_tmp_nm in $lt_nm_to_check; do
    lt_save_ifs=$IFS; IFS=$PATH_SEPARATOR
    for ac_dir in $PATH /usr/ccs/bin/elf /usr/ccs/bin /usr/ucb /bin; do
      IFS=$lt_save_ifs
      test -z "$ac_dir" && ac_dir=.
      tmp_nm=$ac_dir/$lt_tmp_nm
      if test -f "$tmp_nm" || test -f "$tmp_nm$ac_exeext"; then
	# Check to see if the nm accepts a BSD-compat flag.
	# Adding the 'sed 1q' prevents false positives on HP-UX, which says:
	#   nm: unknown option "B" ignored
	# Tru64's nm complains that /dev/null is an invalid object file
	# MSYS converts /dev/null to NUL, MinGW nm treats NUL as empty
	case $build_os in
	mingw*) lt_bad_file=conftest.nm/nofile ;;
	*) lt_bad_file=/dev/null ;;
	esac
	case `"$tmp_nm" -B $lt_bad_file 2>&1 | sed '1q'` in
	*$lt_bad_file* | *'Invalid file or object type'*)
	  lt_cv_path_NM="$tmp_nm -B"
	  break 2
	  ;;
	*)
	  case `"$tmp_nm" -p /dev/null 2>&1 | sed '1q'` in
	  */dev/null*)
	    lt_cv_path_NM="$tmp_nm -p"
	    break 2
	    ;;
	  *)
	    lt_cv_path_NM=${lt_cv_path_NM="$tmp_nm"} # keep the first match, but
	    continue # so that we can try to find one that supports BSD flags
	    ;;
	  esac
	  ;;
	esac
      fi
    done
    IFS=$lt_save_ifs
  done
  : ${lt_cv_path_NM=no}
fi])
if test no != "$lt_cv_path_NM"; then
  NM=$lt_cv_path_NM
else
  # Didn't find any BSD compatible name lister, look for dumpbin.
  if test -n "$DUMPBIN"; then :
    # Let the user override the test.
  else
    AC_CHECK_TOOLS(DUMPBIN, [dumpbin "link -dump"], :)
    case `$DUMPBIN -symbols -headers /dev/null 2>&1 | sed '1q'` in
    *COFF*)
      DUMPBIN="$DUMPBIN -symbols -headers"
      ;;
    *)
      DUMPBIN=:
      ;;
    esac
  fi
  AC_SUBST([DUMPBIN])
  if test : != "$DUMPBIN"; then
    NM=$DUMPBIN
  fi
fi
test -z "$NM" && NM=nm
AC_SUBST([NM])
_LT_DECL([], [NM], [1], [A BSD- or MS-compatible name lister])dnl

AC_CACHE_CHECK([the name lister ($NM) interface], [lt_cv_nm_interface],
  [lt_cv_nm_interface="BSD nm"
  echo "int some_variable = 0;" > conftest.$ac_ext
  (eval echo "\"\$as_me:$LINENO: $ac_compile\"" >&AS_MESSAGE_LOG_FD)
  (eval "$ac_compile" 2>conftest.err)
  cat conftest.err >&AS_MESSAGE_LOG_FD
  (eval echo "\"\$as_me:$LINENO: $NM \\\"conftest.$ac_objext\\\"\"" >&AS_MESSAGE_LOG_FD)
  (eval "$NM \"conftest.$ac_objext\"" 2>conftest.err > conftest.out)
  cat conftest.err >&AS_MESSAGE_LOG_FD
  (eval echo "\"\$as_me:$LINENO: output\"" >&AS_MESSAGE_LOG_FD)
  cat conftest.out >&AS_MESSAGE_LOG_FD
  if $GREP 'External.*some_variable' conftest.out > /dev/null; then
    lt_cv_nm_interface="MS dumpbin"
  fi
  rm -f conftest*])
])
m4trace:/usr/share/aclocal/libtool.m4:3765: -1- AU_DEFUN([AM_PROG_NM], [m4_if($#, 0, [LT_PATH_NM], [LT_PATH_NM($@)])])
m4trace:/usr/share/aclocal/libtool.m4:3765: -1- AC_DEFUN([AM_PROG_NM], [AC_DIAGNOSE([obsolete], [The macro `AM_PROG_NM' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [LT_PATH_NM], [LT_PATH_NM($@)])])
m4trace:/usr/share/aclocal/libtool.m4:3766: -1- AU_DEFUN([AC_PROG_NM], [m4_if($#, 0, [LT_PATH_NM], [LT_PATH_NM($@)])])
m4trace:/usr/share/aclocal/libtool.m4:3766: -1- AC_DEFUN([AC_PROG_NM], [AC_DIAGNOSE([obsolete], [The macro `AC_PROG_NM' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [LT_PATH_NM], [LT_PATH_NM($@)])])
m4trace:/usr/share/aclocal/libtool.m4:3837: -1- AC_DEFUN([_LT_DLL_DEF_P], [dnl
  test DEF = "`$SED -n dnl
    -e '\''s/^[[	 ]]*//'\'' dnl Strip leading whitespace
    -e '\''/^\(;.*\)*$/d'\'' dnl      Delete empty lines and comments
    -e '\''s/^\(EXPORTS\|LIBRARY\)\([[	 ]].*\)*$/DEF/p'\'' dnl
    -e q dnl                          Only consider the first "real" line
    $1`" dnl
])
m4trace:/usr/share/aclocal/libtool.m4:3851: -1- AC_DEFUN([LT_LIB_M], [AC_REQUIRE([AC_CANONICAL_HOST])dnl
LIBM=
case $host in
*-*-beos* | *-*-cegcc* | *-*-cygwin* | *-*-haiku* | *-*-pw32* | *-*-darwin*)
  # These system don't have libm, or don't need it
  ;;
*-ncr-sysv4.3*)
  AC_CHECK_LIB(mw, _mwvalidcheckl, LIBM=-lmw)
  AC_CHECK_LIB(m, cos, LIBM="$LIBM -lm")
  ;;
*)
  AC_CHECK_LIB(m, cos, LIBM=-lm)
  ;;
esac
AC_SUBST([LIBM])
])
m4trace:/usr/share/aclocal/libtool.m4:3870: -1- AU_DEFUN([AC_CHECK_LIBM], [m4_if($#, 0, [LT_LIB_M], [LT_LIB_M($@)])])
m4trace:/usr/share/aclocal/libtool.m4:3870: -1- AC_DEFUN([AC_CHECK_LIBM], [AC_DIAGNOSE([obsolete], [The macro `AC_CHECK_LIBM' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [LT_LIB_M], [LT_LIB_M($@)])])
m4trace:/usr/share/aclocal/libtool.m4:8147: -1- AC_DEFUN([LT_PROG_GCJ], [m4_ifdef([AC_PROG_GCJ], [AC_PROG_GCJ],
  [m4_ifdef([A][M_PROG_GCJ], [A][M_PROG_GCJ],
    [AC_CHECK_TOOL(GCJ, gcj,)
      test set = "${GCJFLAGS+set}" || GCJFLAGS="-g -O2"
      AC_SUBST(GCJFLAGS)])])[]dnl
])
m4trace:/usr/share/aclocal/libtool.m4:8156: -1- AU_DEFUN([LT_AC_PROG_GCJ], [m4_if($#, 0, [LT_PROG_GCJ], [LT_PROG_GCJ($@)])])
m4trace:/usr/share/aclocal/libtool.m4:8156: -1- AC_DEFUN([LT_AC_PROG_GCJ], [AC_DIAGNOSE([obsolete], [The macro `LT_AC_PROG_GCJ' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [LT_PROG_GCJ], [LT_PROG_GCJ($@)])])
m4trace:/usr/share/aclocal/libtool.m4:8163: -1- AC_DEFUN([LT_PROG_GO], [AC_CHECK_TOOL(GOC, gccgo,)
])
m4trace:/usr/share/aclocal/libtool.m4:8170: -1- AC_DEFUN([LT_PROG_RC], [AC_CHECK_TOOL(RC, windres,)
])
m4trace:/usr/share/aclocal/libtool.m4:8175: -1- AU_DEFUN([LT_AC_PROG_RC], [m4_if($#, 0, [LT_PROG_RC], [LT_PROG_RC($@)])])
m4trace:/usr/share/aclocal/libtool.m4:8175: -1- AC_DEFUN([LT_AC_PROG_RC], [AC_DIAGNOSE([obsolete], [The macro `LT_AC_PROG_RC' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [LT_PROG_RC], [LT_PROG_RC($@)])])
m4trace:/usr/share/aclocal/libtool.m4:8295: -1- AU_DEFUN([LT_AC_PROG_SED], [m4_if($#, 0, [AC_PROG_SED], [AC_PROG_SED($@)])])
m4trace:/usr/share/aclocal/libtool.m4:8295: -1- AC_DEFUN([LT_AC_PROG_SED], [AC_DIAGNOSE([obsolete], [The macro `LT_AC_PROG_SED' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [AC_PROG_SED], [AC_PROG_SED($@)])])
m4trace:/usr/share/aclocal/ltargz.m4:12: -1- AC_DEFUN([LT_FUNC_ARGZ], [
AC_CHECK_HEADERS([argz.h], [], [], [AC_INCLUDES_DEFAULT])

AC_CHECK_TYPES([error_t],
  [],
  [AC_DEFINE([error_t], [int],
   [Define to a type to use for 'error_t' if it is not otherwise available.])
   AC_DEFINE([__error_t_defined], [1], [Define so that glibc/gnulib argp.h
    does not typedef error_t.])],
  [#if defined(HAVE_ARGZ_H)
#  include <argz.h>
#endif])

LT_ARGZ_H=
AC_CHECK_FUNCS([argz_add argz_append argz_count argz_create_sep argz_insert \
	argz_next argz_stringify], [], [LT_ARGZ_H=lt__argz.h; AC_LIBOBJ([lt__argz])])

dnl if have system argz functions, allow forced use of
dnl libltdl-supplied implementation (and default to do so
dnl on "known bad" systems). Could use a runtime check, but
dnl (a) detecting malloc issues is notoriously unreliable
dnl (b) only known system that declares argz functions,
dnl     provides them, yet they are broken, is cygwin
dnl     releases prior to 16-Mar-2007 (1.5.24 and earlier)
dnl So, it's more straightforward simply to special case
dnl this for known bad systems.
AS_IF([test -z "$LT_ARGZ_H"],
    [AC_CACHE_CHECK(
        [if argz actually works],
        [lt_cv_sys_argz_works],
        [[case $host_os in #(
	 *cygwin*)
	   lt_cv_sys_argz_works=no
	   if test no != "$cross_compiling"; then
	     lt_cv_sys_argz_works="guessing no"
	   else
	     lt_sed_extract_leading_digits='s/^\([0-9\.]*\).*/\1/'
	     save_IFS=$IFS
	     IFS=-.
	     set x `uname -r | sed -e "$lt_sed_extract_leading_digits"`
	     IFS=$save_IFS
	     lt_os_major=${2-0}
	     lt_os_minor=${3-0}
	     lt_os_micro=${4-0}
	     if test 1 -lt "$lt_os_major" \
		|| { test 1 -eq "$lt_os_major" \
		  && { test 5 -lt "$lt_os_minor" \
		    || { test 5 -eq "$lt_os_minor" \
		      && test 24 -lt "$lt_os_micro"; }; }; }; then
	       lt_cv_sys_argz_works=yes
	     fi
	   fi
	   ;; #(
	 *) lt_cv_sys_argz_works=yes ;;
	 esac]])
     AS_IF([test yes = "$lt_cv_sys_argz_works"],
        [AC_DEFINE([HAVE_WORKING_ARGZ], 1,
                   [This value is set to 1 to indicate that the system argz facility works])],
        [LT_ARGZ_H=lt__argz.h
        AC_LIBOBJ([lt__argz])])])

AC_SUBST([LT_ARGZ_H])
])
m4trace:/usr/share/aclocal/ltdl.m4:16: -1- AC_DEFUN([LT_CONFIG_LTDL_DIR], [AC_BEFORE([$0], [LTDL_INIT])
_$0($*)
])
m4trace:/usr/share/aclocal/ltdl.m4:68: -1- AC_DEFUN([LTDL_CONVENIENCE], [AC_BEFORE([$0], [LTDL_INIT])dnl
dnl Although the argument is deprecated and no longer documented,
dnl LTDL_CONVENIENCE used to take a DIRECTORY orgument, if we have one
dnl here make sure it is the same as any other declaration of libltdl's
dnl location!  This also ensures lt_ltdl_dir is set when configure.ac is
dnl not yet using an explicit LT_CONFIG_LTDL_DIR.
m4_ifval([$1], [_LT_CONFIG_LTDL_DIR([$1])])dnl
_$0()
])
m4trace:/usr/share/aclocal/ltdl.m4:81: -1- AU_DEFUN([AC_LIBLTDL_CONVENIENCE], [_LT_CONFIG_LTDL_DIR([m4_default([$1], [libltdl])])
_LTDL_CONVENIENCE])
m4trace:/usr/share/aclocal/ltdl.m4:81: -1- AC_DEFUN([AC_LIBLTDL_CONVENIENCE], [AC_DIAGNOSE([obsolete], [The macro `AC_LIBLTDL_CONVENIENCE' is obsolete.
You should run autoupdate.])dnl
_LT_CONFIG_LTDL_DIR([m4_default([$1], [libltdl])])
_LTDL_CONVENIENCE])
m4trace:/usr/share/aclocal/ltdl.m4:124: -1- AC_DEFUN([LTDL_INSTALLABLE], [AC_BEFORE([$0], [LTDL_INIT])dnl
dnl Although the argument is deprecated and no longer documented,
dnl LTDL_INSTALLABLE used to take a DIRECTORY orgument, if we have one
dnl here make sure it is the same as any other declaration of libltdl's
dnl location!  This also ensures lt_ltdl_dir is set when configure.ac is
dnl not yet using an explicit LT_CONFIG_LTDL_DIR.
m4_ifval([$1], [_LT_CONFIG_LTDL_DIR([$1])])dnl
_$0()
])
m4trace:/usr/share/aclocal/ltdl.m4:137: -1- AU_DEFUN([AC_LIBLTDL_INSTALLABLE], [_LT_CONFIG_LTDL_DIR([m4_default([$1], [libltdl])])
_LTDL_INSTALLABLE])
m4trace:/usr/share/aclocal/ltdl.m4:137: -1- AC_DEFUN([AC_LIBLTDL_INSTALLABLE], [AC_DIAGNOSE([obsolete], [The macro `AC_LIBLTDL_INSTALLABLE' is obsolete.
You should run autoupdate.])dnl
_LT_CONFIG_LTDL_DIR([m4_default([$1], [libltdl])])
_LTDL_INSTALLABLE])
m4trace:/usr/share/aclocal/ltdl.m4:213: -1- AC_DEFUN([_LT_LIBOBJ], [
  m4_pattern_allow([^_LT_LIBOBJS$])
  _LT_LIBOBJS="$_LT_LIBOBJS $1.$ac_objext"
])
m4trace:/usr/share/aclocal/ltdl.m4:226: -1- AC_DEFUN([LTDL_INIT], [dnl Parse OPTIONS
_LT_SET_OPTIONS([$0], [$1])

dnl We need to keep our own list of libobjs separate from our parent project,
dnl and the easiest way to do that is redefine the AC_LIBOBJs macro while
dnl we look for our own LIBOBJs.
m4_pushdef([AC_LIBOBJ], m4_defn([_LT_LIBOBJ]))
m4_pushdef([AC_LIBSOURCES])

dnl If not otherwise defined, default to the 1.5.x compatible subproject mode:
m4_if(_LTDL_MODE, [],
        [m4_define([_LTDL_MODE], m4_default([$2], [subproject]))
        m4_if([-1], [m4_bregexp(_LTDL_MODE, [\(subproject\|\(non\)?recursive\)])],
                [m4_fatal([unknown libltdl mode: ]_LTDL_MODE)])])

AC_ARG_WITH([included_ltdl],
    [AS_HELP_STRING([--with-included-ltdl],
                    [use the GNU ltdl sources included here])])

if test yes != "$with_included_ltdl"; then
  # We are not being forced to use the included libltdl sources, so
  # decide whether there is a useful installed version we can use.
  AC_CHECK_HEADER([ltdl.h],
      [AC_CHECK_DECL([lt_dlinterface_register],
	   [AC_CHECK_LIB([ltdl], [lt_dladvise_preload],
	       [with_included_ltdl=no],
	       [with_included_ltdl=yes])],
	   [with_included_ltdl=yes],
	   [AC_INCLUDES_DEFAULT
	    #include <ltdl.h>])],
      [with_included_ltdl=yes],
      [AC_INCLUDES_DEFAULT]
  )
fi

dnl If neither LT_CONFIG_LTDL_DIR, LTDL_CONVENIENCE nor LTDL_INSTALLABLE
dnl was called yet, then for old times' sake, we assume libltdl is in an
dnl eponymous directory:
AC_PROVIDE_IFELSE([LT_CONFIG_LTDL_DIR], [], [_LT_CONFIG_LTDL_DIR([libltdl])])

AC_ARG_WITH([ltdl_include],
    [AS_HELP_STRING([--with-ltdl-include=DIR],
                    [use the ltdl headers installed in DIR])])

if test -n "$with_ltdl_include"; then
  if test -f "$with_ltdl_include/ltdl.h"; then :
  else
    AC_MSG_ERROR([invalid ltdl include directory: '$with_ltdl_include'])
  fi
else
  with_ltdl_include=no
fi

AC_ARG_WITH([ltdl_lib],
    [AS_HELP_STRING([--with-ltdl-lib=DIR],
                    [use the libltdl.la installed in DIR])])

if test -n "$with_ltdl_lib"; then
  if test -f "$with_ltdl_lib/libltdl.la"; then :
  else
    AC_MSG_ERROR([invalid ltdl library directory: '$with_ltdl_lib'])
  fi
else
  with_ltdl_lib=no
fi

case ,$with_included_ltdl,$with_ltdl_include,$with_ltdl_lib, in
  ,yes,no,no,)
	m4_case(m4_default(_LTDL_TYPE, [convenience]),
	    [convenience], [_LTDL_CONVENIENCE],
	    [installable], [_LTDL_INSTALLABLE],
	  [m4_fatal([unknown libltdl build type: ]_LTDL_TYPE)])
	;;
  ,no,no,no,)
	# If the included ltdl is not to be used, then use the
	# preinstalled libltdl we found.
	AC_DEFINE([HAVE_LTDL], [1],
	  [Define this if a modern libltdl is already installed])
	LIBLTDL=-lltdl
	LTDLDEPS=
	LTDLINCL=
	;;
  ,no*,no,*)
	AC_MSG_ERROR(['--with-ltdl-include' and '--with-ltdl-lib' options must be used together])
	;;
  *)	with_included_ltdl=no
	LIBLTDL="-L$with_ltdl_lib -lltdl"
	LTDLDEPS=
	LTDLINCL=-I$with_ltdl_include
	;;
esac
INCLTDL=$LTDLINCL

# Report our decision...
AC_MSG_CHECKING([where to find libltdl headers])
AC_MSG_RESULT([$LTDLINCL])
AC_MSG_CHECKING([where to find libltdl library])
AC_MSG_RESULT([$LIBLTDL])

_LTDL_SETUP

dnl restore autoconf definition.
m4_popdef([AC_LIBOBJ])
m4_popdef([AC_LIBSOURCES])

AC_CONFIG_COMMANDS_PRE([
    _ltdl_libobjs=
    _ltdl_ltlibobjs=
    if test -n "$_LT_LIBOBJS"; then
      # Remove the extension.
      _lt_sed_drop_objext='s/\.o$//;s/\.obj$//'
      for i in `for i in $_LT_LIBOBJS; do echo "$i"; done | sed "$_lt_sed_drop_objext" | sort -u`; do
        _ltdl_libobjs="$_ltdl_libobjs $lt_libobj_prefix$i.$ac_objext"
        _ltdl_ltlibobjs="$_ltdl_ltlibobjs $lt_libobj_prefix$i.lo"
      done
    fi
    AC_SUBST([ltdl_LIBOBJS], [$_ltdl_libobjs])
    AC_SUBST([ltdl_LTLIBOBJS], [$_ltdl_ltlibobjs])
])

# Only expand once:
m4_define([LTDL_INIT])
])
m4trace:/usr/share/aclocal/ltdl.m4:352: -1- AU_DEFUN([AC_LIB_LTDL], [LTDL_INIT($@)])
m4trace:/usr/share/aclocal/ltdl.m4:352: -1- AC_DEFUN([AC_LIB_LTDL], [AC_DIAGNOSE([obsolete], [The macro `AC_LIB_LTDL' is obsolete.
You should run autoupdate.])dnl
LTDL_INIT($@)])
m4trace:/usr/share/aclocal/ltdl.m4:353: -1- AU_DEFUN([AC_WITH_LTDL], [LTDL_INIT($@)])
m4trace:/usr/share/aclocal/ltdl.m4:353: -1- AC_DEFUN([AC_WITH_LTDL], [AC_DIAGNOSE([obsolete], [The macro `AC_WITH_LTDL' is obsolete.
You should run autoupdate.])dnl
LTDL_INIT($@)])
m4trace:/usr/share/aclocal/ltdl.m4:354: -1- AU_DEFUN([LT_WITH_LTDL], [LTDL_INIT($@)])
m4trace:/usr/share/aclocal/ltdl.m4:354: -1- AC_DEFUN([LT_WITH_LTDL], [AC_DIAGNOSE([obsolete], [The macro `LT_WITH_LTDL' is obsolete.
You should run autoupdate.])dnl
LTDL_INIT($@)])
m4trace:/usr/share/aclocal/ltdl.m4:367: -1- AC_DEFUN([_LTDL_SETUP], [AC_REQUIRE([AC_PROG_CC])dnl
AC_REQUIRE([LT_SYS_MODULE_EXT])dnl
AC_REQUIRE([LT_SYS_MODULE_PATH])dnl
AC_REQUIRE([LT_SYS_DLSEARCH_PATH])dnl
AC_REQUIRE([LT_LIB_DLLOAD])dnl
AC_REQUIRE([LT_SYS_SYMBOL_USCORE])dnl
AC_REQUIRE([LT_FUNC_DLSYM_USCORE])dnl
AC_REQUIRE([LT_SYS_DLOPEN_DEPLIBS])dnl
AC_REQUIRE([LT_FUNC_ARGZ])dnl

m4_require([_LT_CHECK_OBJDIR])dnl
m4_require([_LT_HEADER_DLFCN])dnl
m4_require([_LT_CHECK_DLPREOPEN])dnl
m4_require([_LT_DECL_SED])dnl

dnl Don't require this, or it will be expanded earlier than the code
dnl that sets the variables it relies on:
_LT_ENABLE_INSTALL

dnl _LTDL_MODE specific code must be called at least once:
_LTDL_MODE_DISPATCH

# In order that ltdl.c can compile, find out the first AC_CONFIG_HEADERS
# the user used.  This is so that ltdl.h can pick up the parent projects
# config.h file, The first file in AC_CONFIG_HEADERS must contain the
# definitions required by ltdl.c.
# FIXME: Remove use of undocumented AC_LIST_HEADERS (2.59 compatibility).
AC_CONFIG_COMMANDS_PRE([dnl
m4_pattern_allow([^LT_CONFIG_H$])dnl
m4_ifset([AH_HEADER],
    [LT_CONFIG_H=AH_HEADER],
    [m4_ifset([AC_LIST_HEADERS],
	    [LT_CONFIG_H=`echo "AC_LIST_HEADERS" | $SED 's|^[[      ]]*||;s|[[ :]].*$||'`],
	[])])])
AC_SUBST([LT_CONFIG_H])

AC_CHECK_HEADERS([unistd.h dl.h sys/dl.h dld.h mach-o/dyld.h dirent.h],
	[], [], [AC_INCLUDES_DEFAULT])

AC_CHECK_FUNCS([closedir opendir readdir], [], [AC_LIBOBJ([lt__dirent])])
AC_CHECK_FUNCS([strlcat strlcpy], [], [AC_LIBOBJ([lt__strl])])

m4_pattern_allow([LT_LIBEXT])dnl
AC_DEFINE_UNQUOTED([LT_LIBEXT],["$libext"],[The archive extension])

name=
eval "lt_libprefix=\"$libname_spec\""
m4_pattern_allow([LT_LIBPREFIX])dnl
AC_DEFINE_UNQUOTED([LT_LIBPREFIX],["$lt_libprefix"],[The archive prefix])

name=ltdl
eval "LTDLOPEN=\"$libname_spec\""
AC_SUBST([LTDLOPEN])
])
m4trace:/usr/share/aclocal/ltdl.m4:443: -1- AC_DEFUN([LT_SYS_DLOPEN_DEPLIBS], [AC_REQUIRE([AC_CANONICAL_HOST])dnl
AC_CACHE_CHECK([whether deplibs are loaded by dlopen],
  [lt_cv_sys_dlopen_deplibs],
  [# PORTME does your system automatically load deplibs for dlopen?
  # or its logical equivalent (e.g. shl_load for HP-UX < 11)
  # For now, we just catch OSes we know something about -- in the
  # future, we'll try test this programmatically.
  lt_cv_sys_dlopen_deplibs=unknown
  case $host_os in
  aix3*|aix4.1.*|aix4.2.*)
    # Unknown whether this is true for these versions of AIX, but
    # we want this 'case' here to explicitly catch those versions.
    lt_cv_sys_dlopen_deplibs=unknown
    ;;
  aix[[4-9]]*)
    lt_cv_sys_dlopen_deplibs=yes
    ;;
  amigaos*)
    case $host_cpu in
    powerpc)
      lt_cv_sys_dlopen_deplibs=no
      ;;
    esac
    ;;
  bitrig*)
    lt_cv_sys_dlopen_deplibs=yes
    ;;
  darwin*)
    # Assuming the user has installed a libdl from somewhere, this is true
    # If you are looking for one http://www.opendarwin.org/projects/dlcompat
    lt_cv_sys_dlopen_deplibs=yes
    ;;
  freebsd* | dragonfly*)
    lt_cv_sys_dlopen_deplibs=yes
    ;;
  gnu* | linux* | k*bsd*-gnu | kopensolaris*-gnu)
    # GNU and its variants, using gnu ld.so (Glibc)
    lt_cv_sys_dlopen_deplibs=yes
    ;;
  hpux10*|hpux11*)
    lt_cv_sys_dlopen_deplibs=yes
    ;;
  interix*)
    lt_cv_sys_dlopen_deplibs=yes
    ;;
  irix[[12345]]*|irix6.[[01]]*)
    # Catch all versions of IRIX before 6.2, and indicate that we don't
    # know how it worked for any of those versions.
    lt_cv_sys_dlopen_deplibs=unknown
    ;;
  irix*)
    # The case above catches anything before 6.2, and it's known that
    # at 6.2 and later dlopen does load deplibs.
    lt_cv_sys_dlopen_deplibs=yes
    ;;
  netbsd* | netbsdelf*-gnu)
    lt_cv_sys_dlopen_deplibs=yes
    ;;
  openbsd*)
    lt_cv_sys_dlopen_deplibs=yes
    ;;
  osf[[1234]]*)
    # dlopen did load deplibs (at least at 4.x), but until the 5.x series,
    # it did *not* use an RPATH in a shared library to find objects the
    # library depends on, so we explicitly say 'no'.
    lt_cv_sys_dlopen_deplibs=no
    ;;
  osf5.0|osf5.0a|osf5.1)
    # dlopen *does* load deplibs and with the right loader patch applied
    # it even uses RPATH in a shared library to search for shared objects
    # that the library depends on, but there's no easy way to know if that
    # patch is installed.  Since this is the case, all we can really
    # say is unknown -- it depends on the patch being installed.  If
    # it is, this changes to 'yes'.  Without it, it would be 'no'.
    lt_cv_sys_dlopen_deplibs=unknown
    ;;
  osf*)
    # the two cases above should catch all versions of osf <= 5.1.  Read
    # the comments above for what we know about them.
    # At > 5.1, deplibs are loaded *and* any RPATH in a shared library
    # is used to find them so we can finally say 'yes'.
    lt_cv_sys_dlopen_deplibs=yes
    ;;
  qnx*)
    lt_cv_sys_dlopen_deplibs=yes
    ;;
  solaris*)
    lt_cv_sys_dlopen_deplibs=yes
    ;;
  sysv5* | sco3.2v5* | sco5v6* | unixware* | OpenUNIX* | sysv4*uw2*)
    libltdl_cv_sys_dlopen_deplibs=yes
    ;;
  esac
  ])
if test yes != "$lt_cv_sys_dlopen_deplibs"; then
 AC_DEFINE([LTDL_DLOPEN_DEPLIBS], [1],
    [Define if the OS needs help to load dependent libraries for dlopen().])
fi
])
m4trace:/usr/share/aclocal/ltdl.m4:545: -1- AU_DEFUN([AC_LTDL_SYS_DLOPEN_DEPLIBS], [m4_if($#, 0, [LT_SYS_DLOPEN_DEPLIBS], [LT_SYS_DLOPEN_DEPLIBS($@)])])
m4trace:/usr/share/aclocal/ltdl.m4:545: -1- AC_DEFUN([AC_LTDL_SYS_DLOPEN_DEPLIBS], [AC_DIAGNOSE([obsolete], [The macro `AC_LTDL_SYS_DLOPEN_DEPLIBS' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [LT_SYS_DLOPEN_DEPLIBS], [LT_SYS_DLOPEN_DEPLIBS($@)])])
m4trace:/usr/share/aclocal/ltdl.m4:552: -1- AC_DEFUN([LT_SYS_MODULE_EXT], [m4_require([_LT_SYS_DYNAMIC_LINKER])dnl
AC_CACHE_CHECK([what extension is used for runtime loadable modules],
  [libltdl_cv_shlibext],
[
module=yes
eval libltdl_cv_shlibext=$shrext_cmds
module=no
eval libltdl_cv_shrext=$shrext_cmds
  ])
if test -n "$libltdl_cv_shlibext"; then
  m4_pattern_allow([LT_MODULE_EXT])dnl
  AC_DEFINE_UNQUOTED([LT_MODULE_EXT], ["$libltdl_cv_shlibext"],
    [Define to the extension used for runtime loadable modules, say, ".so".])
fi
if test "$libltdl_cv_shrext" != "$libltdl_cv_shlibext"; then
  m4_pattern_allow([LT_SHARED_EXT])dnl
  AC_DEFINE_UNQUOTED([LT_SHARED_EXT], ["$libltdl_cv_shrext"],
    [Define to the shared library suffix, say, ".dylib".])
fi
if test -n "$shared_archive_member_spec"; then
  m4_pattern_allow([LT_SHARED_LIB_MEMBER])dnl
  AC_DEFINE_UNQUOTED([LT_SHARED_LIB_MEMBER], ["($shared_archive_member_spec.o)"],
    [Define to the shared archive member specification, say "(shr.o)".])
fi
])
m4trace:/usr/share/aclocal/ltdl.m4:580: -1- AU_DEFUN([AC_LTDL_SHLIBEXT], [m4_if($#, 0, [LT_SYS_MODULE_EXT], [LT_SYS_MODULE_EXT($@)])])
m4trace:/usr/share/aclocal/ltdl.m4:580: -1- AC_DEFUN([AC_LTDL_SHLIBEXT], [AC_DIAGNOSE([obsolete], [The macro `AC_LTDL_SHLIBEXT' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [LT_SYS_MODULE_EXT], [LT_SYS_MODULE_EXT($@)])])
m4trace:/usr/share/aclocal/ltdl.m4:587: -1- AC_DEFUN([LT_SYS_MODULE_PATH], [m4_require([_LT_SYS_DYNAMIC_LINKER])dnl
AC_CACHE_CHECK([what variable specifies run-time module search path],
  [lt_cv_module_path_var], [lt_cv_module_path_var=$shlibpath_var])
if test -n "$lt_cv_module_path_var"; then
  m4_pattern_allow([LT_MODULE_PATH_VAR])dnl
  AC_DEFINE_UNQUOTED([LT_MODULE_PATH_VAR], ["$lt_cv_module_path_var"],
    [Define to the name of the environment variable that determines the run-time module search path.])
fi
])
m4trace:/usr/share/aclocal/ltdl.m4:599: -1- AU_DEFUN([AC_LTDL_SHLIBPATH], [m4_if($#, 0, [LT_SYS_MODULE_PATH], [LT_SYS_MODULE_PATH($@)])])
m4trace:/usr/share/aclocal/ltdl.m4:599: -1- AC_DEFUN([AC_LTDL_SHLIBPATH], [AC_DIAGNOSE([obsolete], [The macro `AC_LTDL_SHLIBPATH' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [LT_SYS_MODULE_PATH], [LT_SYS_MODULE_PATH($@)])])
m4trace:/usr/share/aclocal/ltdl.m4:606: -1- AC_DEFUN([LT_SYS_DLSEARCH_PATH], [m4_require([_LT_SYS_DYNAMIC_LINKER])dnl
AC_CACHE_CHECK([for the default library search path],
  [lt_cv_sys_dlsearch_path],
  [lt_cv_sys_dlsearch_path=$sys_lib_dlsearch_path_spec])
if test -n "$lt_cv_sys_dlsearch_path"; then
  sys_dlsearch_path=
  for dir in $lt_cv_sys_dlsearch_path; do
    if test -z "$sys_dlsearch_path"; then
      sys_dlsearch_path=$dir
    else
      sys_dlsearch_path=$sys_dlsearch_path$PATH_SEPARATOR$dir
    fi
  done
  m4_pattern_allow([LT_DLSEARCH_PATH])dnl
  AC_DEFINE_UNQUOTED([LT_DLSEARCH_PATH], ["$sys_dlsearch_path"],
    [Define to the system default library search path.])
fi
])
m4trace:/usr/share/aclocal/ltdl.m4:627: -1- AU_DEFUN([AC_LTDL_SYSSEARCHPATH], [m4_if($#, 0, [LT_SYS_DLSEARCH_PATH], [LT_SYS_DLSEARCH_PATH($@)])])
m4trace:/usr/share/aclocal/ltdl.m4:627: -1- AC_DEFUN([AC_LTDL_SYSSEARCHPATH], [AC_DIAGNOSE([obsolete], [The macro `AC_LTDL_SYSSEARCHPATH' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [LT_SYS_DLSEARCH_PATH], [LT_SYS_DLSEARCH_PATH($@)])])
m4trace:/usr/share/aclocal/ltdl.m4:653: -1- AC_DEFUN([LT_LIB_DLLOAD], [m4_pattern_allow([^LT_DLLOADERS$])
LT_DLLOADERS=
AC_SUBST([LT_DLLOADERS])

AC_LANG_PUSH([C])
lt_dlload_save_LIBS=$LIBS

LIBADD_DLOPEN=
AC_SEARCH_LIBS([dlopen], [dl],
	[AC_DEFINE([HAVE_LIBDL], [1],
		   [Define if you have the libdl library or equivalent.])
	if test "$ac_cv_search_dlopen" != "none required"; then
	  LIBADD_DLOPEN=-ldl
	fi
	libltdl_cv_lib_dl_dlopen=yes
	LT_DLLOADERS="$LT_DLLOADERS ${lt_dlopen_dir+$lt_dlopen_dir/}dlopen.la"],
    [AC_LINK_IFELSE([AC_LANG_PROGRAM([[#if HAVE_DLFCN_H
#  include <dlfcn.h>
#endif
    ]], [[dlopen(0, 0);]])],
	    [AC_DEFINE([HAVE_LIBDL], [1],
		       [Define if you have the libdl library or equivalent.])
	    libltdl_cv_func_dlopen=yes
	    LT_DLLOADERS="$LT_DLLOADERS ${lt_dlopen_dir+$lt_dlopen_dir/}dlopen.la"],
	[AC_CHECK_LIB([svld], [dlopen],
		[AC_DEFINE([HAVE_LIBDL], [1],
			 [Define if you have the libdl library or equivalent.])
	        LIBADD_DLOPEN=-lsvld libltdl_cv_func_dlopen=yes
		LT_DLLOADERS="$LT_DLLOADERS ${lt_dlopen_dir+$lt_dlopen_dir/}dlopen.la"])])])
if test yes = "$libltdl_cv_func_dlopen" || test yes = "$libltdl_cv_lib_dl_dlopen"
then
  lt_save_LIBS=$LIBS
  LIBS="$LIBS $LIBADD_DLOPEN"
  AC_CHECK_FUNCS([dlerror])
  LIBS=$lt_save_LIBS
fi
AC_SUBST([LIBADD_DLOPEN])

LIBADD_SHL_LOAD=
AC_CHECK_FUNC([shl_load],
	[AC_DEFINE([HAVE_SHL_LOAD], [1],
		   [Define if you have the shl_load function.])
	LT_DLLOADERS="$LT_DLLOADERS ${lt_dlopen_dir+$lt_dlopen_dir/}shl_load.la"],
    [AC_CHECK_LIB([dld], [shl_load],
	    [AC_DEFINE([HAVE_SHL_LOAD], [1],
		       [Define if you have the shl_load function.])
	    LT_DLLOADERS="$LT_DLLOADERS ${lt_dlopen_dir+$lt_dlopen_dir/}shl_load.la"
	    LIBADD_SHL_LOAD=-ldld])])
AC_SUBST([LIBADD_SHL_LOAD])

case $host_os in
darwin[[1567]].*)
# We only want this for pre-Mac OS X 10.4.
  AC_CHECK_FUNC([_dyld_func_lookup],
	[AC_DEFINE([HAVE_DYLD], [1],
		   [Define if you have the _dyld_func_lookup function.])
	LT_DLLOADERS="$LT_DLLOADERS ${lt_dlopen_dir+$lt_dlopen_dir/}dyld.la"])
  ;;
beos*)
  LT_DLLOADERS="$LT_DLLOADERS ${lt_dlopen_dir+$lt_dlopen_dir/}load_add_on.la"
  ;;
cygwin* | mingw* | pw32*)
  AC_CHECK_DECLS([cygwin_conv_path], [], [], [[#include <sys/cygwin.h>]])
  LT_DLLOADERS="$LT_DLLOADERS ${lt_dlopen_dir+$lt_dlopen_dir/}loadlibrary.la"
  ;;
esac

AC_CHECK_LIB([dld], [dld_link],
	[AC_DEFINE([HAVE_DLD], [1],
		   [Define if you have the GNU dld library.])
		LT_DLLOADERS="$LT_DLLOADERS ${lt_dlopen_dir+$lt_dlopen_dir/}dld_link.la"])
AC_SUBST([LIBADD_DLD_LINK])

m4_pattern_allow([^LT_DLPREOPEN$])
LT_DLPREOPEN=
if test -n "$LT_DLLOADERS"
then
  for lt_loader in $LT_DLLOADERS; do
    LT_DLPREOPEN="$LT_DLPREOPEN-dlpreopen $lt_loader "
  done
  AC_DEFINE([HAVE_LIBDLLOADER], [1],
            [Define if libdlloader will be built on this platform])
fi
AC_SUBST([LT_DLPREOPEN])

dnl This isn't used anymore, but set it for backwards compatibility
LIBADD_DL="$LIBADD_DLOPEN $LIBADD_SHL_LOAD"
AC_SUBST([LIBADD_DL])

LIBS=$lt_dlload_save_LIBS
AC_LANG_POP
])
m4trace:/usr/share/aclocal/ltdl.m4:748: -1- AU_DEFUN([AC_LTDL_DLLIB], [m4_if($#, 0, [LT_LIB_DLLOAD], [LT_LIB_DLLOAD($@)])])
m4trace:/usr/share/aclocal/ltdl.m4:748: -1- AC_DEFUN([AC_LTDL_DLLIB], [AC_DIAGNOSE([obsolete], [The macro `AC_LTDL_DLLIB' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [LT_LIB_DLLOAD], [LT_LIB_DLLOAD($@)])])
m4trace:/usr/share/aclocal/ltdl.m4:756: -1- AC_DEFUN([LT_SYS_SYMBOL_USCORE], [m4_require([_LT_CMD_GLOBAL_SYMBOLS])dnl
AC_CACHE_CHECK([for _ prefix in compiled symbols],
  [lt_cv_sys_symbol_underscore],
  [lt_cv_sys_symbol_underscore=no
  cat > conftest.$ac_ext <<_LT_EOF
void nm_test_func(){}
int main(){nm_test_func;return 0;}
_LT_EOF
  if AC_TRY_EVAL(ac_compile); then
    # Now try to grab the symbols.
    ac_nlist=conftest.nm
    if AC_TRY_EVAL(NM conftest.$ac_objext \| $lt_cv_sys_global_symbol_pipe \> $ac_nlist) && test -s "$ac_nlist"; then
      # See whether the symbols have a leading underscore.
      if grep '^. _nm_test_func' "$ac_nlist" >/dev/null; then
        lt_cv_sys_symbol_underscore=yes
      else
        if grep '^. nm_test_func ' "$ac_nlist" >/dev/null; then
	  :
        else
	  echo "configure: cannot find nm_test_func in $ac_nlist" >&AS_MESSAGE_LOG_FD
        fi
      fi
    else
      echo "configure: cannot run $lt_cv_sys_global_symbol_pipe" >&AS_MESSAGE_LOG_FD
    fi
  else
    echo "configure: failed program was:" >&AS_MESSAGE_LOG_FD
    cat conftest.c >&AS_MESSAGE_LOG_FD
  fi
  rm -rf conftest*
  ])
  sys_symbol_underscore=$lt_cv_sys_symbol_underscore
  AC_SUBST([sys_symbol_underscore])
])
m4trace:/usr/share/aclocal/ltdl.m4:793: -1- AU_DEFUN([AC_LTDL_SYMBOL_USCORE], [m4_if($#, 0, [LT_SYS_SYMBOL_USCORE], [LT_SYS_SYMBOL_USCORE($@)])])
m4trace:/usr/share/aclocal/ltdl.m4:793: -1- AC_DEFUN([AC_LTDL_SYMBOL_USCORE], [AC_DIAGNOSE([obsolete], [The macro `AC_LTDL_SYMBOL_USCORE' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [LT_SYS_SYMBOL_USCORE], [LT_SYS_SYMBOL_USCORE($@)])])
m4trace:/usr/share/aclocal/ltdl.m4:800: -1- AC_DEFUN([LT_FUNC_DLSYM_USCORE], [AC_REQUIRE([_LT_COMPILER_PIC])dnl	for lt_prog_compiler_wl
AC_REQUIRE([LT_SYS_SYMBOL_USCORE])dnl	for lt_cv_sys_symbol_underscore
AC_REQUIRE([LT_SYS_MODULE_EXT])dnl	for libltdl_cv_shlibext
if test yes = "$lt_cv_sys_symbol_underscore"; then
  if test yes = "$libltdl_cv_func_dlopen" || test yes = "$libltdl_cv_lib_dl_dlopen"; then
    AC_CACHE_CHECK([whether we have to add an underscore for dlsym],
      [libltdl_cv_need_uscore],
      [libltdl_cv_need_uscore=unknown
      dlsym_uscore_save_LIBS=$LIBS
      LIBS="$LIBS $LIBADD_DLOPEN"
      libname=conftmod # stay within 8.3 filename limits!
      cat >$libname.$ac_ext <<_LT_EOF
[#line $LINENO "configure"
#include "confdefs.h"
/* When -fvisibility=hidden is used, assume the code has been annotated
   correspondingly for the symbols needed.  */
#if defined __GNUC__ && (((__GNUC__ == 3) && (__GNUC_MINOR__ >= 3)) || (__GNUC__ > 3))
int fnord () __attribute__((visibility("default")));
#endif
int fnord () { return 42; }]
_LT_EOF

      # ltfn_module_cmds module_cmds
      # Execute tilde-delimited MODULE_CMDS with environment primed for
      # $module_cmds or $archive_cmds type content.
      ltfn_module_cmds ()
      {( # subshell avoids polluting parent global environment
          module_cmds_save_ifs=$IFS; IFS='~'
          for cmd in @S|@1; do
            IFS=$module_cmds_save_ifs
            libobjs=$libname.$ac_objext; lib=$libname$libltdl_cv_shlibext
            rpath=/not-exists; soname=$libname$libltdl_cv_shlibext; output_objdir=.
            major=; versuffix=; verstring=; deplibs=
            ECHO=echo; wl=$lt_prog_compiler_wl; allow_undefined_flag=
            eval $cmd
          done
          IFS=$module_cmds_save_ifs
      )}

      # Compile a loadable module using libtool macro expansion results.
      $CC $pic_flag -c $libname.$ac_ext
      ltfn_module_cmds "${module_cmds:-$archive_cmds}"

      # Try to fetch fnord with dlsym().
      libltdl_dlunknown=0; libltdl_dlnouscore=1; libltdl_dluscore=2
      cat >conftest.$ac_ext <<_LT_EOF
[#line $LINENO "configure"
#include "confdefs.h"
#if HAVE_DLFCN_H
#include <dlfcn.h>
#endif
#include <stdio.h>
#ifndef RTLD_GLOBAL
#  ifdef DL_GLOBAL
#    define RTLD_GLOBAL DL_GLOBAL
#  else
#    define RTLD_GLOBAL 0
#  endif
#endif
#ifndef RTLD_NOW
#  ifdef DL_NOW
#    define RTLD_NOW DL_NOW
#  else
#    define RTLD_NOW 0
#  endif
#endif
int main () {
  void *handle = dlopen ("`pwd`/$libname$libltdl_cv_shlibext", RTLD_GLOBAL|RTLD_NOW);
  int status = $libltdl_dlunknown;
  if (handle) {
    if (dlsym (handle, "fnord"))
      status = $libltdl_dlnouscore;
    else {
      if (dlsym (handle, "_fnord"))
        status = $libltdl_dluscore;
      else
	puts (dlerror ());
    }
    dlclose (handle);
  } else
    puts (dlerror ());
  return status;
}]
_LT_EOF
      if AC_TRY_EVAL(ac_link) && test -s "conftest$ac_exeext" 2>/dev/null; then
        (./conftest; exit; ) >&AS_MESSAGE_LOG_FD 2>/dev/null
        libltdl_status=$?
        case x$libltdl_status in
          x$libltdl_dlnouscore) libltdl_cv_need_uscore=no ;;
	  x$libltdl_dluscore) libltdl_cv_need_uscore=yes ;;
	  x*) libltdl_cv_need_uscore=unknown ;;
        esac
      fi
      rm -rf conftest* $libname*
      LIBS=$dlsym_uscore_save_LIBS
    ])
  fi
fi

if test yes = "$libltdl_cv_need_uscore"; then
  AC_DEFINE([NEED_USCORE], [1],
    [Define if dlsym() requires a leading underscore in symbol names.])
fi
])
m4trace:/usr/share/aclocal/ltdl.m4:907: -1- AU_DEFUN([AC_LTDL_DLSYM_USCORE], [m4_if($#, 0, [LT_FUNC_DLSYM_USCORE], [LT_FUNC_DLSYM_USCORE($@)])])
m4trace:/usr/share/aclocal/ltdl.m4:907: -1- AC_DEFUN([AC_LTDL_DLSYM_USCORE], [AC_DIAGNOSE([obsolete], [The macro `AC_LTDL_DLSYM_USCORE' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [LT_FUNC_DLSYM_USCORE], [LT_FUNC_DLSYM_USCORE($@)])])
m4trace:/usr/share/aclocal/ltoptions.m4:14: -1- AC_DEFUN([LTOPTIONS_VERSION], [m4_if([1])])
m4trace:/usr/share/aclocal/ltoptions.m4:113: -1- AU_DEFUN([AC_LIBTOOL_DLOPEN], [_LT_SET_OPTION([LT_INIT], [dlopen])
AC_DIAGNOSE([obsolete],
[$0: Remove this warning and the call to _LT_SET_OPTION when you
put the 'dlopen' option into LT_INIT's first parameter.])
])
m4trace:/usr/share/aclocal/ltoptions.m4:113: -1- AC_DEFUN([AC_LIBTOOL_DLOPEN], [AC_DIAGNOSE([obsolete], [The macro `AC_LIBTOOL_DLOPEN' is obsolete.
You should run autoupdate.])dnl
_LT_SET_OPTION([LT_INIT], [dlopen])
AC_DIAGNOSE([obsolete],
[$0: Remove this warning and the call to _LT_SET_OPTION when you
put the 'dlopen' option into LT_INIT's first parameter.])
])
m4trace:/usr/share/aclocal/ltoptions.m4:148: -1- AU_DEFUN([AC_LIBTOOL_WIN32_DLL], [AC_REQUIRE([AC_CANONICAL_HOST])dnl
_LT_SET_OPTION([LT_INIT], [win32-dll])
AC_DIAGNOSE([obsolete],
[$0: Remove this warning and the call to _LT_SET_OPTION when you
put the 'win32-dll' option into LT_INIT's first parameter.])
])
m4trace:/usr/share/aclocal/ltoptions.m4:148: -1- AC_DEFUN([AC_LIBTOOL_WIN32_DLL], [AC_DIAGNOSE([obsolete], [The macro `AC_LIBTOOL_WIN32_DLL' is obsolete.
You should run autoupdate.])dnl
AC_REQUIRE([AC_CANONICAL_HOST])dnl
_LT_SET_OPTION([LT_INIT], [win32-dll])
AC_DIAGNOSE([obsolete],
[$0: Remove this warning and the call to _LT_SET_OPTION when you
put the 'win32-dll' option into LT_INIT's first parameter.])
])
m4trace:/usr/share/aclocal/ltoptions.m4:197: -1- AC_DEFUN([AC_ENABLE_SHARED], [_LT_SET_OPTION([LT_INIT], m4_if([$1], [no], [disable-])[shared])
])
m4trace:/usr/share/aclocal/ltoptions.m4:201: -1- AC_DEFUN([AC_DISABLE_SHARED], [_LT_SET_OPTION([LT_INIT], [disable-shared])
])
m4trace:/usr/share/aclocal/ltoptions.m4:205: -1- AU_DEFUN([AM_ENABLE_SHARED], [AC_ENABLE_SHARED($@)])
m4trace:/usr/share/aclocal/ltoptions.m4:205: -1- AC_DEFUN([AM_ENABLE_SHARED], [AC_DIAGNOSE([obsolete], [The macro `AM_ENABLE_SHARED' is obsolete.
You should run autoupdate.])dnl
AC_ENABLE_SHARED($@)])
m4trace:/usr/share/aclocal/ltoptions.m4:206: -1- AU_DEFUN([AM_DISABLE_SHARED], [AC_DISABLE_SHARED($@)])
m4trace:/usr/share/aclocal/ltoptions.m4:206: -1- AC_DEFUN([AM_DISABLE_SHARED], [AC_DIAGNOSE([obsolete], [The macro `AM_DISABLE_SHARED' is obsolete.
You should run autoupdate.])dnl
AC_DISABLE_SHARED($@)])
m4trace:/usr/share/aclocal/ltoptions.m4:251: -1- AC_DEFUN([AC_ENABLE_STATIC], [_LT_SET_OPTION([LT_INIT], m4_if([$1], [no], [disable-])[static])
])
m4trace:/usr/share/aclocal/ltoptions.m4:255: -1- AC_DEFUN([AC_DISABLE_STATIC], [_LT_SET_OPTION([LT_INIT], [disable-static])
])
m4trace:/usr/share/aclocal/ltoptions.m4:259: -1- AU_DEFUN([AM_ENABLE_STATIC], [AC_ENABLE_STATIC($@)])
m4trace:/usr/share/aclocal/ltoptions.m4:259: -1- AC_DEFUN([AM_ENABLE_STATIC], [AC_DIAGNOSE([obsolete], [The macro `AM_ENABLE_STATIC' is obsolete.
You should run autoupdate.])dnl
AC_ENABLE_STATIC($@)])
m4trace:/usr/share/aclocal/ltoptions.m4:260: -1- AU_DEFUN([AM_DISABLE_STATIC], [AC_DISABLE_STATIC($@)])
m4trace:/usr/share/aclocal/ltoptions.m4:260: -1- AC_DEFUN([AM_DISABLE_STATIC], [AC_DIAGNOSE([obsolete], [The macro `AM_DISABLE_STATIC' is obsolete.
You should run autoupdate.])dnl
AC_DISABLE_STATIC($@)])
m4trace:/usr/share/aclocal/ltoptions.m4:305: -1- AU_DEFUN([AC_ENABLE_FAST_INSTALL], [_LT_SET_OPTION([LT_INIT], m4_if([$1], [no], [disable-])[fast-install])
AC_DIAGNOSE([obsolete],
[$0: Remove this warning and the call to _LT_SET_OPTION when you put
the 'fast-install' option into LT_INIT's first parameter.])
])
m4trace:/usr/share/aclocal/ltoptions.m4:305: -1- AC_DEFUN([AC_ENABLE_FAST_INSTALL], [AC_DIAGNOSE([obsolete], [The macro `AC_ENABLE_FAST_INSTALL' is obsolete.
You should run autoupdate.])dnl
_LT_SET_OPTION([LT_INIT], m4_if([$1], [no], [disable-])[fast-install])
AC_DIAGNOSE([obsolete],
[$0: Remove this warning and the call to _LT_SET_OPTION when you put
the 'fast-install' option into LT_INIT's first parameter.])
])
m4trace:/usr/share/aclocal/ltoptions.m4:312: -1- AU_DEFUN([AC_DISABLE_FAST_INSTALL], [_LT_SET_OPTION([LT_INIT], [disable-fast-install])
AC_DIAGNOSE([obsolete],
[$0: Remove this warning and the call to _LT_SET_OPTION when you put
the 'disable-fast-install' option into LT_INIT's first parameter.])
])
m4trace:/usr/share/aclocal/ltoptions.m4:312: -1- AC_DEFUN([AC_DISABLE_FAST_INSTALL], [AC_DIAGNOSE([obsolete], [The macro `AC_DISABLE_FAST_INSTALL' is obsolete.
You should run autoupdate.])dnl
_LT_SET_OPTION([LT_INIT], [disable-fast-install])
AC_DIAGNOSE([obsolete],
[$0: Remove this warning and the call to _LT_SET_OPTION when you put
the 'disable-fast-install' option into LT_INIT's first parameter.])
])
m4trace:/usr/share/aclocal/ltoptions.m4:411: -1- AU_DEFUN([AC_LIBTOOL_PICMODE], [_LT_SET_OPTION([LT_INIT], [pic-only])
AC_DIAGNOSE([obsolete],
[$0: Remove this warning and the call to _LT_SET_OPTION when you
put the 'pic-only' option into LT_INIT's first parameter.])
])
m4trace:/usr/share/aclocal/ltoptions.m4:411: -1- AC_DEFUN([AC_LIBTOOL_PICMODE], [AC_DIAGNOSE([obsolete], [The macro `AC_LIBTOOL_PICMODE' is obsolete.
You should run autoupdate.])dnl
_LT_SET_OPTION([LT_INIT], [pic-only])
AC_DIAGNOSE([obsolete],
[$0: Remove this warning and the call to _LT_SET_OPTION when you
put the 'pic-only' option into LT_INIT's first parameter.])
])
m4trace:/usr/share/aclocal/ltsugar.m4:14: -1- AC_DEFUN([LTSUGAR_VERSION], [m4_if([0.1])])
m4trace:/usr/share/aclocal/ltversion.m4:18: -1- AC_DEFUN([LTVERSION_VERSION], [macro_version='2.4.6'
macro_revision='2.4.6'
_LT_DECL(, macro_version, 0, [Which release of libtool.m4 was used?])
_LT_DECL(, macro_revision, 0)
])
m4trace:/usr/share/aclocal/lt~obsolete.m4:37: -1- AC_DEFUN([LTOBSOLETE_VERSION], [m4_if([1])])
m4trace:/usr/share/aclocal/lt~obsolete.m4:41: -1- AC_DEFUN([_LT_AC_PROG_ECHO_BACKSLASH])
m4trace:/usr/share/aclocal/lt~obsolete.m4:42: -1- AC_DEFUN([_LT_AC_SHELL_INIT])
m4trace:/usr/share/aclocal/lt~obsolete.m4:43: -1- AC_DEFUN([_LT_AC_SYS_LIBPATH_AIX])
m4trace:/usr/share/aclocal/lt~obsolete.m4:45: -1- AC_DEFUN([_LT_AC_TAGVAR])
m4trace:/usr/share/aclocal/lt~obsolete.m4:46: -1- AC_DEFUN([AC_LTDL_ENABLE_INSTALL])
m4trace:/usr/share/aclocal/lt~obsolete.m4:47: -1- AC_DEFUN([AC_LTDL_PREOPEN])
m4trace:/usr/share/aclocal/lt~obsolete.m4:48: -1- AC_DEFUN([_LT_AC_SYS_COMPILER])
m4trace:/usr/share/aclocal/lt~obsolete.m4:49: -1- AC_DEFUN([_LT_AC_LOCK])
m4trace:/usr/share/aclocal/lt~obsolete.m4:50: -1- AC_DEFUN([AC_LIBTOOL_SYS_OLD_ARCHIVE])
m4trace:/usr/share/aclocal/lt~obsolete.m4:51: -1- AC_DEFUN([_LT_AC_TRY_DLOPEN_SELF])
m4trace:/usr/share/aclocal/lt~obsolete.m4:52: -1- AC_DEFUN([AC_LIBTOOL_PROG_CC_C_O])
m4trace:/usr/share/aclocal/lt~obsolete.m4:53: -1- AC_DEFUN([AC_LIBTOOL_SYS_HARD_LINK_LOCKS])
m4trace:/usr/share/aclocal/lt~obsolete.m4:54: -1- AC_DEFUN([AC_LIBTOOL_OBJDIR])
m4trace:/usr/share/aclocal/lt~obsolete.m4:55: -1- AC_DEFUN([AC_LTDL_OBJDIR])
m4trace:/usr/share/aclocal/lt~obsolete.m4:56: -1- AC_DEFUN([AC_LIBTOOL_PROG_LD_HARDCODE_LIBPATH])
m4trace:/usr/share/aclocal/lt~obsolete.m4:57: -1- AC_DEFUN([AC_LIBTOOL_SYS_LIB_STRIP])
m4trace:/usr/share/aclocal/lt~obsolete.m4:58: -1- AC_DEFUN([AC_PATH_MAGIC])
m4trace:/usr/share/aclocal/lt~obsolete.m4:59: -1- AC_DEFUN([AC_PROG_LD_GNU])
m4trace:/usr/share/aclocal/lt~obsolete.m4:60: -1- AC_DEFUN([AC_PROG_LD_RELOAD_FLAG])
m4trace:/usr/share/aclocal/lt~obsolete.m4:61: -1- AC_DEFUN([AC_DEPLIBS_CHECK_METHOD])
m4trace:/usr/share/aclocal/lt~obsolete.m4:62: -1- AC_DEFUN([AC_LIBTOOL_PROG_COMPILER_NO_RTTI])
m4trace:/usr/share/aclocal/lt~obsolete.m4:63: -1- AC_DEFUN([AC_LIBTOOL_SYS_GLOBAL_SYMBOL_PIPE])
m4trace:/usr/share/aclocal/lt~obsolete.m4:64: -1- AC_DEFUN([AC_LIBTOOL_PROG_COMPILER_PIC])
m4trace:/usr/share/aclocal/lt~obsolete.m4:65: -1- AC_DEFUN([AC_LIBTOOL_PROG_LD_SHLIBS])
m4trace:/usr/share/aclocal/lt~obsolete.m4:66: -1- AC_DEFUN([AC_LIBTOOL_POSTDEP_PREDEP])
m4trace:/usr/share/aclocal/lt~obsolete.m4:67: -1- AC_DEFUN([LT_AC_PROG_EGREP])
m4trace:/usr/share/aclocal/lt~obsolete.m4:72: -1- AC_DEFUN([_AC_PROG_LIBTOOL])
m4trace:/usr/share/aclocal/lt~obsolete.m4:73: -1- AC_DEFUN([AC_LIBTOOL_SETUP])
m4trace:/usr/share/aclocal/lt~obsolete.m4:74: -1- AC_DEFUN([_LT_AC_CHECK_DLFCN])
m4trace:/usr/share/aclocal/lt~obsolete.m4:75: -1- AC_DEFUN([AC_LIBTOOL_SYS_DYNAMIC_LINKER])
m4trace:/usr/share/aclocal/lt~obsolete.m4:76: -1- AC_DEFUN([_LT_AC_TAGCONFIG])
m4trace:/usr/share/aclocal/lt~obsolete.m4:78: -1- AC_DEFUN([_LT_AC_LANG_CXX])
m4trace:/usr/share/aclocal/lt~obsolete.m4:79: -1- AC_DEFUN([_LT_AC_LANG_F77])
m4trace:/usr/share/aclocal/lt~obsolete.m4:80: -1- AC_DEFUN([_LT_AC_LANG_GCJ])
m4trace:/usr/share/aclocal/lt~obsolete.m4:81: -1- AC_DEFUN([AC_LIBTOOL_LANG_C_CONFIG])
m4trace:/usr/share/aclocal/lt~obsolete.m4:82: -1- AC_DEFUN([_LT_AC_LANG_C_CONFIG])
m4trace:/usr/share/aclocal/lt~obsolete.m4:83: -1- AC_DEFUN([AC_LIBTOOL_LANG_CXX_CONFIG])
m4trace:/usr/share/aclocal/lt~obsolete.m4:84: -1- AC_DEFUN([_LT_AC_LANG_CXX_CONFIG])
m4trace:/usr/share/aclocal/lt~obsolete.m4:85: -1- AC_DEFUN([AC_LIBTOOL_LANG_F77_CONFIG])
m4trace:/usr/share/aclocal/lt~obsolete.m4:86: -1- AC_DEFUN([_LT_AC_LANG_F77_CONFIG])
m4trace:/usr/share/aclocal/lt~obsolete.m4:87: -1- AC_DEFUN([AC_LIBTOOL_LANG_GCJ_CONFIG])
m4trace:/usr/share/aclocal/lt~obsolete.m4:88: -1- AC_DEFUN([_LT_AC_LANG_GCJ_CONFIG])
m4trace:/usr/share/aclocal/lt~obsolete.m4:89: -1- AC_DEFUN([AC_LIBTOOL_LANG_RC_CONFIG])
m4trace:/usr/share/aclocal/lt~obsolete.m4:90: -1- AC_DEFUN([_LT_AC_LANG_RC_CONFIG])
m4trace:/usr/share/aclocal/lt~obsolete.m4:91: -1- AC_DEFUN([AC_LIBTOOL_CONFIG])
m4trace:/usr/share/aclocal/lt~obsolete.m4:92: -1- AC_DEFUN([_LT_AC_FILE_LTDLL_C])
m4trace:/usr/share/aclocal/lt~obsolete.m4:94: -1- AC_DEFUN([_LT_AC_PROG_CXXCPP])
m4trace:/usr/share/aclocal/lt~obsolete.m4:97: -1- AC_DEFUN([_LT_PROG_F77])
m4trace:/usr/share/aclocal/lt~obsolete.m4:98: -1- AC_DEFUN([_LT_PROG_FC])
m4trace:/usr/share/aclocal/lt~obsolete.m4:99: -1- AC_DEFUN([_LT_PROG_CXX])
m4trace:/usr/share/aclocal/pkg.m4:58: -1- AC_DEFUN([PKG_PROG_PKG_CONFIG], [m4_pattern_forbid([^_?PKG_[A-Z_]+$])
m4_pattern_allow([^PKG_CONFIG(_(PATH|LIBDIR|SYSROOT_DIR|ALLOW_SYSTEM_(CFLAGS|LIBS)))?$])
m4_pattern_allow([^PKG_CONFIG_(DISABLE_UNINSTALLED|TOP_BUILD_DIR|DEBUG_SPEW)$])
AC_ARG_VAR([PKG_CONFIG], [path to pkg-config utility])
AC_ARG_VAR([PKG_CONFIG_PATH], [directories to add to pkg-config's search path])
AC_ARG_VAR([PKG_CONFIG_LIBDIR], [path overriding pkg-config's built-in search path])

if test "x$ac_cv_env_PKG_CONFIG_set" != "xset"; then
	AC_PATH_TOOL([PKG_CONFIG], [pkg-config])
fi
if test -n "$PKG_CONFIG"; then
	_pkg_min_version=m4_default([$1], [0.9.0])
	AC_MSG_CHECKING([pkg-config is at least version $_pkg_min_version])
	if $PKG_CONFIG --atleast-pkgconfig-version $_pkg_min_version; then
		AC_MSG_RESULT([yes])
	else
		AC_MSG_RESULT([no])
		PKG_CONFIG=""
	fi
fi[]dnl
])
m4trace:/usr/share/aclocal/pkg.m4:92: -1- AC_DEFUN([PKG_CHECK_EXISTS], [AC_REQUIRE([PKG_PROG_PKG_CONFIG])dnl
if test -n "$PKG_CONFIG" && \
    AC_RUN_LOG([$PKG_CONFIG --exists --print-errors "$1"]); then
  m4_default([$2], [:])
m4_ifvaln([$3], [else
  $3])dnl
fi])
m4trace:/usr/share/aclocal/pkg.m4:121: -1- AC_DEFUN([_PKG_SHORT_ERRORS_SUPPORTED], [AC_REQUIRE([PKG_PROG_PKG_CONFIG])
if $PKG_CONFIG --atleast-pkgconfig-version 0.20; then
        _pkg_short_errors_supported=yes
else
        _pkg_short_errors_supported=no
fi[]dnl
])
m4trace:/usr/share/aclocal/pkg.m4:139: -1- AC_DEFUN([PKG_CHECK_MODULES], [AC_REQUIRE([PKG_PROG_PKG_CONFIG])dnl
AC_ARG_VAR([$1][_CFLAGS], [C compiler flags for $1, overriding pkg-config])dnl
AC_ARG_VAR([$1][_LIBS], [linker flags for $1, overriding pkg-config])dnl

pkg_failed=no
AC_MSG_CHECKING([for $1])

_PKG_CONFIG([$1][_CFLAGS], [cflags], [$2])
_PKG_CONFIG([$1][_LIBS], [libs], [$2])

m4_define([_PKG_TEXT], [Alternatively, you may set the environment variables $1[]_CFLAGS
and $1[]_LIBS to avoid the need to call pkg-config.
See the pkg-config man page for more details.])

if test $pkg_failed = yes; then
   	AC_MSG_RESULT([no])
        _PKG_SHORT_ERRORS_SUPPORTED
        if test $_pkg_short_errors_supported = yes; then
	        $1[]_PKG_ERRORS=`$PKG_CONFIG --short-errors --print-errors --cflags --libs "$2" 2>&1`
        else 
	        $1[]_PKG_ERRORS=`$PKG_CONFIG --print-errors --cflags --libs "$2" 2>&1`
        fi
	# Put the nasty error message in config.log where it belongs
	echo "$$1[]_PKG_ERRORS" >&AS_MESSAGE_LOG_FD

	m4_default([$4], [AC_MSG_ERROR(
[Package requirements ($2) were not met:

$$1_PKG_ERRORS

Consider adjusting the PKG_CONFIG_PATH environment variable if you
installed software in a non-standard prefix.

_PKG_TEXT])[]dnl
        ])
elif test $pkg_failed = untried; then
     	AC_MSG_RESULT([no])
	m4_default([$4], [AC_MSG_FAILURE(
[The pkg-config script could not be found or is too old.  Make sure it
is in your PATH or set the PKG_CONFIG environment variable to the full
path to pkg-config.

_PKG_TEXT

To get pkg-config, see <http://pkg-config.freedesktop.org/>.])[]dnl
        ])
else
	$1[]_CFLAGS=$pkg_cv_[]$1[]_CFLAGS
	$1[]_LIBS=$pkg_cv_[]$1[]_LIBS
        AC_MSG_RESULT([yes])
	$3
fi[]dnl
])
m4trace:/usr/share/aclocal/pkg.m4:208: -1- AC_DEFUN([PKG_CHECK_MODULES_STATIC], [AC_REQUIRE([PKG_PROG_PKG_CONFIG])dnl
_save_PKG_CONFIG=$PKG_CONFIG
PKG_CONFIG="$PKG_CONFIG --static"
PKG_CHECK_MODULES($@)
PKG_CONFIG=$_save_PKG_CONFIG[]dnl
])
m4trace:/usr/share/aclocal/pkg.m4:226: -1- AC_DEFUN([PKG_INSTALLDIR], [m4_pushdef([pkg_default], [m4_default([$1], ['${libdir}/pkgconfig'])])
m4_pushdef([pkg_description],
    [pkg-config installation directory @<:@]pkg_default[@:>@])
AC_ARG_WITH([pkgconfigdir],
    [AS_HELP_STRING([--with-pkgconfigdir], pkg_description)],,
    [with_pkgconfigdir=]pkg_default)
AC_SUBST([pkgconfigdir], [$with_pkgconfigdir])
m4_popdef([pkg_default])
m4_popdef([pkg_description])
])
m4trace:/usr/share/aclocal/pkg.m4:248: -1- AC_DEFUN([PKG_NOARCH_INSTALLDIR], [m4_pushdef([pkg_default], [m4_default([$1], ['${datadir}/pkgconfig'])])
m4_pushdef([pkg_description],
    [pkg-config arch-independent installation directory @<:@]pkg_default[@:>@])
AC_ARG_WITH([noarch-pkgconfigdir],
    [AS_HELP_STRING([--with-noarch-pkgconfigdir], pkg_description)],,
    [with_noarch_pkgconfigdir=]pkg_default)
AC_SUBST([noarch_pkgconfigdir], [$with_noarch_pkgconfigdir])
m4_popdef([pkg_default])
m4_popdef([pkg_description])
])
m4trace:/usr/share/aclocal/pkg.m4:267: -1- AC_DEFUN([PKG_CHECK_VAR], [AC_REQUIRE([PKG_PROG_PKG_CONFIG])dnl
AC_ARG_VAR([$1], [value of $3 for $2, overriding pkg-config])dnl

_PKG_CONFIG([$1], [variable="][$3]["], [$2])
AS_VAR_COPY([$1], [pkg_cv_][$1])

AS_VAR_IF([$1], [""], [$5], [$4])dnl
])
m4trace:/usr/share/aclocal-1.16/amversion.m4:14: -1- AC_DEFUN([AM_AUTOMAKE_VERSION], [am__api_version='1.16'
dnl Some users find AM_AUTOMAKE_VERSION and mistake it for a way to
dnl require some minimum version.  Point them to the right macro.
m4_if([$1], [1.16.1], [],
      [AC_FATAL([Do not call $0, use AM_INIT_AUTOMAKE([$1]).])])dnl
])
m4trace:/usr/share/aclocal-1.16/amversion.m4:33: -1- AC_DEFUN([AM_SET_CURRENT_AUTOMAKE_VERSION], [AM_AUTOMAKE_VERSION([1.16.1])dnl
m4_ifndef([AC_AUTOCONF_VERSION],
  [m4_copy([m4_PACKAGE_VERSION], [AC_AUTOCONF_VERSION])])dnl
_AM_AUTOCONF_VERSION(m4_defn([AC_AUTOCONF_VERSION]))])
m4trace:/usr/share/aclocal-1.16/auxdir.m4:47: -1- AC_DEFUN([AM_AUX_DIR_EXPAND], [AC_REQUIRE([AC_CONFIG_AUX_DIR_DEFAULT])dnl
# Expand $ac_aux_dir to an absolute path.
am_aux_dir=`cd "$ac_aux_dir" && pwd`
])
m4trace:/usr/share/aclocal-1.16/cond.m4:12: -1- AC_DEFUN([AM_CONDITIONAL], [AC_PREREQ([2.52])dnl
 m4_if([$1], [TRUE],  [AC_FATAL([$0: invalid condition: $1])],
       [$1], [FALSE], [AC_FATAL([$0: invalid condition: $1])])dnl
AC_SUBST([$1_TRUE])dnl
AC_SUBST([$1_FALSE])dnl
_AM_SUBST_NOTMAKE([$1_TRUE])dnl
_AM_SUBST_NOTMAKE([$1_FALSE])dnl
m4_define([_AM_COND_VALUE_$1], [$2])dnl
if $2; then
  $1_TRUE=
  $1_FALSE='#'
else
  $1_TRUE='#'
  $1_FALSE=
fi
AC_CONFIG_COMMANDS_PRE(
[if test -z "${$1_TRUE}" && test -z "${$1_FALSE}"; then
  AC_MSG_ERROR([[conditional "$1" was never defined.
Usually this means the macro was only invoked conditionally.]])
fi])])
m4trace:/usr/share/aclocal-1.16/depend.m4:26: -1- AC_DEFUN([_AM_DEPENDENCIES], [AC_REQUIRE([AM_SET_DEPDIR])dnl
AC_REQUIRE([AM_OUTPUT_DEPENDENCY_COMMANDS])dnl
AC_REQUIRE([AM_MAKE_INCLUDE])dnl
AC_REQUIRE([AM_DEP_TRACK])dnl

m4_if([$1], [CC],   [depcc="$CC"   am_compiler_list=],
      [$1], [CXX],  [depcc="$CXX"  am_compiler_list=],
      [$1], [OBJC], [depcc="$OBJC" am_compiler_list='gcc3 gcc'],
      [$1], [OBJCXX], [depcc="$OBJCXX" am_compiler_list='gcc3 gcc'],
      [$1], [UPC],  [depcc="$UPC"  am_compiler_list=],
      [$1], [GCJ],  [depcc="$GCJ"  am_compiler_list='gcc3 gcc'],
                    [depcc="$$1"   am_compiler_list=])

AC_CACHE_CHECK([dependency style of $depcc],
               [am_cv_$1_dependencies_compiler_type],
[if test -z "$AMDEP_TRUE" && test -f "$am_depcomp"; then
  # We make a subdir and do the tests there.  Otherwise we can end up
  # making bogus files that we don't know about and never remove.  For
  # instance it was reported that on HP-UX the gcc test will end up
  # making a dummy file named 'D' -- because '-MD' means "put the output
  # in D".
  rm -rf conftest.dir
  mkdir conftest.dir
  # Copy depcomp to subdir because otherwise we won't find it if we're
  # using a relative directory.
  cp "$am_depcomp" conftest.dir
  cd conftest.dir
  # We will build objects and dependencies in a subdirectory because
  # it helps to detect inapplicable dependency modes.  For instance
  # both Tru64's cc and ICC support -MD to output dependencies as a
  # side effect of compilation, but ICC will put the dependencies in
  # the current directory while Tru64 will put them in the object
  # directory.
  mkdir sub

  am_cv_$1_dependencies_compiler_type=none
  if test "$am_compiler_list" = ""; then
     am_compiler_list=`sed -n ['s/^#*\([a-zA-Z0-9]*\))$/\1/p'] < ./depcomp`
  fi
  am__universal=false
  m4_case([$1], [CC],
    [case " $depcc " in #(
     *\ -arch\ *\ -arch\ *) am__universal=true ;;
     esac],
    [CXX],
    [case " $depcc " in #(
     *\ -arch\ *\ -arch\ *) am__universal=true ;;
     esac])

  for depmode in $am_compiler_list; do
    # Setup a source with many dependencies, because some compilers
    # like to wrap large dependency lists on column 80 (with \), and
    # we should not choose a depcomp mode which is confused by this.
    #
    # We need to recreate these files for each test, as the compiler may
    # overwrite some of them when testing with obscure command lines.
    # This happens at least with the AIX C compiler.
    : > sub/conftest.c
    for i in 1 2 3 4 5 6; do
      echo '#include "conftst'$i'.h"' >> sub/conftest.c
      # Using ": > sub/conftst$i.h" creates only sub/conftst1.h with
      # Solaris 10 /bin/sh.
      echo '/* dummy */' > sub/conftst$i.h
    done
    echo "${am__include} ${am__quote}sub/conftest.Po${am__quote}" > confmf

    # We check with '-c' and '-o' for the sake of the "dashmstdout"
    # mode.  It turns out that the SunPro C++ compiler does not properly
    # handle '-M -o', and we need to detect this.  Also, some Intel
    # versions had trouble with output in subdirs.
    am__obj=sub/conftest.${OBJEXT-o}
    am__minus_obj="-o $am__obj"
    case $depmode in
    gcc)
      # This depmode causes a compiler race in universal mode.
      test "$am__universal" = false || continue
      ;;
    nosideeffect)
      # After this tag, mechanisms are not by side-effect, so they'll
      # only be used when explicitly requested.
      if test "x$enable_dependency_tracking" = xyes; then
	continue
      else
	break
      fi
      ;;
    msvc7 | msvc7msys | msvisualcpp | msvcmsys)
      # This compiler won't grok '-c -o', but also, the minuso test has
      # not run yet.  These depmodes are late enough in the game, and
      # so weak that their functioning should not be impacted.
      am__obj=conftest.${OBJEXT-o}
      am__minus_obj=
      ;;
    none) break ;;
    esac
    if depmode=$depmode \
       source=sub/conftest.c object=$am__obj \
       depfile=sub/conftest.Po tmpdepfile=sub/conftest.TPo \
       $SHELL ./depcomp $depcc -c $am__minus_obj sub/conftest.c \
         >/dev/null 2>conftest.err &&
       grep sub/conftst1.h sub/conftest.Po > /dev/null 2>&1 &&
       grep sub/conftst6.h sub/conftest.Po > /dev/null 2>&1 &&
       grep $am__obj sub/conftest.Po > /dev/null 2>&1 &&
       ${MAKE-make} -s -f confmf > /dev/null 2>&1; then
      # icc doesn't choke on unknown options, it will just issue warnings
      # or remarks (even with -Werror).  So we grep stderr for any message
      # that says an option was ignored or not supported.
      # When given -MP, icc 7.0 and 7.1 complain thusly:
      #   icc: Command line warning: ignoring option '-M'; no argument required
      # The diagnosis changed in icc 8.0:
      #   icc: Command line remark: option '-MP' not supported
      if (grep 'ignoring option' conftest.err ||
          grep 'not supported' conftest.err) >/dev/null 2>&1; then :; else
        am_cv_$1_dependencies_compiler_type=$depmode
        break
      fi
    fi
  done

  cd ..
  rm -rf conftest.dir
else
  am_cv_$1_dependencies_compiler_type=none
fi
])
AC_SUBST([$1DEPMODE], [depmode=$am_cv_$1_dependencies_compiler_type])
AM_CONDITIONAL([am__fastdep$1], [
  test "x$enable_dependency_tracking" != xno \
  && test "$am_cv_$1_dependencies_compiler_type" = gcc3])
])
m4trace:/usr/share/aclocal-1.16/depend.m4:163: -1- AC_DEFUN([AM_SET_DEPDIR], [AC_REQUIRE([AM_SET_LEADING_DOT])dnl
AC_SUBST([DEPDIR], ["${am__leading_dot}deps"])dnl
])
m4trace:/usr/share/aclocal-1.16/depend.m4:171: -1- AC_DEFUN([AM_DEP_TRACK], [AC_ARG_ENABLE([dependency-tracking], [dnl
AS_HELP_STRING(
  [--enable-dependency-tracking],
  [do not reject slow dependency extractors])
AS_HELP_STRING(
  [--disable-dependency-tracking],
  [speeds up one-time build])])
if test "x$enable_dependency_tracking" != xno; then
  am_depcomp="$ac_aux_dir/depcomp"
  AMDEPBACKSLASH='\'
  am__nodep='_no'
fi
AM_CONDITIONAL([AMDEP], [test "x$enable_dependency_tracking" != xno])
AC_SUBST([AMDEPBACKSLASH])dnl
_AM_SUBST_NOTMAKE([AMDEPBACKSLASH])dnl
AC_SUBST([am__nodep])dnl
_AM_SUBST_NOTMAKE([am__nodep])dnl
])
m4trace:/usr/share/aclocal-1.16/depout.m4:11: -1- AC_DEFUN([_AM_OUTPUT_DEPENDENCY_COMMANDS], [{
  # Older Autoconf quotes --file arguments for eval, but not when files
  # are listed without --file.  Let's play safe and only enable the eval
  # if we detect the quoting.
  # TODO: see whether this extra hack can be removed once we start
  # requiring Autoconf 2.70 or later.
  AS_CASE([$CONFIG_FILES],
          [*\'*], [eval set x "$CONFIG_FILES"],
          [*], [set x $CONFIG_FILES])
  shift
  # Used to flag and report bootstrapping failures.
  am_rc=0
  for am_mf
  do
    # Strip MF so we end up with the name of the file.
    am_mf=`AS_ECHO(["$am_mf"]) | sed -e 's/:.*$//'`
    # Check whether this is an Automake generated Makefile which includes
    # dependency-tracking related rules and includes.
    # Grep'ing the whole file directly is not great: AIX grep has a line
    # limit of 2048, but all sed's we know have understand at least 4000.
    sed -n 's,^am--depfiles:.*,X,p' "$am_mf" | grep X >/dev/null 2>&1 \
      || continue
    am_dirpart=`AS_DIRNAME(["$am_mf"])`
    am_filepart=`AS_BASENAME(["$am_mf"])`
    AM_RUN_LOG([cd "$am_dirpart" \
      && sed -e '/# am--include-marker/d' "$am_filepart" \
        | $MAKE -f - am--depfiles]) || am_rc=$?
  done
  if test $am_rc -ne 0; then
    AC_MSG_FAILURE([Something went wrong bootstrapping makefile fragments
    for automatic dependency tracking.  Try re-running configure with the
    '--disable-dependency-tracking' option to at least be able to build
    the package (albeit without support for automatic dependency tracking).])
  fi
  AS_UNSET([am_dirpart])
  AS_UNSET([am_filepart])
  AS_UNSET([am_mf])
  AS_UNSET([am_rc])
  rm -f conftest-deps.mk
}
])
m4trace:/usr/share/aclocal-1.16/depout.m4:62: -1- AC_DEFUN([AM_OUTPUT_DEPENDENCY_COMMANDS], [AC_CONFIG_COMMANDS([depfiles],
     [test x"$AMDEP_TRUE" != x"" || _AM_OUTPUT_DEPENDENCY_COMMANDS],
     [AMDEP_TRUE="$AMDEP_TRUE" MAKE="${MAKE-make}"])])
m4trace:/usr/share/aclocal-1.16/init.m4:29: -1- AC_DEFUN([AM_INIT_AUTOMAKE], [AC_PREREQ([2.65])dnl
dnl Autoconf wants to disallow AM_ names.  We explicitly allow
dnl the ones we care about.
m4_pattern_allow([^AM_[A-Z]+FLAGS$])dnl
AC_REQUIRE([AM_SET_CURRENT_AUTOMAKE_VERSION])dnl
AC_REQUIRE([AC_PROG_INSTALL])dnl
if test "`cd $srcdir && pwd`" != "`pwd`"; then
  # Use -I$(srcdir) only when $(srcdir) != ., so that make's output
  # is not polluted with repeated "-I."
  AC_SUBST([am__isrc], [' -I$(srcdir)'])_AM_SUBST_NOTMAKE([am__isrc])dnl
  # test to see if srcdir already configured
  if test -f $srcdir/config.status; then
    AC_MSG_ERROR([source directory already configured; run "make distclean" there first])
  fi
fi

# test whether we have cygpath
if test -z "$CYGPATH_W"; then
  if (cygpath --version) >/dev/null 2>/dev/null; then
    CYGPATH_W='cygpath -w'
  else
    CYGPATH_W=echo
  fi
fi
AC_SUBST([CYGPATH_W])

# Define the identity of the package.
dnl Distinguish between old-style and new-style calls.
m4_ifval([$2],
[AC_DIAGNOSE([obsolete],
             [$0: two- and three-arguments forms are deprecated.])
m4_ifval([$3], [_AM_SET_OPTION([no-define])])dnl
 AC_SUBST([PACKAGE], [$1])dnl
 AC_SUBST([VERSION], [$2])],
[_AM_SET_OPTIONS([$1])dnl
dnl Diagnose old-style AC_INIT with new-style AM_AUTOMAKE_INIT.
m4_if(
  m4_ifdef([AC_PACKAGE_NAME], [ok]):m4_ifdef([AC_PACKAGE_VERSION], [ok]),
  [ok:ok],,
  [m4_fatal([AC_INIT should be called with package and version arguments])])dnl
 AC_SUBST([PACKAGE], ['AC_PACKAGE_TARNAME'])dnl
 AC_SUBST([VERSION], ['AC_PACKAGE_VERSION'])])dnl

_AM_IF_OPTION([no-define],,
[AC_DEFINE_UNQUOTED([PACKAGE], ["$PACKAGE"], [Name of package])
 AC_DEFINE_UNQUOTED([VERSION], ["$VERSION"], [Version number of package])])dnl

# Some tools Automake needs.
AC_REQUIRE([AM_SANITY_CHECK])dnl
AC_REQUIRE([AC_ARG_PROGRAM])dnl
AM_MISSING_PROG([ACLOCAL], [aclocal-${am__api_version}])
AM_MISSING_PROG([AUTOCONF], [autoconf])
AM_MISSING_PROG([AUTOMAKE], [automake-${am__api_version}])
AM_MISSING_PROG([AUTOHEADER], [autoheader])
AM_MISSING_PROG([MAKEINFO], [makeinfo])
AC_REQUIRE([AM_PROG_INSTALL_SH])dnl
AC_REQUIRE([AM_PROG_INSTALL_STRIP])dnl
AC_REQUIRE([AC_PROG_MKDIR_P])dnl
# For better backward compatibility.  To be removed once Automake 1.9.x
# dies out for good.  For more background, see:
# <https://lists.gnu.org/archive/html/automake/2012-07/msg00001.html>
# <https://lists.gnu.org/archive/html/automake/2012-07/msg00014.html>
AC_SUBST([mkdir_p], ['$(MKDIR_P)'])
# We need awk for the "check" target (and possibly the TAP driver).  The
# system "awk" is bad on some platforms.
AC_REQUIRE([AC_PROG_AWK])dnl
AC_REQUIRE([AC_PROG_MAKE_SET])dnl
AC_REQUIRE([AM_SET_LEADING_DOT])dnl
_AM_IF_OPTION([tar-ustar], [_AM_PROG_TAR([ustar])],
	      [_AM_IF_OPTION([tar-pax], [_AM_PROG_TAR([pax])],
			     [_AM_PROG_TAR([v7])])])
_AM_IF_OPTION([no-dependencies],,
[AC_PROVIDE_IFELSE([AC_PROG_CC],
		  [_AM_DEPENDENCIES([CC])],
		  [m4_define([AC_PROG_CC],
			     m4_defn([AC_PROG_CC])[_AM_DEPENDENCIES([CC])])])dnl
AC_PROVIDE_IFELSE([AC_PROG_CXX],
		  [_AM_DEPENDENCIES([CXX])],
		  [m4_define([AC_PROG_CXX],
			     m4_defn([AC_PROG_CXX])[_AM_DEPENDENCIES([CXX])])])dnl
AC_PROVIDE_IFELSE([AC_PROG_OBJC],
		  [_AM_DEPENDENCIES([OBJC])],
		  [m4_define([AC_PROG_OBJC],
			     m4_defn([AC_PROG_OBJC])[_AM_DEPENDENCIES([OBJC])])])dnl
AC_PROVIDE_IFELSE([AC_PROG_OBJCXX],
		  [_AM_DEPENDENCIES([OBJCXX])],
		  [m4_define([AC_PROG_OBJCXX],
			     m4_defn([AC_PROG_OBJCXX])[_AM_DEPENDENCIES([OBJCXX])])])dnl
])
AC_REQUIRE([AM_SILENT_RULES])dnl
dnl The testsuite driver may need to know about EXEEXT, so add the
dnl 'am__EXEEXT' conditional if _AM_COMPILER_EXEEXT was seen.  This
dnl macro is hooked onto _AC_COMPILER_EXEEXT early, see below.
AC_CONFIG_COMMANDS_PRE(dnl
[m4_provide_if([_AM_COMPILER_EXEEXT],
  [AM_CONDITIONAL([am__EXEEXT], [test -n "$EXEEXT"])])])dnl

# POSIX will say in a future version that running "rm -f" with no argument
# is OK; and we want to be able to make that assumption in our Makefile
# recipes.  So use an aggressive probe to check that the usage we want is
# actually supported "in the wild" to an acceptable degree.
# See automake bug#10828.
# To make any issue more visible, cause the running configure to be aborted
# by default if the 'rm' program in use doesn't match our expectations; the
# user can still override this though.
if rm -f && rm -fr && rm -rf; then : OK; else
  cat >&2 <<'END'
Oops!

Your 'rm' program seems unable to run without file operands specified
on the command line, even when the '-f' option is present.  This is contrary
to the behaviour of most rm programs out there, and not conforming with
the upcoming POSIX standard: <http://austingroupbugs.net/view.php?id=542>

Please tell bug-automake@gnu.org about your system, including the value
of your $PATH and any error possibly output before this message.  This
can help us improve future automake versions.

END
  if test x"$ACCEPT_INFERIOR_RM_PROGRAM" = x"yes"; then
    echo 'Configuration will proceed anyway, since you have set the' >&2
    echo 'ACCEPT_INFERIOR_RM_PROGRAM variable to "yes"' >&2
    echo >&2
  else
    cat >&2 <<'END'
Aborting the configuration process, to ensure you take notice of the issue.

You can download and install GNU coreutils to get an 'rm' implementation
that behaves properly: <https://www.gnu.org/software/coreutils/>.

If you want to complete the configuration process using your problematic
'rm' anyway, export the environment variable ACCEPT_INFERIOR_RM_PROGRAM
to "yes", and re-run configure.

END
    AC_MSG_ERROR([Your 'rm' program is bad, sorry.])
  fi
fi
dnl The trailing newline in this macro's definition is deliberate, for
dnl backward compatibility and to allow trailing 'dnl'-style comments
dnl after the AM_INIT_AUTOMAKE invocation. See automake bug#16841.
])
m4trace:/usr/share/aclocal-1.16/init.m4:186: -1- AC_DEFUN([_AC_AM_CONFIG_HEADER_HOOK], [# Compute $1's index in $config_headers.
_am_arg=$1
_am_stamp_count=1
for _am_header in $config_headers :; do
  case $_am_header in
    $_am_arg | $_am_arg:* )
      break ;;
    * )
      _am_stamp_count=`expr $_am_stamp_count + 1` ;;
  esac
done
echo "timestamp for $_am_arg" >`AS_DIRNAME(["$_am_arg"])`/stamp-h[]$_am_stamp_count])
m4trace:/usr/share/aclocal-1.16/install-sh.m4:11: -1- AC_DEFUN([AM_PROG_INSTALL_SH], [AC_REQUIRE([AM_AUX_DIR_EXPAND])dnl
if test x"${install_sh+set}" != xset; then
  case $am_aux_dir in
  *\ * | *\	*)
    install_sh="\${SHELL} '$am_aux_dir/install-sh'" ;;
  *)
    install_sh="\${SHELL} $am_aux_dir/install-sh"
  esac
fi
AC_SUBST([install_sh])])
m4trace:/usr/share/aclocal-1.16/lead-dot.m4:10: -1- AC_DEFUN([AM_SET_LEADING_DOT], [rm -rf .tst 2>/dev/null
mkdir .tst 2>/dev/null
if test -d .tst; then
  am__leading_dot=.
else
  am__leading_dot=_
fi
rmdir .tst 2>/dev/null
AC_SUBST([am__leading_dot])])
m4trace:/usr/share/aclocal-1.16/maintainer.m4:16: -1- AC_DEFUN([AM_MAINTAINER_MODE], [m4_case(m4_default([$1], [disable]),
       [enable], [m4_define([am_maintainer_other], [disable])],
       [disable], [m4_define([am_maintainer_other], [enable])],
       [m4_define([am_maintainer_other], [enable])
        m4_warn([syntax], [unexpected argument to AM@&t@_MAINTAINER_MODE: $1])])
AC_MSG_CHECKING([whether to enable maintainer-specific portions of Makefiles])
  dnl maintainer-mode's default is 'disable' unless 'enable' is passed
  AC_ARG_ENABLE([maintainer-mode],
    [AS_HELP_STRING([--]am_maintainer_other[-maintainer-mode],
      am_maintainer_other[ make rules and dependencies not useful
      (and sometimes confusing) to the casual installer])],
    [USE_MAINTAINER_MODE=$enableval],
    [USE_MAINTAINER_MODE=]m4_if(am_maintainer_other, [enable], [no], [yes]))
  AC_MSG_RESULT([$USE_MAINTAINER_MODE])
  AM_CONDITIONAL([MAINTAINER_MODE], [test $USE_MAINTAINER_MODE = yes])
  MAINT=$MAINTAINER_MODE_TRUE
  AC_SUBST([MAINT])dnl

])
m4trace:/usr/share/aclocal-1.16/make.m4:13: -1- AC_DEFUN([AM_MAKE_INCLUDE], [AC_MSG_CHECKING([whether ${MAKE-make} supports the include directive])
cat > confinc.mk << 'END'
am__doit:
	@echo this is the am__doit target >confinc.out
.PHONY: am__doit
END
am__include="#"
am__quote=
# BSD make does it like this.
echo '.include "confinc.mk" # ignored' > confmf.BSD
# Other make implementations (GNU, Solaris 10, AIX) do it like this.
echo 'include confinc.mk # ignored' > confmf.GNU
_am_result=no
for s in GNU BSD; do
  AM_RUN_LOG([${MAKE-make} -f confmf.$s && cat confinc.out])
  AS_CASE([$?:`cat confinc.out 2>/dev/null`],
      ['0:this is the am__doit target'],
      [AS_CASE([$s],
          [BSD], [am__include='.include' am__quote='"'],
          [am__include='include' am__quote=''])])
  if test "$am__include" != "#"; then
    _am_result="yes ($s style)"
    break
  fi
done
rm -f confinc.* confmf.*
AC_MSG_RESULT([${_am_result}])
AC_SUBST([am__include])])
m4trace:/usr/share/aclocal-1.16/make.m4:42: -1- m4_pattern_allow([^am__quote$])
m4trace:/usr/share/aclocal-1.16/missing.m4:11: -1- AC_DEFUN([AM_MISSING_PROG], [AC_REQUIRE([AM_MISSING_HAS_RUN])
$1=${$1-"${am_missing_run}$2"}
AC_SUBST($1)])
m4trace:/usr/share/aclocal-1.16/missing.m4:20: -1- AC_DEFUN([AM_MISSING_HAS_RUN], [AC_REQUIRE([AM_AUX_DIR_EXPAND])dnl
AC_REQUIRE_AUX_FILE([missing])dnl
if test x"${MISSING+set}" != xset; then
  case $am_aux_dir in
  *\ * | *\	*)
    MISSING="\${SHELL} \"$am_aux_dir/missing\"" ;;
  *)
    MISSING="\${SHELL} $am_aux_dir/missing" ;;
  esac
fi
# Use eval to expand $SHELL
if eval "$MISSING --is-lightweight"; then
  am_missing_run="$MISSING "
else
  am_missing_run=
  AC_MSG_WARN(['missing' script is too old or missing])
fi
])
m4trace:/usr/share/aclocal-1.16/obsolete.m4:11: -1- AC_DEFUN([AM_CONFIG_HEADER], [AC_DIAGNOSE([obsolete],
['$0': this macro is obsolete.
You should use the 'AC][_CONFIG_HEADERS' macro instead.])dnl
AC_CONFIG_HEADERS($@)])
m4trace:/usr/share/aclocal-1.16/obsolete.m4:17: -1- AC_DEFUN([AM_PROG_CC_STDC], [AC_PROG_CC
am_cv_prog_cc_stdc=$ac_cv_prog_cc_stdc
AC_DIAGNOSE([obsolete],
['$0': this macro is obsolete.
You should simply use the 'AC][_PROG_CC' macro instead.
Also, your code should no longer depend upon 'am_cv_prog_cc_stdc',
but upon 'ac_cv_prog_cc_stdc'.])])
m4trace:/usr/share/aclocal-1.16/obsolete.m4:26: -1- AC_DEFUN([AM_C_PROTOTYPES], [AC_FATAL([automatic de-ANSI-fication support has been removed])])
m4trace:/usr/share/aclocal-1.16/obsolete.m4:28: -1- AU_DEFUN([fp_C_PROTOTYPES], [AM_C_PROTOTYPES])
m4trace:/usr/share/aclocal-1.16/obsolete.m4:28: -1- AC_DEFUN([fp_C_PROTOTYPES], [AC_DIAGNOSE([obsolete], [The macro `fp_C_PROTOTYPES' is obsolete.
You should run autoupdate.])dnl
AM_C_PROTOTYPES])
m4trace:/usr/share/aclocal-1.16/options.m4:11: -1- AC_DEFUN([_AM_MANGLE_OPTION], [[_AM_OPTION_]m4_bpatsubst($1, [[^a-zA-Z0-9_]], [_])])
m4trace:/usr/share/aclocal-1.16/options.m4:17: -1- AC_DEFUN([_AM_SET_OPTION], [m4_define(_AM_MANGLE_OPTION([$1]), [1])])
m4trace:/usr/share/aclocal-1.16/options.m4:23: -1- AC_DEFUN([_AM_SET_OPTIONS], [m4_foreach_w([_AM_Option], [$1], [_AM_SET_OPTION(_AM_Option)])])
m4trace:/usr/share/aclocal-1.16/options.m4:29: -1- AC_DEFUN([_AM_IF_OPTION], [m4_ifset(_AM_MANGLE_OPTION([$1]), [$2], [$3])])
m4trace:/usr/share/aclocal-1.16/prog-cc-c-o.m4:12: -1- AC_DEFUN([_AM_PROG_CC_C_O], [AC_REQUIRE([AM_AUX_DIR_EXPAND])dnl
AC_REQUIRE_AUX_FILE([compile])dnl
AC_LANG_PUSH([C])dnl
AC_CACHE_CHECK(
  [whether $CC understands -c and -o together],
  [am_cv_prog_cc_c_o],
  [AC_LANG_CONFTEST([AC_LANG_PROGRAM([])])
  # Make sure it works both with $CC and with simple cc.
  # Following AC_PROG_CC_C_O, we do the test twice because some
  # compilers refuse to overwrite an existing .o file with -o,
  # though they will create one.
  am_cv_prog_cc_c_o=yes
  for am_i in 1 2; do
    if AM_RUN_LOG([$CC -c conftest.$ac_ext -o conftest2.$ac_objext]) \
         && test -f conftest2.$ac_objext; then
      : OK
    else
      am_cv_prog_cc_c_o=no
      break
    fi
  done
  rm -f core conftest*
  unset am_i])
if test "$am_cv_prog_cc_c_o" != yes; then
   # Losing compiler, so override with the script.
   # FIXME: It is wrong to rewrite CC.
   # But if we don't then we get into trouble of one sort or another.
   # A longer-term fix would be to have automake use am__CC in this case,
   # and then we could set am__CC="\$(top_srcdir)/compile \$(CC)"
   CC="$am_aux_dir/compile $CC"
fi
AC_LANG_POP([C])])
m4trace:/usr/share/aclocal-1.16/prog-cc-c-o.m4:47: -1- AC_DEFUN_ONCE([AM_PROG_CC_C_O], [AC_REQUIRE([AC_PROG_CC])])
m4trace:/usr/share/aclocal-1.16/runlog.m4:12: -1- AC_DEFUN([AM_RUN_LOG], [{ echo "$as_me:$LINENO: $1" >&AS_MESSAGE_LOG_FD
   ($1) >&AS_MESSAGE_LOG_FD 2>&AS_MESSAGE_LOG_FD
   ac_status=$?
   echo "$as_me:$LINENO: \$? = $ac_status" >&AS_MESSAGE_LOG_FD
   (exit $ac_status); }])
m4trace:/usr/share/aclocal-1.16/sanity.m4:11: -1- AC_DEFUN([AM_SANITY_CHECK], [AC_MSG_CHECKING([whether build environment is sane])
# Reject unsafe characters in $srcdir or the absolute working directory
# name.  Accept space and tab only in the latter.
am_lf='
'
case `pwd` in
  *[[\\\"\#\$\&\'\`$am_lf]]*)
    AC_MSG_ERROR([unsafe absolute working directory name]);;
esac
case $srcdir in
  *[[\\\"\#\$\&\'\`$am_lf\ \	]]*)
    AC_MSG_ERROR([unsafe srcdir value: '$srcdir']);;
esac

# Do 'set' in a subshell so we don't clobber the current shell's
# arguments.  Must try -L first in case configure is actually a
# symlink; some systems play weird games with the mod time of symlinks
# (eg FreeBSD returns the mod time of the symlink's containing
# directory).
if (
   am_has_slept=no
   for am_try in 1 2; do
     echo "timestamp, slept: $am_has_slept" > conftest.file
     set X `ls -Lt "$srcdir/configure" conftest.file 2> /dev/null`
     if test "$[*]" = "X"; then
	# -L didn't work.
	set X `ls -t "$srcdir/configure" conftest.file`
     fi
     if test "$[*]" != "X $srcdir/configure conftest.file" \
	&& test "$[*]" != "X conftest.file $srcdir/configure"; then

	# If neither matched, then we have a broken ls.  This can happen
	# if, for instance, CONFIG_SHELL is bash and it inherits a
	# broken ls alias from the environment.  This has actually
	# happened.  Such a system could not be considered "sane".
	AC_MSG_ERROR([ls -t appears to fail.  Make sure there is not a broken
  alias in your environment])
     fi
     if test "$[2]" = conftest.file || test $am_try -eq 2; then
       break
     fi
     # Just in case.
     sleep 1
     am_has_slept=yes
   done
   test "$[2]" = conftest.file
   )
then
   # Ok.
   :
else
   AC_MSG_ERROR([newly created file is older than distributed files!
Check your system clock])
fi
AC_MSG_RESULT([yes])
# If we didn't sleep, we still need to ensure time stamps of config.status and
# generated files are strictly newer.
am_sleep_pid=
if grep 'slept: no' conftest.file >/dev/null 2>&1; then
  ( sleep 1 ) &
  am_sleep_pid=$!
fi
AC_CONFIG_COMMANDS_PRE(
  [AC_MSG_CHECKING([that generated files are newer than configure])
   if test -n "$am_sleep_pid"; then
     # Hide warnings about reused PIDs.
     wait $am_sleep_pid 2>/dev/null
   fi
   AC_MSG_RESULT([done])])
rm -f conftest.file
])
m4trace:/usr/share/aclocal-1.16/silent.m4:12: -1- AC_DEFUN([AM_SILENT_RULES], [AC_ARG_ENABLE([silent-rules], [dnl
AS_HELP_STRING(
  [--enable-silent-rules],
  [less verbose build output (undo: "make V=1")])
AS_HELP_STRING(
  [--disable-silent-rules],
  [verbose build output (undo: "make V=0")])dnl
])
case $enable_silent_rules in @%:@ (((
  yes) AM_DEFAULT_VERBOSITY=0;;
   no) AM_DEFAULT_VERBOSITY=1;;
    *) AM_DEFAULT_VERBOSITY=m4_if([$1], [yes], [0], [1]);;
esac
dnl
dnl A few 'make' implementations (e.g., NonStop OS and NextStep)
dnl do not support nested variable expansions.
dnl See automake bug#9928 and bug#10237.
am_make=${MAKE-make}
AC_CACHE_CHECK([whether $am_make supports nested variables],
   [am_cv_make_support_nested_variables],
   [if AS_ECHO([['TRUE=$(BAR$(V))
BAR0=false
BAR1=true
V=1
am__doit:
	@$(TRUE)
.PHONY: am__doit']]) | $am_make -f - >/dev/null 2>&1; then
  am_cv_make_support_nested_variables=yes
else
  am_cv_make_support_nested_variables=no
fi])
if test $am_cv_make_support_nested_variables = yes; then
  dnl Using '$V' instead of '$(V)' breaks IRIX make.
  AM_V='$(V)'
  AM_DEFAULT_V='$(AM_DEFAULT_VERBOSITY)'
else
  AM_V=$AM_DEFAULT_VERBOSITY
  AM_DEFAULT_V=$AM_DEFAULT_VERBOSITY
fi
AC_SUBST([AM_V])dnl
AM_SUBST_NOTMAKE([AM_V])dnl
AC_SUBST([AM_DEFAULT_V])dnl
AM_SUBST_NOTMAKE([AM_DEFAULT_V])dnl
AC_SUBST([AM_DEFAULT_VERBOSITY])dnl
AM_BACKSLASH='\'
AC_SUBST([AM_BACKSLASH])dnl
_AM_SUBST_NOTMAKE([AM_BACKSLASH])dnl
])
m4trace:/usr/share/aclocal-1.16/strip.m4:17: -1- AC_DEFUN([AM_PROG_INSTALL_STRIP], [AC_REQUIRE([AM_PROG_INSTALL_SH])dnl
# Installed binaries are usually stripped using 'strip' when the user
# run "make install-strip".  However 'strip' might not be the right
# tool to use in cross-compilation environments, therefore Automake
# will honor the 'STRIP' environment variable to overrule this program.
dnl Don't test for $cross_compiling = yes, because it might be 'maybe'.
if test "$cross_compiling" != no; then
  AC_CHECK_TOOL([STRIP], [strip], :)
fi
INSTALL_STRIP_PROGRAM="\$(install_sh) -c -s"
AC_SUBST([INSTALL_STRIP_PROGRAM])])
m4trace:/usr/share/aclocal-1.16/substnot.m4:12: -1- AC_DEFUN([_AM_SUBST_NOTMAKE])
m4trace:/usr/share/aclocal-1.16/substnot.m4:17: -1- AC_DEFUN([AM_SUBST_NOTMAKE], [_AM_SUBST_NOTMAKE($@)])
m4trace:/usr/share/aclocal-1.16/tar.m4:23: -1- AC_DEFUN([_AM_PROG_TAR], [# Always define AMTAR for backward compatibility.  Yes, it's still used
# in the wild :-(  We should find a proper way to deprecate it ...
AC_SUBST([AMTAR], ['$${TAR-tar}'])

# We'll loop over all known methods to create a tar archive until one works.
_am_tools='gnutar m4_if([$1], [ustar], [plaintar]) pax cpio none'

m4_if([$1], [v7],
  [am__tar='$${TAR-tar} chof - "$$tardir"' am__untar='$${TAR-tar} xf -'],

  [m4_case([$1],
    [ustar],
     [# The POSIX 1988 'ustar' format is defined with fixed-size fields.
      # There is notably a 21 bits limit for the UID and the GID.  In fact,
      # the 'pax' utility can hang on bigger UID/GID (see automake bug#8343
      # and bug#13588).
      am_max_uid=2097151 # 2^21 - 1
      am_max_gid=$am_max_uid
      # The $UID and $GID variables are not portable, so we need to resort
      # to the POSIX-mandated id(1) utility.  Errors in the 'id' calls
      # below are definitely unexpected, so allow the users to see them
      # (that is, avoid stderr redirection).
      am_uid=`id -u || echo unknown`
      am_gid=`id -g || echo unknown`
      AC_MSG_CHECKING([whether UID '$am_uid' is supported by ustar format])
      if test $am_uid -le $am_max_uid; then
         AC_MSG_RESULT([yes])
      else
         AC_MSG_RESULT([no])
         _am_tools=none
      fi
      AC_MSG_CHECKING([whether GID '$am_gid' is supported by ustar format])
      if test $am_gid -le $am_max_gid; then
         AC_MSG_RESULT([yes])
      else
        AC_MSG_RESULT([no])
        _am_tools=none
      fi],

  [pax],
    [],

  [m4_fatal([Unknown tar format])])

  AC_MSG_CHECKING([how to create a $1 tar archive])

  # Go ahead even if we have the value already cached.  We do so because we
  # need to set the values for the 'am__tar' and 'am__untar' variables.
  _am_tools=${am_cv_prog_tar_$1-$_am_tools}

  for _am_tool in $_am_tools; do
    case $_am_tool in
    gnutar)
      for _am_tar in tar gnutar gtar; do
        AM_RUN_LOG([$_am_tar --version]) && break
      done
      am__tar="$_am_tar --format=m4_if([$1], [pax], [posix], [$1]) -chf - "'"$$tardir"'
      am__tar_="$_am_tar --format=m4_if([$1], [pax], [posix], [$1]) -chf - "'"$tardir"'
      am__untar="$_am_tar -xf -"
      ;;
    plaintar)
      # Must skip GNU tar: if it does not support --format= it doesn't create
      # ustar tarball either.
      (tar --version) >/dev/null 2>&1 && continue
      am__tar='tar chf - "$$tardir"'
      am__tar_='tar chf - "$tardir"'
      am__untar='tar xf -'
      ;;
    pax)
      am__tar='pax -L -x $1 -w "$$tardir"'
      am__tar_='pax -L -x $1 -w "$tardir"'
      am__untar='pax -r'
      ;;
    cpio)
      am__tar='find "$$tardir" -print | cpio -o -H $1 -L'
      am__tar_='find "$tardir" -print | cpio -o -H $1 -L'
      am__untar='cpio -i -H $1 -d'
      ;;
    none)
      am__tar=false
      am__tar_=false
      am__untar=false
      ;;
    esac

    # If the value was cached, stop now.  We just wanted to have am__tar
    # and am__untar set.
    test -n "${am_cv_prog_tar_$1}" && break

    # tar/untar a dummy directory, and stop if the command works.
    rm -rf conftest.dir
    mkdir conftest.dir
    echo GrepMe > conftest.dir/file
    AM_RUN_LOG([tardir=conftest.dir && eval $am__tar_ >conftest.tar])
    rm -rf conftest.dir
    if test -s conftest.tar; then
      AM_RUN_LOG([$am__untar <conftest.tar])
      AM_RUN_LOG([cat conftest.dir/file])
      grep GrepMe conftest.dir/file >/dev/null 2>&1 && break
    fi
  done
  rm -rf conftest.dir

  AC_CACHE_VAL([am_cv_prog_tar_$1], [am_cv_prog_tar_$1=$_am_tool])
  AC_MSG_RESULT([$am_cv_prog_tar_$1])])

AC_SUBST([am__tar])
AC_SUBST([am__untar])
])
m4trace:acinclude.m4:1: -1- AC_DEFUN([TUXBOX_APPS], [
AM_CONFIG_HEADER(config.h)
AM_MAINTAINER_MODE

AC_GNU_SOURCE
AC_SYS_LARGEFILE

AC_ARG_WITH(debug,
	[  --without-debug         disable debugging code],
	[DEBUG="$withval"],[DEBUG="yes"])

if test "$DEBUG" = "yes"; then
	DEBUG_CFLAGS="-g3 -ggdb"
	AC_DEFINE(DEBUG,1,[Enable debug messages])
fi

if test "$CFLAGS" = "" -a "$CXXFLAGS" = ""; then
	CFLAGS="-Wall -O2 -pipe $DEBUG_CFLAGS"
	CXXFLAGS="-Wall -O2 -pipe $DEBUG_CFLAGS"
fi

if test "$prefix" = "NONE"; then
	prefix=/usr/local
	
	# workaround for hd2 buildsystem
	datadir="/usr/share"
	localstatedir="/var"
else
	datadir="\${prefix}/share"
fi

if test "$exec_prefix" = "NONE"; then
	exec_prefix=$prefix
fi

AC_CANONICAL_BUILD
AC_CANONICAL_HOST

check_path () {
	return $(perl -e "if(\"$1\"=~m#^/usr/(local/)?bin#){print \"0\"}else{print \"1\";}")
}
])
m4trace:acinclude.m4:44: -1- AC_DEFUN([TUXBOX_APPS_DIRECTORY_ONE], [
AC_ARG_WITH($1,[  $6$7 [[PREFIX$4$5]]],[
	_$2=$withval
	$2=$withval
	TARGET_$2=${$2}
],[
	$2="\${$3}$5"
	_$2=`eval echo "${$3}$5"`
	TARGET_$2=$_$2
])

dnl automake <= 1.6 don't support this
dnl AC_SUBST($2)
AC_DEFINE_UNQUOTED($2,"$_$2",$7)
AC_SUBST(TARGET_$2)
])
m4trace:acinclude.m4:61: -1- AC_DEFUN([TUXBOX_APPS_DIRECTORY], [
AC_REQUIRE([TUXBOX_APPS])

TUXBOX_APPS_DIRECTORY_ONE(configdir,CONFIGDIR,localstatedir,/var,/tuxbox/config,
	[--with-configdir=PATH   ],[where to find the config files])

TUXBOX_APPS_DIRECTORY_ONE(datadir,DATADIR,datadir,/share,/tuxbox,
	[--with-datadir=PATH     ],[where to find data])

TUXBOX_APPS_DIRECTORY_ONE(plugindir,PLUGINDIR,localstatedir,/var,/tuxbox/plugins,
	[--with-plugindir=PATH   ],[where to find the plugins])
	
TUXBOX_APPS_DIRECTORY_ONE(localedir,LOCALEDIR,localstatedir,/var,/tuxbox/locale,
	[--with-localedir=PATH   ],[where to find locales])
])
m4trace:acinclude.m4:78: -1- m4_pattern_allow([^CONFIGDIR$])
m4trace:acinclude.m4:79: -1- m4_pattern_allow([^DATADIR$])
m4trace:acinclude.m4:80: -1- m4_pattern_allow([^PLUGINDIR$])
m4trace:acinclude.m4:81: -1- m4_pattern_allow([^LOCALEDIR$])
m4trace:acinclude.m4:84: -1- AC_DEFUN([TUXBOX_APPS_ENDIAN], [
AC_CHECK_HEADERS(endian.h)
AC_C_BIGENDIAN
])
m4trace:acinclude.m4:89: -1- AC_DEFUN([TUXBOX_APPS_DRIVER], [
AC_ARG_WITH(driver,
	[  --with-driver=PATH      path for driver sources [[NONE]]],
	[DRIVER="$withval"],[DRIVER=""])

if test "$DRIVER"; then
	AC_SUBST(DRIVER)
	CPPFLAGS="$CPPFLAGS -I$DRIVER/include"
fi
])
m4trace:acinclude.m4:100: -1- AC_DEFUN([TUXBOX_APPS_DVB], [
AC_ARG_WITH(dvbincludes,
	[  --with-dvbincludes=PATH  path for dvb includes [[NONE]]],
	[DVBINCLUDES="$withval"],[DVBINCLUDES=""])

if test "$DVBINCLUDES"; then
	CPPFLAGS="$CPPFLAGS -I$DVBINCLUDES"
fi

AC_CHECK_HEADERS(ost/dmx.h,[
	DVB_API_VERSION=1
	AC_MSG_NOTICE([found dvb version 1])
])

if test -z "$DVB_API_VERSION"; then
AC_CHECK_HEADERS(linux/dvb/version.h,[
	AC_LANG_PREPROC_REQUIRE()
	AC_REQUIRE([AC_PROG_EGREP])
	AC_LANG_CONFTEST([AC_LANG_SOURCE([[
#include <linux/dvb/version.h>
version DVB_API_VERSION
	]])])
	DVB_API_VERSION=`(eval "$ac_cpp -traditional-cpp conftest.$ac_ext") 2>&AS_MESSAGE_LOG_FD | $EGREP "^version" | sed "s,version\ ,,"`
	rm -f conftest*

	AC_MSG_NOTICE([found dvb version $DVB_API_VERSION])
])
fi

if test "$DVB_API_VERSION"; then
	AC_DEFINE(HAVE_DVB,1,[Define to 1 if you have the dvb includes])
	AC_DEFINE_UNQUOTED(HAVE_DVB_API_VERSION,$DVB_API_VERSION,[Define to the version of the dvb api])
else
	AC_MSG_ERROR([can't find dvb headers])
fi
])
m4trace:acinclude.m4:138: -1- AC_DEFUN([AC_GNU_SOURCE], [AH_VERBATIM([_GNU_SOURCE],
[/* Enable GNU extensions on systems that have them.  */
#ifndef _GNU_SOURCE
# undef _GNU_SOURCE
#endif])dnl
AC_BEFORE([$0], [AC_COMPILE_IFELSE])dnl
AC_BEFORE([$0], [AC_RUN_IFELSE])dnl
AC_DEFINE([_GNU_SOURCE])
])
m4trace:acinclude.m4:149: -1- AC_DEFUN([AC_PROG_EGREP], [AC_CACHE_CHECK([for egrep], [ac_cv_prog_egrep],
   [if echo a | (grep -E '(a|b)') >/dev/null 2>&1
    then ac_cv_prog_egrep='grep -E'
    else ac_cv_prog_egrep='egrep'
    fi])
 EGREP=$ac_cv_prog_egrep
 AC_SUBST([EGREP])
])
m4trace:acinclude.m4:159: -1- AC_DEFUN([TUXBOX_BOXTYPE], [

AC_ARG_WITH(boxtype,
	[  --with-boxtype          valid values: generic,dgs,gigablue,dreambox,xtrend,fulan,kathrein,ipbox,topfield,fortis_hdbox,octagon,atevio,adb_box,whitebox,vip,homecast,vuplus,azbox,technomate,coolstream,hypercube,venton,xp1000,odin,ixuss,iqonios,e3hd,ebox5000,wetek,edision,hd,gi,xpeedc,formuler,miraclebox,spycat,xsarius,zgemma,wwio],
	[case "${withval}" in
		generic|dgs|gigablue|dreambox|xtrend|fulan|kathrein|ipbox|hl101|topfield|fortis_hdbox|octagon|atevio|adb_box|whitebox|vip|homecast|vuplus|azbox|technomate|coolstream|hypercube|venton|xp1000|odin|ixuss|iqonios|e3hd|ebox5000|wetek|edision|hd|gi|xpeedc|formuler|miraclebox|spycat|xsarius|zgemma|wwio)
			BOXTYPE="$withval"
			;;
		cu*)
			BOXTYPE="dgs"
			BOXMODEL="$withval"
			;;
		gb*)
			BOXTYPE="gigablue"
			BOXMODEL="$withval"
			;;

		tf*)
			BOXTYPE="topfield"
			BOXMODEL="$withval"
			;;
		dm*)
			BOXTYPE="dreambox"
			BOXMODEL="$withval"
			;;
		et*)
			BOXTYPE="xtrend"
			BOXMODEL="$withval"
			;;
		spa*)
			BOXTYPE="fulan"
			BOXMODEL="$withval"
			;;
		uf*)
			BOXTYPE="kathrein"
			BOXMODEL="$withval"
			;;
		ip*)
			BOXTYPE="ipbox"
			BOXMODEL="$withval"
			;;
		hl101*)
			BOXTYPE="duckbox"
			BOXMODEL="$withval"
			;;	
		at*)
			BOXTYPE="atevio"
			BOXMODEL="$withval"
			;;
		oct*)
			BOXTYPE="octagon"
			BOXMODEL="$withval"
			;;
		vu*)
			BOXTYPE="vuplus"
			BOXMODEL="$withval"
			;;
		az*)
			BOXTYPE="azbox"
			BOXMODEL="$withval"
			;;
		tm*)
			BOXTYPE="technomate"
			BOXMODEL="$withval"
			;;

		ven*)
			BOXTYPE="venton"
			BOXMODEL="$withval"
			;;

		ixu*)
			BOXTYPE="ixuss"
			BOXMODEL="$withval"
			;;

		iqo*)
			BOXTYPE="iqonios"
			BOXMODEL="$withval"
			;;
		
		odi*)
			BOXTYPE="odin"
			BOXMODEL="$withval"
			;;

		wet*)
			BOXTYPE="wetek"
			BOXMODEL="$withval"
			;;

		os*)
			BOXTYPE="edision"
			BOXMODEL="$withval"
			;;

		hd*)
			BOXTYPE="hd"
			BOXMODEL="$withval"
			;;

		gi*)
			BOXTYPE="gi"
			BOXMODEL="$withval"
			;;

		xpe*)
			BOXTYPE="xpeedc"
			BOXMODEL="$withval"
			;;

		for*)
			BOXTYPE="formuler"
			BOXMODEL="$withval"
			;;

		mir*)
			BOXTYPE="miraclebox"
			BOXMODEL="$withval"
			;;

		spy*)
			BOXTYPE="spycat"
			BOXMODEL="$withval"
			;;

		xsa*)
			BOXTYPE="xsarius"
			BOXMODEL="$withval"
			;;

		h7)
			BOXTYPE="zgemma"
			BOXMODEL="$withval"
			;;
	
		bre*)
			BOXTYPE="wwio"
			BOXMODEL="$withval"
			;;

		*)
			AC_MSG_ERROR([unsupported value $withval for --with-boxtype])
			;;
	esac], [BOXTYPE="generic"])

AC_ARG_WITH(boxmodel,
	[  --with-boxmodel	valid for dgs: cuberevo,cuberevo_mini,cuberevo_mini2,cuberevo_mini_fta,cuberevo_250hd,cuberevo_2000hd,cuberevo_9500hd
				valid for gigablue: gbsolo,gb800se,gb800ue,gb800seplus,gb800ueplus,gbquad
				valid for dreambox: dm500, dm500plus, dm600pvr, dm56x0, dm7000, dm7020, dm7025, dm500hd, dm7020hd, dm8000, dm800, dm800se, dm520
				valid for xtrend: et4x00,et5x00,et6x00,et7x00, et8000,et8500,et9x00, et10000
				valid for fulan: spark, spark7162
				valid for kathrein: ufs910, ufs922, ufs912, ufs913, ufc960
				valid for ipbox: ipbox55, ipbox99, ipbox9900
				valid for ipbox: hl101
				valid for atevio: atevio700,atevio7000,atevio7500,atevio7600
				valid for octagon: octagon1008
				valid for topfield: tf7700
				valid for vuplus: vusolo,vuduo,vuuno,vuultimo,vuduo2,vusolo2,vusolo4k,vusolose,vuzero,vuduo4k
				valid for azbox: azboxhd,azboxme,azboxminime
				valid for technomate: tmtwin,tm2t,tmsingle,tmnano
				valid for venton: ventonhde,ventonhdx,inihde,inihdp
				valid for ixuss: ixusszero,ixussone
				valid for iqonios: iqonios100hd,iqonios300hd,mediabox,optimussos1,optimussos2
				valid for odin: odinm6,odinm7,odinm9
				valid for wetek: wetekplay
				valid for edision: osmini, osminiplus, osnino, osninoplus, osninopro, osmio4k, osmio4plus
				valid for hd: hd11, hd51, hd500c, hd1100, hd1200, hd1265, hdhd1500, hd2400, ax51
				valid for gi: et7000mini
				valid for xpeedc: xpeedc
				valid for formuler: formuler1, formuler3, formuler4
				valid for miraclebox: mbmicro, mbtwinplus
				valid for spycat: spycat, spycatmini
				valid for xsarius: fusionhd, fusionhdse, purehd
				valid for zgemma: h3, h4, h5, h7, i55, lc, sh1
				valid for wwio: bre2ze4k],
	[case "${withval}" in
		cuberevo|cuberevo_mini|cuberevo_mini2|cuberevo_mini_fta|cuberevo_250hd|cuberevo_2000hd|cuberevo_9500hd)
			if test "$BOXTYPE" = "dgs"; then
				BOXMODEL="$withval"
			else
				AC_MSG_ERROR([unknown model $withval for boxtype $BOXTYPE])
			fi
			;;
		gb800solo|gb800se|gb800ue|gb800seplus|gb800ueplus|gbquad)
			if test "$BOXTYPE" = "gigablue"; then
				BOXMODEL="$withval"
			else
				AC_MSG_ERROR([unknown model $withval for boxtype $BOXTYPE])
			fi
			;;
		tf7700)
			if test "$BOXTYPE" = "topfield"; then
				BOXMODEL="$withval"
			else
				AC_MSG_ERROR([unknown model $withval for boxtype $BOXTYPE])
			fi
			;;
		dm500|dm500plus|dm600pvr|dm56x0|dm7000|dm7020|dm7025|dm500hd|dm7020hd|dm8000|dm800|dm800se|dm520)
			if test "$BOXTYPE" = "dreambox"; then
				BOXMODEL="$withval"
			else
				AC_MSG_ERROR([unknown model $withval for boxtype $BOXTYPE])
			fi
			;;
		et4x00|et5x00|et6x00|et7x00|et8000|et8500|et9x00|et10000)
			if test "$BOXTYPE" = "xtrend"; then
				BOXMODEL="$withval"
			else
				AC_MSG_ERROR([unknown model $withval for boxtype $BOXTYPE])
			fi
			;;
		spark|spark7162)
			if test "$BOXTYPE" = "fulan"; then
				BOXMODEL="$withval"
			else
				AC_MSG_ERROR([unknown model $withval for boxtype $BOXTYPE])
			fi
			;;
		ufs910|ufs912|ufs913|ufs922|ufc960)
			if test "$BOXTYPE" = "kathrein"; then
				BOXMODEL="$withval"
			else
				AC_MSG_ERROR([unknown model $withval for boxtype $BOXTYPE])
			fi
			;;
		ipbox55|ipbox99|ipbox9900)
			if test "$BOXTYPE" = "ipbox"; then
				BOXMODEL="$withval"
			else
				AC_MSG_ERROR([unknown model $withval for boxtype $BOXTYPE])
			fi
			;;
		hl101)
			if test "$BOXTYPE" = "duckbox"; then
				BOXMODEL="$withval"
			else
				AC_MSG_ERROR([unknown model $withval for boxtype $BOXTYPE])
			fi
			;;
		atevio700|atevio7000|atevio7500|atevio7600)
			if test "$BOXTYPE" = "atevio"; then
				BOXMODEL="$withval"
			else
				AC_MSG_ERROR([unknown model $withval for boxtype $BOXTYPE])
			fi
			;;
		octagon1008)
			if test "$BOXTYPE" = "octagon"; then
				BOXMODEL="$withval"
			else
				AC_MSG_ERROR([unknown model $withval for boxtype $BOXTYPE])
			fi
			;;
		vusolo2|vuduo2|vusolo|vuduo|vuuno|vuultimo|vusolose|vusolo4k|vuzero|vuduo4k)
			if test "$BOXTYPE" = "vuplus"; then
				BOXMODEL="$withval"
			else
				AC_MSG_ERROR([unknown model $withval for boxtype $BOXTYPE])
			fi
			;;
		azboxhd|azboxme|azboxminime)
			if test "$BOXTYPE" = "azbox"; then
				BOXMODEL="$withval"
			else
				AC_MSG_ERROR([unknown model $withval for boxtype $BOXTYPE])
			fi
			;;
		tmtwin|tm2t|tmsingle|tmnano)
			if test "$BOXTYPE" = "technomate"; then
				BOXMODEL="$withval"
			else
				AC_MSG_ERROR([unknown model $withval for boxtype $BOXTYPE])
			fi
			;;
		coolstream)
			if test "$BOXTYPE" = "coolstream"; then
				BOXMODEL="$withval"
			else
				AC_MSG_ERROR([unknown model $withval for boxtype $BOXTYPE])
			fi
			;;
		hypercube|su980)
			if test "$BOXTYPE" = "hypercube"; then
				BOXMODEL="$withval"
			else
				AC_MSG_ERROR([unknown model $withval for boxtype $BOXTYPE])
			fi
			;;
		ventonhde|ventonhdx|inihde|inihdp)
			if test "$BOXTYPE" = "venton"; then
				BOXMODEL="$withval"
			else
				AC_MSG_ERROR([unknown model $withval for boxtype $BOXTYPE])
			fi
			;;
		ixusszero|ixussone)
			if test "$BOXTYPE" = "ixuss"; then
				BOXMODEL="$withval"
			else
				AC_MSG_ERROR([unknown model $withval for boxtype $BOXTYPE])
			fi
			;;
		iqonios100hd|iqonios300hd|mediabox|optimussos1|optimussos2)
			if test "$BOXTYPE" = "iqonios"; then
				BOXMODEL="$withval"
			else
				AC_MSG_ERROR([unknown model $withval for boxtype $BOXTYPE])
			fi
			;;
		odinm6|odinm7|odinm9)
			if test "$BOXTYPE" = "odin"; then
				BOXMODEL="$withval"
			else
				AC_MSG_ERROR([unknown model $withval for boxtype $BOXTYPE])
			fi
			;;
		xp1000)
			if test "$BOXTYPE" = "xp1000"; then
				BOXMODEL="$withval"
			else
				AC_MSG_ERROR([unknown model $withval for boxtype $BOXTYPE])
			fi
			;;
		e3hd)
			if test "$BOXTYPE" = "e3hd"; then
				BOXMODEL="$withval"
			else
				AC_MSG_ERROR([unknown model $withval for boxtype $BOXTYPE])
			fi
			;;
		ebox5000)
			if test "$BOXTYPE" = "ebox5000"; then
				BOXMODEL="$withval"
			else
				AC_MSG_ERROR([unknown model $withval for boxtype $BOXTYPE])
			fi
			;;
		wetekplay)
			if test "$BOXTYPE" = "wetek"; then
				BOXMODEL="$withval"
			else
				AC_MSG_ERROR([unknown model $withval for boxtype $BOXTYPE])
			fi
			;;
		osmini|osminiplus|osnino|osninoplus|osninopro|osmio4k|osmio4kplus)
			if test "$BOXTYPE" = "edision"; then
				BOXMODEL="$withval"
			else
				AC_MSG_ERROR([unknown model $withval for boxtype $BOXTYPE])
			fi
			;;
		hd11|hd51|ax51|hd500c|hd1100|hd1200|hd1265|hd1500|hd2400)
			if test "$BOXTYPE" = "hd"; then
				BOXMODEL="$withval"
			else
				AC_MSG_ERROR([unknown model $withval for boxtype $BOXTYPE])
			fi
			;;
		et7000mini)
			if test "$BOXTYPE" = "gi"; then
				BOXMODEL="$withval"
			else
				AC_MSG_ERROR([unknown model $withval for boxtype $BOXTYPE])
			fi
			;;
		xpeedc)
			if test "$BOXTYPE" = "xpeedc"; then
				BOXMODEL="$withval"
			else
				AC_MSG_ERROR([unknown model $withval for boxtype $BOXTYPE])
			fi
			;;
		formuler1|formuler3|formuler4)
			if test "$BOXTYPE" = "formuler"; then
				BOXMODEL="$withval"
			else
				AC_MSG_ERROR([unknown model $withval for boxtype $BOXTYPE])
			fi
			;;
		mbmicro|mbtwinplus)
			if test "$BOXTYPE" = "miraclebox"; then
				BOXMODEL="$withval"
			else
				AC_MSG_ERROR([unknown model $withval for boxtype $BOXTYPE])
			fi
			;;
		spycat|spycatmini)
			if test "$BOXTYPE" = "spycat"; then
				BOXMODEL="$withval"
			else
				AC_MSG_ERROR([unknown model $withval for boxtype $BOXTYPE])
			fi
			;;
		fusionhd|fusionhdse|purehd)
			if test "$BOXTYPE" = "xsarius"; then
				BOXMODEL="$withval"
			else
				AC_MSG_ERROR([unknown model $withval for boxtype $BOXTYPE])
			fi
			;;
		h3|h4|h5|h7|i55|lc|sh1)
			if test "$BOXTYPE" = "zgemma"; then
				BOXMODEL="$withval"
			else
				AC_MSG_ERROR([unknown model $withval for boxtype $BOXTYPE])
			fi
			;;
		bre2ze4k)
			if test "$BOXTYPE" = "wwio"; then
				BOXMODEL="$withval"
			else
				AC_MSG_ERROR([unknown model $withval for boxtype $BOXTYPE])
			fi
			;;
		qemu*)
			if test "$BOXTYPE" = "generic"; then
				BOXMODEL="$withval"
			else
				AC_MSG_ERROR([unknown model $withval for boxtype $BOXTYPE])
			fi
			;;
		*)
			AC_MSG_ERROR([unsupported value $withval for --with-boxmodel])
			;;
	esac],
	[if test "$BOXTYPE" = "dgs" -o "$BOXTYPE" = "gigablue" -o "$BOXTYPE" = "dreambox" -o "$BOXTYPE" = "xtrend" -o "$BOXTYPE" = "fulan" -o "$BOXTYPE" = "kathrein" -o "$BOXTYPE" = "ipbox" -o "$BOXTYPE" = "atevio" -o "$BOXTYPE" = "octagon" -o "$BOXTYPE" = "vuplus" -o "$BOXTYPE" = "technomate" -o "$BOXTYPE" = "venton" -o "$BOXTYPE" = "ixuss" -o "$BOXTYPE" = "iqonios" -o "$BOXTYPE" = "odin" -o "$BOXTYPE" = "edision" -o "$BOXTYPE" = "hd" -o "$BOXTYPE" = "gi" -o "$BOXTYPE" = "formuler" -o "$BOXTYPE" = "miraclebox" -o "$BOXTYPE" = "spycat" -o "$BOXTYPE" = "xsarius" -o "$BOXTYPE" = "zgemma" -o "$BOXTYPE" = "wwio" && test -z "$BOXMODEL"; then
		AC_MSG_ERROR([this boxtype $BOXTYPE needs --with-boxmodel])
	fi])

AC_SUBST(BOXTYPE)
AC_SUBST(BOXMODEL)

AM_CONDITIONAL(BOXTYPE_GENERIC, test "$BOXTYPE" = "generic")
AM_CONDITIONAL(BOXTYPE_DGS, test "$BOXTYPE" = "dgs")
AM_CONDITIONAL(BOXTYPE_GIGABLUE, test "$BOXTYPE" = "gigablue")
AM_CONDITIONAL(BOXTYPE_DREAMBOX, test "$BOXTYPE" = "dreambox")
AM_CONDITIONAL(BOXTYPE_XTREND, test "$BOXTYPE" = "xtrend")
AM_CONDITIONAL(BOXTYPE_FULAN, test "$BOXTYPE" = "fulan")
AM_CONDITIONAL(BOXTYPE_KATHREIN, test "$BOXTYPE" = "kathrein")
AM_CONDITIONAL(BOXTYPE_IPBOX, test "$BOXTYPE" = "ipbox")
AM_CONDITIONAL(BOXTYPE_HL101, test "$BOXTYPE" = "hl101")
AM_CONDITIONAL(BOXTYPE_TOPFIELD, test "$BOXTYPE" = "toptfield")
AM_CONDITIONAL(BOXTYPE_FORTIS_HDBOX, test "$BOXTYPE" = "fortis_hdbox")
AM_CONDITIONAL(BOXTYPE_OCTAGON, test "$BOXTYPE" = "octagon")
AM_CONDITIONAL(BOXTYPE_ATEVIO, test "$BOXTYPE" = "atevio")
AM_CONDITIONAL(BOXTYPE_ADB_BOX, test "$BOXTYPE" = "adb_box")
AM_CONDITIONAL(BOXTYPE_WHITEBOX, test "$BOXTYPE" = "whitebox")
AM_CONDITIONAL(BOXTYPE_VIP, test "$BOXTYPE" = "vip")
AM_CONDITIONAL(BOXTYPE_HOMECAST, test "$BOXTYPE" = "homecast")
AM_CONDITIONAL(BOXTYPE_VUPLUS, test "$BOXTYPE" = "vuplus")
AM_CONDITIONAL(BOXTYPE_AZBOX, test "$BOXTYPE" = "azbox")
AM_CONDITIONAL(BOXTYPE_TECHNOMATE, test "$BOXTYPE" = "technomate")
AM_CONDITIONAL(BOXTYPE_IPBOX, test "$BOXTYPE" = "ipbox")
AM_CONDITIONAL(BOXTYPE_KATHREIN, test "$BOXTYPE" = "kathrein")
AM_CONDITIONAL(BOXTYPE_COOLSTREAM, test "$BOXTYPE" = "coolstream")
AM_CONDITIONAL(BOXTYPE_HYPERCUBE, test "$BOXTYPE" = "hypercube")
AM_CONDITIONAL(BOXTYPE_VENTON, test "$BOXTYPE" = "venton")
AM_CONDITIONAL(BOXTYPE_IXUSS, test "$BOXTYPE" = "ixuss")
AM_CONDITIONAL(BOXTYPE_IQONIOS, test "$BOXTYPE" = "iqonios")
AM_CONDITIONAL(BOXTYPE_ODIN, test "$BOXTYPE" = "odin")
AM_CONDITIONAL(BOXTYPE_XP1000, test "$BOXTYPE" = "xp1000")
AM_CONDITIONAL(BOXTYPE_E3HD, test "$BOXTYPE" = "e3hd")
AM_CONDITIONAL(BOXTYPE_EBOX5000, test "$BOXTYPE" = "ebox5000")
AM_CONDITIONAL(BOXTYPE_WETEK, test "$BOXTYPE" = "wetek")
AM_CONDITIONAL(BOXTYPE_EDISION, test "$BOXTYPE" = "edision")
AM_CONDITIONAL(BOXTYPE_HD, test "$BOXTYPE" = "hd")
AM_CONDITIONAL(BOXTYPE_GI, test "$BOXTYPE" = "gi")
AM_CONDITIONAL(BOXTYPE_XPEEDC, test "$BOXTYPE" = "xpeedc")
AM_CONDITIONAL(BOXTYPE_FORMULER, test "$BOXTYPE" = "formuler")
AM_CONDITIONAL(BOXTYPE_MIRACLEBOX, test "$BOXTYPE" = "miraclebox")
AM_CONDITIONAL(BOXTYPE_SPYCAT, test "$BOXTYPE" = "spycat")
AM_CONDITIONAL(BOXTYPE_XSARIUS, test "$BOXTYPE" = "xsarius")
AM_CONDITIONAL(BOXTYPE_ZGEMMA, test "$BOXTYPE" = "zgemma")
AM_CONDITIONAL(BOXTYPE_WWIO, test "$BOXTYPE" = "wwio")

AM_CONDITIONAL(BOXMODEL_CUBEREVO, test "$BOXMODEL" = "cuberevo")
AM_CONDITIONAL(BOXMODEL_CUBEREVO_MINI, test "$BOXMODEL" = "cuberevo_mini")
AM_CONDITIONAL(BOXMODEL_CUBEREVO_MINI2, test "$BOXMODEL" = "cuberevo_mini2")
AM_CONDITIONAL(BOXMODEL_CUBEREVO_MINI_FTA, test "$BOXMODEL" = "cuberevo_mini_fta")
AM_CONDITIONAL(BOXMODEL_CUBEREVO_250HD, test "$BOXMODEL" = "cuberevo_250hd")
AM_CONDITIONAL(BOXMODEL_CUBEREVO_2000HD, test "$BOXMODEL" = "cuberevo_2000hd")
AM_CONDITIONAL(BOXMODEL_CUBEREVO_9500HD, test "$BOXMODEL" = "cuberevo_9500HD")

AM_CONDITIONAL(BOXMODEL_TOPFIELD_TF7700, test "$BOXMODEL" = "tf7700")

AM_CONDITIONAL(BOXMODEL_GB800SOLO,test "$BOXMODEL" = "gb800solo")
AM_CONDITIONAL(BOXMODEL_GB800SE,test "$BOXMODEL" = "gb800se")
AM_CONDITIONAL(BOXMODEL_GB800UE,test "$BOXMODEL" = "gb800ue")
AM_CONDITIONAL(BOXMODEL_GB800SEPLUS,test "$BOXMODEL" = "gb800seplus")
AM_CONDITIONAL(BOXMODEL_GB800UEPLUS,test "$BOXMODEL" = "gb800ueplus")
AM_CONDITIONAL(BOXMODEL_GBQUAD,test "$BOXMODEL" = "gbquad")

AM_CONDITIONAL(BOXMODEL_DM500,test "$BOXMODEL" = "dm500")
AM_CONDITIONAL(BOXMODEL_DM500PLUS,test "$BOXMODEL" = "dm500plus")
AM_CONDITIONAL(BOXMODEL_DM600PVR,test "$BOXMODEL" = "dm600pvr")
AM_CONDITIONAL(BOXMODEL_DM56x0,test "$BOXMODEL" = "dm56x0")
AM_CONDITIONAL(BOXMODEL_DM7000,test "$BOXMODEL" = "dm7000" -o "$BOXMODEL" = "dm7020" -o "$BOXMODEL" = "dm7025")

AM_CONDITIONAL(BOXMODEL_DM500HD,test "$BOXMODEL" = "dm500hd")
AM_CONDITIONAL(BOXMODEL_DM800HD,test "$BOXMODEL" = "dm800")
AM_CONDITIONAL(BOXMODEL_DM800SE,test "$BOXMODEL" = "dm800se")
AM_CONDITIONAL(BOXMODEL_DM7000HD,test "$BOXMODEL" = "dm7020hd")
AM_CONDITIONAL(BOXMODEL_DM8000HD,test "$BOXMODEL" = "dm8000")
AM_CONDITIONAL(BOXMODEL_DM520,test "$BOXMODEL" = "dm520")

AM_CONDITIONAL(BOXMODEL_ET4X00,test "$BOXMODEL" = "et4x00")
AM_CONDITIONAL(BOXMODEL_ET5X00,test "$BOXMODEL" = "et5x00")
AM_CONDITIONAL(BOXMODEL_ET6X00,test "$BOXMODEL" = "et6x00")
AM_CONDITIONAL(BOXMODEL_ET7X00,test "$BOXMODEL" = "et7x00")
AM_CONDITIONAL(BOXMODEL_ET8000,test "$BOXMODEL" = "et8000")
AM_CONDITIONAL(BOXMODEL_ET8500,test "$BOXMODEL" = "et8500")
AM_CONDITIONAL(BOXMODEL_ET9X00,test "$BOXMODEL" = "et9x00")
AM_CONDITIONAL(BOXMODEL_ET10000,test "$BOXMODEL" = "et10000")

AM_CONDITIONAL(BOXMODEL_SPARK,test "$BOXMODEL" = "spark")
AM_CONDITIONAL(BOXMODEL_SPARK7162,test "$BOXMODEL" = "spark7162")

AM_CONDITIONAL(BOXMODEL_UFS910, test "$BOXMODEL" = "ufs910")
AM_CONDITIONAL(BOXMODEL_UFS912, test "$BOXMODEL" = "ufs912")
AM_CONDITIONAL(BOXMODEL_UFS913, test "$BOXMODEL" = "ufs913")
AM_CONDITIONAL(BOXMODEL_UFS922, test "$BOXMODEL" = "ufs922")
AM_CONDITIONAL(BOXMODEL_UFC960, test "$BOXMODEL" = "ufc960")

AM_CONDITIONAL(BOXMODEL_IPBOX55, test "$BOXMODEL" = "ipbox55")
AM_CONDITIONAL(BOXMODEL_IPBOX99, test "$BOXMODEL" = "ipbox99")
AM_CONDITIONAL(BOXMODEL_IPBOX9900, test "$BOXMODEL" = "ipbox9900")

AM_CONDITIONAL(BOXMODEL_HL101, test "$BOXMODEL" = "hl101")

AM_CONDITIONAL(BOXMODEL_ATEVIO700, test "$BOXMODEL" = "atevio700")
AM_CONDITIONAL(BOXMODEL_ATEVIO7000, test "$BOXMODEL" = "atevio7000")
AM_CONDITIONAL(BOXMODEL_ATEVIO7500, test "$BOXMODEL" = "atevio7500")
AM_CONDITIONAL(BOXMODEL_ATEVIO7600, test "$BOXMODEL" = "atevio7600")

AM_CONDITIONAL(BOXMODEL_OCTAGON_1008, test "$BOXMODEL" = "octagon1008")

AM_CONDITIONAL(BOXMODEL_VUSOLO2, test "$BOXMODEL" = "vusolo2")
AM_CONDITIONAL(BOXMODEL_VUDUO2, test "$BOXMODEL" = "vuduo2")
AM_CONDITIONAL(BOXMODEL_VUSOLO, test "$BOXMODEL" = "vusolo")
AM_CONDITIONAL(BOXMODEL_VUDUO, test "$BOXMODEL" = "vuduo")
AM_CONDITIONAL(BOXMODEL_VUUNO, test "$BOXMODEL" = "vuuno")
AM_CONDITIONAL(BOXMODEL_VUULTIMO, test "$BOXMODEL" = "vuultimo")
AM_CONDITIONAL(BOXMODEL_VUSOLOSE, test "$BOXMODEL" = "vusolose")
AM_CONDITIONAL(BOXMODEL_VUSOLO4K, test "$BOXMODEL" = "vusolo4k")
AM_CONDITIONAL(BOXMODEL_VUZERO, test "$BOXMODEL" = "vuzero")
AM_CONDITIONAL(BOXMODEL_VUDUO4K, test "$BOXMODEL" = "vuduo4k")

AM_CONDITIONAL(BOXMODEL_AZBOXHD, test "$BOXMODEL" = "azboxhd")
AM_CONDITIONAL(BOXMODEL_AZBOXME, test "$BOXMODEL" = "azboxme")
AM_CONDITIONAL(BOXMODEL_AZBOXMINIME, test "$BOXMODEL" = "azboxminime")

AM_CONDITIONAL(BOXMODEL_TMTWIN, test "$BOXMODEL" = "tmtwin")
AM_CONDITIONAL(BOXMODEL_TM2T, test "$BOXMODEL" = "tm2t")
AM_CONDITIONAL(BOXMODEL_TMSINGLE, test "$BOXMODEL" = "tmsingle")
AM_CONDITIONAL(BOXMODEL_TMNANO, test "$BOXMODEL" = "tmnano")

AM_CONDITIONAL(BOXMODEL_VENTONHDE, test "$BOXMODEL" = "ventonhde")
AM_CONDITIONAL(BOXMODEL_VENTONHDX, test "$BOXMODEL" = "ventonhdx")
AM_CONDITIONAL(BOXMODEL_INIHDE, test "$BOXMODEL" = "inihde")
AM_CONDITIONAL(BOXMODEL_INIHDP, test "$BOXMODEL" = "inihdp")

AM_CONDITIONAL(BOXMODEL_IXUSSZERO, test "$BOXMODEL" = "ixusszero")
AM_CONDITIONAL(BOXMODEL_IXUSSONE, test "$BOXMODEL" = "ixussone")

AM_CONDITIONAL(BOXMODEL_IQONIOS100HD, test "$BOXMODEL" = "iqonios100hd")
AM_CONDITIONAL(BOXMODEL_IQONIOS300HD, test "$BOXMODEL" = "iqonios300hd")
AM_CONDITIONAL(BOXMODEL_MEDIABOX, test "$BOXMODEL" = "mediabox")
AM_CONDITIONAL(BOXMODEL_OPTIMUSSOS1, test "$BOXMODEL" = "optimussos1")
AM_CONDITIONAL(BOXMODEL_OPTIMUSSOS2, test "$BOXMODEL" = "optimussos2")

AM_CONDITIONAL(BOXMODEL_ODINM6, test "$BOXMODEL" = "odinm6")
AM_CONDITIONAL(BOXMODEL_ODINM7, test "$BOXMODEL" = "odinm7")
AM_CONDITIONAL(BOXMODEL_ODINM9, test "$BOXMODEL" = "odinm9")

AM_CONDITIONAL(BOXMODEL_E3HD,test "$BOXMODEL" = "e3hd")

AM_CONDITIONAL(BOXMODEL_WETEKPLAY, test "$BOXMODEL" = "wetekplay")

AM_CONDITIONAL(BOXMODEL_OSMINI, test "$BOXMODEL" = "osmini")
AM_CONDITIONAL(BOXMODEL_OSMINIPLUS, test "$BOXMODEL" = "osminiplus")
AM_CONDITIONAL(BOXMODEL_OSNINO, test "$BOXMODEL" = "osnino")
AM_CONDITIONAL(BOXMODEL_OSNINOPLUS, test "$BOXMODEL" = "osninoplus")
AM_CONDITIONAL(BOXMODEL_OSNINOPRO, test "$BOXMODEL" = "osninopro")
AM_CONDITIONAL(BOXMODEL_OSMIO4K, test "$BOXMODEL" = "osmio4k")
AM_CONDITIONAL(BOXMODEL_OSMIO4KPLUS, test "$BOXMODEL" = "osmio4kplus")

AM_CONDITIONAL(BOXMODEL_HD11, test "$BOXMODEL" = "hd11")
AM_CONDITIONAL(BOXMODEL_HD51, test "$BOXMODEL" = "hd51")
AM_CONDITIONAL(BOXMODEL_AX51, test "$BOXMODEL" = "ax51")
AM_CONDITIONAL(BOXMODEL_HD500C, test "$BOXMODEL" = "hd500c")
AM_CONDITIONAL(BOXMODEL_HD1100, test "$BOXMODEL" = "hd1100")
AM_CONDITIONAL(BOXMODEL_HD1200, test "$BOXMODEL" = "hd1200")
AM_CONDITIONAL(BOXMODEL_HD1265, test "$BOXMODEL" = "hd1265")
AM_CONDITIONAL(BOXMODEL_HD1500, test "$BOXMODEL" = "hd1500")
AM_CONDITIONAL(BOXMODEL_HD2400, test "$BOXMODEL" = "hd2400")

AM_CONDITIONAL(BOXMODEL_ET7000MINI, test "$BOXMODEL" = "et7000mini")

AM_CONDITIONAL(BOXMODEL_XPEEDC, test "$BOXMODEL" = "xpeedc")

AM_CONDITIONAL(BOXMODEL_FORMULER1, test "$BOXMODEL" = "formuler1")
AM_CONDITIONAL(BOXMODEL_FORMULER3, test "$BOXMODEL" = "formuler3")
AM_CONDITIONAL(BOXMODEL_FORMULER4, test "$BOXMODEL" = "formuler4")

AM_CONDITIONAL(BOXMODEL_MBMICRO, test "$BOXMODEL" = "mbmicro")
AM_CONDITIONAL(BOXMODEL_MBTWINPLUS, test "$BOXMODEL" = "mbtwinplus")

AM_CONDITIONAL(BOXMODEL_SPYCAT, test "$BOXMODEL" = "spycat")
AM_CONDITIONAL(BOXMODEL_SPYCATMINI, test "$BOXMODEL" = "spycatmini")

AM_CONDITIONAL(BOXMODEL_FUSIONHD, test "$BOXMODEL" = "fusionhd")
AM_CONDITIONAL(BOXMODEL_FUSIONHDSE, test "$BOXMODEL" = "fusionhdse")
AM_CONDITIONAL(BOXMODEL_PUREHD, test "$BOXMODEL" = "purehd")

AM_CONDITIONAL(BOXMODEL_H3, test "$BOXMODEL" = "h3")
AM_CONDITIONAL(BOXMODEL_H4, test "$BOXMODEL" = "h4")
AM_CONDITIONAL(BOXMODEL_H5, test "$BOXMODEL" = "h5")
AM_CONDITIONAL(BOXMODEL_H7, test "$BOXMODEL" = "h7")
AM_CONDITIONAL(BOXMODEL_I55, test "$BOXMODEL" = "i55")
AM_CONDITIONAL(BOXMODEL_LC, test "$BOXMODEL" = "lc")
AM_CONDITIONAL(BOXMODEL_SH1, test "$BOXMODEL" = "sh1")

AM_CONDITIONAL(BOXMODEL_BRE2ZE4K, test "$BOXMODEL" = "bre2ze4k")

if test "$BOXTYPE" = "generic"; then
	AC_DEFINE(PLATFORM_GENERIC, 1, [building for generic])
elif test "$BOXTYPE" = "dgs"; then
	AC_DEFINE(PLATFORM_DGS, 1, [building for dgs])
elif test "$BOXTYPE" = "gigablue"; then
	AC_DEFINE(PLATFORM_GIGABLUE, 1, [building for gigablue])
elif test "$BOXTYPE" = "dreambox"; then
	AC_DEFINE(PLATFORM_DREAMBOX, 1, [building for dreambox])
elif test "$BOXTYPE" = "xtrend"; then
	AC_DEFINE(PLATFORM_XTREND, 1, [building for xtrend])
elif test "$BOXTYPE" = "fulan"; then
	AC_DEFINE(PLATFORM_FULAN, 1, [building for fulan])
elif test "$BOXTYPE" = "kathrein"; then
	AC_DEFINE(PLATFORM_KATHREIN, 1, [building for kathrein])
elif test "$BOXTYPE" = "ipbox"; then
	AC_DEFINE(PLATFORM_IPBOX, 1, [building for ipbox])
elif test "$BOXTYPE" = "duckbox"; then
	AC_DEFINE(HAVE_DUCKBOX_HARDWARE, 1, [building for a duckbox])	
elif test "$BOXTYPE" = "topfield"; then
	AC_DEFINE(PLATFORM_TF7700, 1, [building for topfield])
elif test "$BOXTYPE" = "fortis_hdbox"; then
	AC_DEFINE(PLATFORM_FORTIS_HDBOX, 1, [building for fortis_hdbox])
elif test "$BOXTYPE" = "octagon"; then
	AC_DEFINE(PLATFORM_OCTAGON, 1, [building for octagon])
elif test "$BOXTYPE" = "atevio"; then
	AC_DEFINE(PLATFORM_ATEVIO, 1, [building for atevio])
elif test "$BOXTYPE" = "adb_box"; then
	AC_DEFINE(PLATFORM_ADB_BOX, 1, [building for adb_box])
elif test "$BOXTYPE" = "whitebox"; then
	AC_DEFINE(PLATFORM_WHITEBOX, 1, [building for whitebox])
elif test "$BOXTYPE" = "vip"; then
	AC_DEFINE(PLATFORM_VIP, 1, [building for vip])
elif test "$BOXTYPE" = "homecast"; then
	AC_DEFINE(PLATFORM_HOMECAST, 1, [building for homecast])
elif test "$BOXTYPE" = "vuplus"; then
	AC_DEFINE(PLATFORM_VUPLUS, 1, [building for vuplus])
elif test "$BOXTYPE" = "azbox"; then
	AC_DEFINE(PLATFORM_AZBOX, 1, [building for azbox])
elif test "$BOXTYPE" = "technomate"; then
	AC_DEFINE(PLATFORM_TECHNOMATE, 1, [building for technomate])
elif test "$BOXTYPE" = "coolstream"; then
	AC_DEFINE(PLATFORM_COOLSTREAM, 1, [building for coolstream])
elif test "$BOXTYPE" = "hypercube"; then
	AC_DEFINE(PLATFORM_HYPERCUBE, 1, [building for hypercube])
elif test "$BOXTYPE" = "venton"; then
	AC_DEFINE(PLATFORM_VENTON, 1, [building for venton])
elif test "$BOXTYPE" = "ixuss"; then
	AC_DEFINE(PLATFORM_IXUSS, 1, [building for ixuss])
elif test "$BOXTYPE" = "iqonios"; then
	AC_DEFINE(PLATFORM_IQONIOS, 1, [building for iqonios])
elif test "$BOXTYPE" = "odin"; then
	AC_DEFINE(PLATFORM_ODIN, 1, [building for odin])
elif test "$BOXTYPE" = "xp1000"; then
	AC_DEFINE(PLATFORM_XP1000, 1, [building for xp1000])
elif test "$BOXTYPE" = "e3hd"; then
	AC_DEFINE(PLATFORM_E3HD, 1, [building for e3hd])
elif test "$BOXTYPE" = "ebox5000"; then
	AC_DEFINE(PLATFORM_EBOX5000, 1, [building for ebox5000])
elif test "$BOXTYPE" = "wetek"; then
	AC_DEFINE(PLATFORM_WETEK, 1, [building for wetek])
elif test "$BOXTYPE" = "edision"; then
	AC_DEFINE(PLATFORM_EDISION, 1, [building for edision])
elif test "$BOXTYPE" = "hd"; then
	AC_DEFINE(PLATFORM_HD, 1, [building for hd])
elif test "$BOXTYPE" = "gi"; then
	AC_DEFINE(PLATFORM_GI, 1, [building for gi])
elif test "$BOXTYPE" = "xpeedc"; then
	AC_DEFINE(PLATFORM_XPEEDC, 1, [building for xpeedc])
elif test "$BOXTYPE" = "formuler"; then
	AC_DEFINE(PLATFORM_FORMULER, 1, [building for formuler])
elif test "$BOXTYPE" = "miraclebox"; then
	AC_DEFINE(PLATFORM_MIRACLEBOX, 1, [building for miraclebox])
elif test "$BOXTYPE" = "spycat"; then
	AC_DEFINE(PLATFORM_SPYCAT, 1, [building for spycat])
elif test "$BOXTYPE" = "xsarius"; then
	AC_DEFINE(PLATFORM_XSARIUS, 1, [building for xsarius])
elif test "$BOXTYPE" = "zgemma"; then
	AC_DEFINE(PLATFORM_ZGEMMA, 1, [building for zgemma])
elif test "$BOXTYPE" = "wwio"; then
	AC_DEFINE(PLATFORM_WWIO, 1, [building for wwio])
fi

if test "$BOXMODEL" = "cuberevo"; then
	AC_DEFINE(PLATFORM_CUBEREVO, 1, [building for cuberevo])
elif test "$BOXMODEL" = "cuberevo_mini"; then
	AC_DEFINE(PLATFORM_CUBEREVO_MINI, 1, [building for cuberevo_mini])
elif test "$BOXMODEL" = "cuberevo_mini2"; then
	AC_DEFINE(PLATFORM_CUBEREVO_MINI2, 1, [building for cuberevo_mini2])
elif test "$BOXMODEL" = "cuberevo_mini_fta"; then
	AC_DEFINE(PLATFORM_CUBEREVO_MINI_FTA, 1, [building for cuberevo_mini_fta])
elif test "$BOXMODEL" = "cuberevo_250hd"; then
	AC_DEFINE(PLATFORM_CUBEREVO_250HD, 1, [building for cuberevo_250hd])
elif test "$BOXMODEL" = "cuberevo_2000hd"; then
	AC_DEFINE(PLATFORM_CUBEREVO_2000HD, 1, [building for cuberevo_2000hd])
elif test "$BOXMODEL" = "cuberevo_9500hd"; then
	AC_DEFINE(PLATFORM_CUBEREVO_9500HD, 1, [building for cuberevo_9500hd])

elif test "$BOXMODEL" = "gb800solo"; then
	AC_DEFINE(BOXMODEL_GB800SOLO, 1, [building for gigablue 800solo])
elif test "$BOXMODEL" = "gb800se"; then
	AC_DEFINE(BOXMODEL_GB800SE, 1, [building for gigablue 800se])
elif test "$BOXMODEL" = "gb800ue"; then
	AC_DEFINE(BOXMODEL_GB800UE, 1, [building for gigablue 800ue])
elif test "$BOXMODEL" = "gb800seplus"; then
	AC_DEFINE(BOXMODEL_GB800SEPLUS, 1, [building for gigablue 800seplus])
elif test "$BOXMODEL" = "gb800ueplus"; then
	AC_DEFINE(BOXMODEL_GB800UEPLUS, 1, [building for gigablue 800ueplus])
elif test "$BOXMODEL" = "gbquad"; then
	AC_DEFINE(BOXMODEL_GBQUAD, 1, [building for gigablue quad])

elif test "$BOXMODEL" = "dm500"; then
	AC_DEFINE(BOXMODEL_DM500, 1, [building for dreambox 500])
elif test "$BOXMODEL" = "dm500plus"; then
	AC_DEFINE(BOXMODEL_DM500PLUS, 1, [building for dreambox 500plus])
elif test "$BOXMODEL" = "dm600pvr"; then
	AC_DEFINE(BOXMODEL_DM600PVR, 1, [building for dreambox 600pvr])
elif test "$BOXMODEL" = "dm56x0"; then
	AC_DEFINE(BOXMODEL_DM56x0, 1, [building for dreambox 56x0])
elif test "$BOXMODEL" = "dm7000" -o "$BOXMODEL" = "dm7020" -o "$BOXMODEL" = "dm7025"; then
	AC_DEFINE(BOXMODEL_DM7000, 1, [building for dreambox 70xx])
elif test "$BOXMODEL" = "dm500hd"; then
	AC_DEFINE(BOXMODEL_DM500HD, 1, [building for dreambox 500hd])
elif test "$BOXMODEL" = "dm7020hd"; then
	AC_DEFINE(BOXMODEL_DM7000HD, 1, [building for dreambox 7020hd])
elif test "$BOXMODEL" = "dm8000"; then
	AC_DEFINE(BOXMODEL_DM8000HD, 1, [building for dreambox 8000])
elif test "$BOXMODEL" = "dm800"; then
	AC_DEFINE(BOXMODEL_DM800HD, 1, [building for dreambox 800])
elif test "$BOXMODEL" = "dm800se"; then
	AC_DEFINE(BOXMODEL_DM800SE, 1, [building for dreambox 800se])
elif test "$BOXMODEL" = "dm520"; then
	AC_DEFINE(BOXMODEL_DM520, 1, [building for dreambox 520])

elif test "$BOXMODEL" = "et4x00"; then
	AC_DEFINE(BOXMODEL_ET4X00, 1, [building for xtrend et4x00])
elif test "$BOXMODEL" = "et5x00"; then
	AC_DEFINE(BOXMODEL_ET5X00, 1, [building for xtrend et5x00])
elif test "$BOXMODEL" = "et6x00"; then
	AC_DEFINE(BOXMODEL_ET6X00, 1, [building for xtrend et6x00])
elif test "$BOXMODEL" = "et7x00"; then
	AC_DEFINE(BOXMODEL_ET7X00, 1, [building for xtrend et7x00])
elif test "$BOXMODEL" = "et8000"; then
	AC_DEFINE(BOXMODEL_ET8000, 1, [building for xtrend et8000])
elif test "$BOXMODEL" = "et8500"; then
	AC_DEFINE(BOXMODEL_ET8500, 1, [building for xtrend et8500])
elif test "$BOXMODEL" = "et9x00"; then
	AC_DEFINE(BOXMODEL_ET9X00, 1, [building for xtrend et9x00])
elif test "$BOXMODEL" = "et10000"; then
	AC_DEFINE(BOXMODEL_ET10000, 1, [building for xtrend et10000])

elif test "$BOXMODEL" = "spark"; then
	AC_DEFINE(PLATFORM_SPARK, 1, [building for spark 7111])
elif test "$BOXMODEL" = "spark7162"; then
	AC_DEFINE(PLATFORM_SPARK7162, 1, [building for spark 7162])

elif test "$BOXMODEL" = "ufs910"; then
	AC_DEFINE(PLATFORM_UFS910, 1, [building for ufs910])
elif test "$BOXMODEL" = "ufs912"; then
	AC_DEFINE(PLATFORM_UFS912, 1, [building for ufs912])
elif test "$BOXMODEL" = "ufs913"; then
	AC_DEFINE(PLATFORM_UFS913, 1, [building for ufs913])
elif test "$BOXMODEL" = "ufs922"; then
	AC_DEFINE(PLATFORM_UFS922, 1, [building for ufs922])
elif test "$BOXMODEL" = "ufc960"; then
	AC_DEFINE(PLATFORM_UFC960, 1, [building for ufc960])

elif test "$BOXMODEL" = "ipbox55"; then
	AC_DEFINE(PLATFORM_IPBOX55, 1, [building for ipbox55])
elif test "$BOXMODEL" = "ipbox99"; then
	AC_DEFINE(PLATFORM_IPBOX99, 1, [building for ipbox99])
elif test "$BOXMODEL" = "ipbox9900"; then
	AC_DEFINE(PLATFORM_IPBOX9900, 1, [building for ipbox9900])
	
elif test "$BOXMODEL" = "hl101"; then
	AC_DEFINE(BOXMODEL_HL101, 1, [hl101])

elif test "$BOXMODEL" = "atevio700"; then
	AC_DEFINE(BOXMODEL_ATEVIO700, 1, [building for atevio700])
elif test "$BOXMODEL" = "atevio7000"; then
	AC_DEFINE(BOXMODEL_ATEVIO7000, 1, [building for atevio7000])
elif test "$BOXMODEL" = "atevio7500"; then
	AC_DEFINE(BOXMODEL_ATEVIO7500, 1, [building for atevio7500])
elif test "$BOXMODEL" = "atevio7600"; then
	AC_DEFINE(BOXMODEL_ATEVIO7600, 1, [building for atevio7600])

elif test "$BOXMODEL" = "octagon1008"; then
	AC_DEFINE(BOXMODEL_OCTAGON_1008, 1, [building for octagon1008])

elif test "$BOXMODEL" = "vusolo2"; then
	AC_DEFINE(BOXMODEL_VUSOLO2, 1, [vuplus solo2])
elif test "$BOXMODEL" = "vuduo2"; then
	AC_DEFINE(BOXMODEL_VUDUO2, 1, [vuplus duo2])
elif test "$BOXMODEL" = "vusolo"; then
	AC_DEFINE(BOXMODEL_VUSOLO, 1, [building for vuplus solo])
elif test "$BOXMODEL" = "vuduo"; then
	AC_DEFINE(BOXMODEL_VUDUO, 1, [building for vuplus duo])
elif test "$BOXMODEL" = "vuuno"; then
	AC_DEFINE(BOXMODEL_VUUNO, 1, [building for vuplus uno])
elif test "$BOXMODEL" = "vuultimo"; then
	AC_DEFINE(BOXMODEL_VUULTIMO, 1, [building for vuplus ultimo])
elif test "$BOXMODEL" = "vusolose"; then
	AC_DEFINE(BOXMODEL_VUSOLOSE, 1, [building for vuplus solose])
elif test "$BOXMODEL" = "vusolo4k"; then
	AC_DEFINE(BOXMODEL_VUSOLO4K, 1, [building for vuplus solo4k])
elif test "$BOXMODEL" = "vuzero"; then
	AC_DEFINE(BOXMODEL_VUZERO, 1, [building for vuplus zero])
elif test "$BOXMODEL" = "vuduo4k"; then
	AC_DEFINE(BOXMODEL_VUDUO4K, 1, [building for vuplus duo4k])

elif test "$BOXMODEL" = "azboxhd"; then
	AC_DEFINE(BOXMODEL_AZBOXHD, 1, [building for azbox hd])
elif test "$BOXMODEL" = "azboxme"; then
	AC_DEFINE(BOXMODEL_AZBOXME, 1, [building for azbox me])
elif test "$BOXMODEL" = "azboxminime"; then
	AC_DEFINE(BOXMODEL_AZBOXMINIME, 1, [building for azbox minime])

elif test "$BOXMODEL" = "tmtwin"; then
	AC_DEFINE(BOXMODEL_TMTWIN, 1, [building for technomate twin])
elif test "$BOXMODEL" = "tm2t"; then
	AC_DEFINE(BOXMODEL_TM2T, 1, [building for technomate 2t])
elif test "$BOXMODEL" = "tmsingle"; then
	AC_DEFINE(BOXMODEL_TMSINGLE, 1, [building for technomate single])
elif test "$BOXMODEL" = "tmnano"; then
	AC_DEFINE(BOXMODEL_TMNANO, 1, [building for technomate nano])

elif test "$BOXMODEL" = "ventonhde"; then
	AC_DEFINE(BOXMODEL_VENTONHDE, 1, [building for ventonhde])
elif test "$BOXMODEL" = "ventonhdx"; then
	AC_DEFINE(BOXMODEL_VENTONHDX, 1, [building for ventonhdx])
elif test "$BOXMODEL" = "inihde"; then
	AC_DEFINE(BOXMODEL_INIHDE, 1, [building for inihde])
elif test "$BOXMODEL" = "inihdp"; then
	AC_DEFINE(BOXMODEL_INIHDP, 1, [building for inihdp])

elif test "$BOXMODEL" = "ixusszero"; then
	AC_DEFINE(BOXMODEL_IXUSSZERO, 1, [building for ixusszero])
elif test "$BOXMODEL" = "ixussone"; then
	AC_DEFINE(BOXMODEL_IXUSSONE, 1, [building for ixussone])

elif test "$BOXMODEL" = "iqonios100hd"; then
	AC_DEFINE(BOXMODEL_IQONIOS100HD, 1, [building for iqonios100hd])
elif test "$BOXMODEL" = "iqonios300hd"; then
	AC_DEFINE(BOXMODEL_IQONIOS300HD, 1, [building for iqonios300hd])
elif test "$BOXMODEL" = "mediabox"; then
	AC_DEFINE(BOXMODEL_MEDIABOX, 1, [building for mediabox])
elif test "$BOXMODEL" = "optimussos1"; then
	AC_DEFINE(BOXMODEL_OPTIMUSSOS1, 1, [building for optimussos1])
elif test "$BOXMODEL" = "optimussos2"; then
	AC_DEFINE(BOXMODEL_OPTIMUSSOS2, 1, [building for optimussos2])
 
elif test "$BOXMODEL" = "odinm6"; then
	AC_DEFINE(BOXMODEL_ODINM6, 1, [building for odin m6])
elif test "$BOXMODEL" = "odinm7"; then
	AC_DEFINE(BOXMODEL_ODINM7, 1, [building for odinm7])
elif test "$BOXMODEL" = "odinm9"; then
	AC_DEFINE(BOXMODEL_ODINM9, 1, [building for odinm9])

elif test "$BOXMODEL" = "e3hd"; then
	AC_DEFINE(BOXMODEL_E3HD, 1, [building for e3hd])

elif test "$BOXMODEL" = "wetekplay"; then
	AC_DEFINE(BOXMODEL_WETEKPLAY, 1, [building for wetekplay])

elif test "$BOXMODEL" = "osmini"; then
	AC_DEFINE(BOXMODEL_OSMINI, 1, [building for osmini])
elif test "$BOXMODEL" = "osminiplus"; then
	AC_DEFINE(BOXMODEL_OSMINIPLUS, 1, [building for osminiplus])
elif test "$BOXMODEL" = "osnino"; then
	AC_DEFINE(BOXMODEL_OSNINO, 1, [building for osnino])
elif test "$BOXMODEL" = "osninoplus"; then
	AC_DEFINE(BOXMODEL_OSNINOPLUS, 1, [building for osninoplus])
elif test "$BOXMODEL" = "osninopro"; then
	AC_DEFINE(BOXMODEL_OSNINOPRO, 1, [building for osninopro])
elif test "$BOXMODEL" = "osmio4k"; then
	AC_DEFINE(BOXMODEL_OSMIO4K, 1, [building for osmio4k])
elif test "$BOXMODEL" = "osmio4kplus"; then
	AC_DEFINE(BOXMODEL_OSMIO4KPLUS, 1, [building for osmio4kplus])

elif test "$BOXMODEL" = "hd11"; then
	AC_DEFINE(BOXMODEL_HD11, 1, [building for hd11])
elif test "$BOXMODEL" = "hd51"; then
	AC_DEFINE(BOXMODEL_HD51, 1, [building for hd51])
elif test "$BOXMODEL" = "ax51"; then
	AC_DEFINE(BOXMODEL_AX51, 1, [building for ax51])
elif test "$BOXMODEL" = "hd500c"; then
	AC_DEFINE(BOXMODEL_HD500C, 1, [building for hd500c])
elif test "$BOXMODEL" = "hd1100"; then
	AC_DEFINE(BOXMODEL_HD1100, 1, [building for hd1100])
elif test "$BOXMODEL" = "hd1200"; then
	AC_DEFINE(BOXMODEL_HD1200, 1, [building for hd1200])
elif test "$BOXMODEL" = "hd1265"; then
	AC_DEFINE(BOXMODEL_HD1265, 1, [building for hd1265])
elif test "$BOXMODEL" = "hd1500"; then
	AC_DEFINE(BOXMODEL_HD1500, 1, [building for hd1500])
elif test "$BOXMODEL" = "hd2400"; then
	AC_DEFINE(BOXMODEL_HD2400, 1, [building for hd2400])

elif test "$BOXMODEL" = "et7000mini"; then
	AC_DEFINE(BOXMODEL_ET7000MINI, 1, [building for et7000mini])

elif test "$BOXMODEL" = "xpeedc"; then
	AC_DEFINE(BOXMODEL_XPEEDC, 1, [building for xpeedc])

elif test "$BOXMODEL" = "formuler1"; then
	AC_DEFINE(BOXMODEL_FORMULER1, 1, [building for formuler1])
elif test "$BOXMODEL" = "formuler3"; then
	AC_DEFINE(BOXMODEL_FORMULER3, 1, [building for formuler3])
elif test "$BOXMODEL" = "formuler4"; then
	AC_DEFINE(BOXMODEL_FORMULER4, 1, [building for formuler4])

elif test "$BOXMODEL" = "mbmini"; then
	AC_DEFINE(BOXMODEL_MBMINI, 1, [building for mbmini])
elif test "$BOXMODEL" = "mbtwinplus"; then
	AC_DEFINE(BOXMODEL_MBTWINPLUS, 1, [building for mbtwinplus])

elif test "$BOXMODEL" = "spycat"; then
	AC_DEFINE(BOXMODEL_SPYCAT, 1, [building for spycat])
elif test "$BOXMODEL" = "spycatmini"; then
	AC_DEFINE(BOXMODEL_SPYCATMINI, 1, [building for spycatmini])

elif test "$BOXMODEL" = "fusionhd"; then
	AC_DEFINE(BOXMODEL_FUSIONHD, 1, [building for fusionhd])
elif test "$BOXMODEL" = "fusionhdse"; then
	AC_DEFINE(BOXMODEL_FUSIONHDSE, 1, [building for fusionhdse])
elif test "$BOXMODEL" = "purehd"; then
	AC_DEFINE(BOXMODEL_PUREHD, 1, [building for purehd])

elif test "$BOXMODEL" = "h3"; then
	AC_DEFINE(BOXMODEL_H3, 1, [building for h3])
elif test "$BOXMODEL" = "h4"; then
	AC_DEFINE(BOXMODEL_H4, 1, [building for h4])
elif test "$BOXMODEL" = "h5"; then
	AC_DEFINE(BOXMODEL_H5, 1, [building for h5])
elif test "$BOXMODEL" = "h7"; then
	AC_DEFINE(BOXMODEL_H7, 1, [building for h7])
elif test "$BOXMODEL" = "i55"; then
	AC_DEFINE(BOXMODEL_I55, 1, [building for i55])
elif test "$BOXMODEL" = "lc"; then
	AC_DEFINE(BOXMODEL_LC, 1, [building for lc])
elif test "$BOXMODEL" = "sh1"; then
	AC_DEFINE(BOXMODEL_SH1, 1, [building for sh1])

elif test "$BOXMODEL" = "bre2ze4k"; then
	AC_DEFINE(BOXMODEL_BRE2ZE4K, 1, [building for bre2ze4k])
fi
])
m4trace:configure.ac:1: -1- m4_pattern_forbid([^_?A[CHUM]_])
m4trace:configure.ac:1: -1- m4_pattern_forbid([_AC_])
m4trace:configure.ac:1: -1- m4_pattern_forbid([^LIBOBJS$], [do not use LIBOBJS directly, use AC_LIBOBJ (see section `AC_LIBOBJ vs LIBOBJS'])
m4trace:configure.ac:1: -1- m4_pattern_allow([^AS_FLAGS$])
m4trace:configure.ac:1: -1- m4_pattern_forbid([^_?m4_])
m4trace:configure.ac:1: -1- m4_pattern_forbid([^dnl$])
m4trace:configure.ac:1: -1- m4_pattern_forbid([^_?AS_])
m4trace:configure.ac:1: -1- m4_pattern_allow([^SHELL$])
m4trace:configure.ac:1: -1- m4_pattern_allow([^PATH_SEPARATOR$])
m4trace:configure.ac:1: -1- m4_pattern_allow([^PACKAGE_NAME$])
m4trace:configure.ac:1: -1- m4_pattern_allow([^PACKAGE_TARNAME$])
m4trace:configure.ac:1: -1- m4_pattern_allow([^PACKAGE_VERSION$])
m4trace:configure.ac:1: -1- m4_pattern_allow([^PACKAGE_STRING$])
m4trace:configure.ac:1: -1- m4_pattern_allow([^PACKAGE_BUGREPORT$])
m4trace:configure.ac:1: -1- m4_pattern_allow([^PACKAGE_URL$])
m4trace:configure.ac:1: -1- m4_pattern_allow([^exec_prefix$])
m4trace:configure.ac:1: -1- m4_pattern_allow([^prefix$])
m4trace:configure.ac:1: -1- m4_pattern_allow([^program_transform_name$])
m4trace:configure.ac:1: -1- m4_pattern_allow([^bindir$])
m4trace:configure.ac:1: -1- m4_pattern_allow([^sbindir$])
m4trace:configure.ac:1: -1- m4_pattern_allow([^libexecdir$])
m4trace:configure.ac:1: -1- m4_pattern_allow([^datarootdir$])
m4trace:configure.ac:1: -1- m4_pattern_allow([^datadir$])
m4trace:configure.ac:1: -1- m4_pattern_allow([^sysconfdir$])
m4trace:configure.ac:1: -1- m4_pattern_allow([^sharedstatedir$])
m4trace:configure.ac:1: -1- m4_pattern_allow([^localstatedir$])
m4trace:configure.ac:1: -1- m4_pattern_allow([^runstatedir$])
m4trace:configure.ac:1: -1- m4_pattern_allow([^includedir$])
m4trace:configure.ac:1: -1- m4_pattern_allow([^oldincludedir$])
m4trace:configure.ac:1: -1- m4_pattern_allow([^docdir$])
m4trace:configure.ac:1: -1- m4_pattern_allow([^infodir$])
m4trace:configure.ac:1: -1- m4_pattern_allow([^htmldir$])
m4trace:configure.ac:1: -1- m4_pattern_allow([^dvidir$])
m4trace:configure.ac:1: -1- m4_pattern_allow([^pdfdir$])
m4trace:configure.ac:1: -1- m4_pattern_allow([^psdir$])
m4trace:configure.ac:1: -1- m4_pattern_allow([^libdir$])
m4trace:configure.ac:1: -1- m4_pattern_allow([^localedir$])
m4trace:configure.ac:1: -1- m4_pattern_allow([^mandir$])
m4trace:configure.ac:1: -1- m4_pattern_allow([^PACKAGE_NAME$])
m4trace:configure.ac:1: -1- m4_pattern_allow([^PACKAGE_TARNAME$])
m4trace:configure.ac:1: -1- m4_pattern_allow([^PACKAGE_VERSION$])
m4trace:configure.ac:1: -1- m4_pattern_allow([^PACKAGE_STRING$])
m4trace:configure.ac:1: -1- m4_pattern_allow([^PACKAGE_BUGREPORT$])
m4trace:configure.ac:1: -1- m4_pattern_allow([^PACKAGE_URL$])
m4trace:configure.ac:1: -1- m4_pattern_allow([^DEFS$])
m4trace:configure.ac:1: -1- m4_pattern_allow([^ECHO_C$])
m4trace:configure.ac:1: -1- m4_pattern_allow([^ECHO_N$])
m4trace:configure.ac:1: -1- m4_pattern_allow([^ECHO_T$])
m4trace:configure.ac:1: -1- m4_pattern_allow([^LIBS$])
m4trace:configure.ac:1: -1- m4_pattern_allow([^build_alias$])
m4trace:configure.ac:1: -1- m4_pattern_allow([^host_alias$])
m4trace:configure.ac:1: -1- m4_pattern_allow([^target_alias$])
m4trace:configure.ac:2: -1- AM_INIT_AUTOMAKE([nostdinc])
m4trace:configure.ac:2: -1- m4_pattern_allow([^AM_[A-Z]+FLAGS$])
m4trace:configure.ac:2: -1- AM_SET_CURRENT_AUTOMAKE_VERSION
m4trace:configure.ac:2: -1- AM_AUTOMAKE_VERSION([1.16.1])
m4trace:configure.ac:2: -1- _AM_AUTOCONF_VERSION([2.69])
m4trace:configure.ac:2: -1- m4_pattern_allow([^INSTALL_PROGRAM$])
m4trace:configure.ac:2: -1- m4_pattern_allow([^INSTALL_SCRIPT$])
m4trace:configure.ac:2: -1- m4_pattern_allow([^INSTALL_DATA$])
m4trace:configure.ac:2: -1- m4_pattern_allow([^am__isrc$])
m4trace:configure.ac:2: -1- _AM_SUBST_NOTMAKE([am__isrc])
m4trace:configure.ac:2: -1- m4_pattern_allow([^CYGPATH_W$])
m4trace:configure.ac:2: -1- _AM_SET_OPTIONS([nostdinc])
m4trace:configure.ac:2: -1- _AM_SET_OPTION([nostdinc])
m4trace:configure.ac:2: -2- _AM_MANGLE_OPTION([nostdinc])
m4trace:configure.ac:2: -1- m4_pattern_allow([^PACKAGE$])
m4trace:configure.ac:2: -1- m4_pattern_allow([^VERSION$])
m4trace:configure.ac:2: -1- _AM_IF_OPTION([no-define], [], [AC_DEFINE_UNQUOTED([PACKAGE], ["$PACKAGE"], [Name of package])
 AC_DEFINE_UNQUOTED([VERSION], ["$VERSION"], [Version number of package])])
m4trace:configure.ac:2: -2- _AM_MANGLE_OPTION([no-define])
m4trace:configure.ac:2: -1- m4_pattern_allow([^PACKAGE$])
m4trace:configure.ac:2: -1- m4_pattern_allow([^VERSION$])
m4trace:configure.ac:2: -1- AM_SANITY_CHECK
m4trace:configure.ac:2: -1- AM_MISSING_PROG([ACLOCAL], [aclocal-${am__api_version}])
m4trace:configure.ac:2: -1- AM_MISSING_HAS_RUN
m4trace:configure.ac:2: -1- AM_AUX_DIR_EXPAND
m4trace:configure.ac:2: -1- m4_pattern_allow([^ACLOCAL$])
m4trace:configure.ac:2: -1- AM_MISSING_PROG([AUTOCONF], [autoconf])
m4trace:configure.ac:2: -1- m4_pattern_allow([^AUTOCONF$])
m4trace:configure.ac:2: -1- AM_MISSING_PROG([AUTOMAKE], [automake-${am__api_version}])
m4trace:configure.ac:2: -1- m4_pattern_allow([^AUTOMAKE$])
m4trace:configure.ac:2: -1- AM_MISSING_PROG([AUTOHEADER], [autoheader])
m4trace:configure.ac:2: -1- m4_pattern_allow([^AUTOHEADER$])
m4trace:configure.ac:2: -1- AM_MISSING_PROG([MAKEINFO], [makeinfo])
m4trace:configure.ac:2: -1- m4_pattern_allow([^MAKEINFO$])
m4trace:configure.ac:2: -1- AM_PROG_INSTALL_SH
m4trace:configure.ac:2: -1- m4_pattern_allow([^install_sh$])
m4trace:configure.ac:2: -1- AM_PROG_INSTALL_STRIP
m4trace:configure.ac:2: -1- m4_pattern_allow([^STRIP$])
m4trace:configure.ac:2: -1- m4_pattern_allow([^INSTALL_STRIP_PROGRAM$])
m4trace:configure.ac:2: -1- m4_pattern_allow([^MKDIR_P$])
m4trace:configure.ac:2: -1- m4_pattern_allow([^mkdir_p$])
m4trace:configure.ac:2: -1- m4_pattern_allow([^AWK$])
m4trace:configure.ac:2: -1- m4_pattern_allow([^SET_MAKE$])
m4trace:configure.ac:2: -1- AM_SET_LEADING_DOT
m4trace:configure.ac:2: -1- m4_pattern_allow([^am__leading_dot$])
m4trace:configure.ac:2: -1- _AM_IF_OPTION([tar-ustar], [_AM_PROG_TAR([ustar])], [_AM_IF_OPTION([tar-pax], [_AM_PROG_TAR([pax])],
			     [_AM_PROG_TAR([v7])])])
m4trace:configure.ac:2: -2- _AM_MANGLE_OPTION([tar-ustar])
m4trace:configure.ac:2: -1- _AM_IF_OPTION([tar-pax], [_AM_PROG_TAR([pax])], [_AM_PROG_TAR([v7])])
m4trace:configure.ac:2: -2- _AM_MANGLE_OPTION([tar-pax])
m4trace:configure.ac:2: -1- _AM_PROG_TAR([v7])
m4trace:configure.ac:2: -1- m4_pattern_allow([^AMTAR$])
m4trace:configure.ac:2: -1- m4_pattern_allow([^am__tar$])
m4trace:configure.ac:2: -1- m4_pattern_allow([^am__untar$])
m4trace:configure.ac:2: -1- _AM_IF_OPTION([no-dependencies], [], [AC_PROVIDE_IFELSE([AC_PROG_CC],
		  [_AM_DEPENDENCIES([CC])],
		  [m4_define([AC_PROG_CC],
			     m4_defn([AC_PROG_CC])[_AM_DEPENDENCIES([CC])])])dnl
AC_PROVIDE_IFELSE([AC_PROG_CXX],
		  [_AM_DEPENDENCIES([CXX])],
		  [m4_define([AC_PROG_CXX],
			     m4_defn([AC_PROG_CXX])[_AM_DEPENDENCIES([CXX])])])dnl
AC_PROVIDE_IFELSE([AC_PROG_OBJC],
		  [_AM_DEPENDENCIES([OBJC])],
		  [m4_define([AC_PROG_OBJC],
			     m4_defn([AC_PROG_OBJC])[_AM_DEPENDENCIES([OBJC])])])dnl
AC_PROVIDE_IFELSE([AC_PROG_OBJCXX],
		  [_AM_DEPENDENCIES([OBJCXX])],
		  [m4_define([AC_PROG_OBJCXX],
			     m4_defn([AC_PROG_OBJCXX])[_AM_DEPENDENCIES([OBJCXX])])])dnl
])
m4trace:configure.ac:2: -2- _AM_MANGLE_OPTION([no-dependencies])
m4trace:configure.ac:2: -1- AM_SILENT_RULES
m4trace:configure.ac:2: -1- m4_pattern_allow([^AM_V$])
m4trace:configure.ac:2: -1- AM_SUBST_NOTMAKE([AM_V])
m4trace:configure.ac:2: -1- _AM_SUBST_NOTMAKE([AM_V])
m4trace:configure.ac:2: -1- m4_pattern_allow([^AM_DEFAULT_V$])
m4trace:configure.ac:2: -1- AM_SUBST_NOTMAKE([AM_DEFAULT_V])
m4trace:configure.ac:2: -1- _AM_SUBST_NOTMAKE([AM_DEFAULT_V])
m4trace:configure.ac:2: -1- m4_pattern_allow([^AM_DEFAULT_VERBOSITY$])
m4trace:configure.ac:2: -1- m4_pattern_allow([^AM_BACKSLASH$])
m4trace:configure.ac:2: -1- _AM_SUBST_NOTMAKE([AM_BACKSLASH])
m4trace:configure.ac:4: -1- AM_SILENT_RULES([yes])
m4trace:configure.ac:4: -1- m4_pattern_allow([^AM_V$])
m4trace:configure.ac:4: -1- AM_SUBST_NOTMAKE([AM_V])
m4trace:configure.ac:4: -1- _AM_SUBST_NOTMAKE([AM_V])
m4trace:configure.ac:4: -1- m4_pattern_allow([^AM_DEFAULT_V$])
m4trace:configure.ac:4: -1- AM_SUBST_NOTMAKE([AM_DEFAULT_V])
m4trace:configure.ac:4: -1- _AM_SUBST_NOTMAKE([AM_DEFAULT_V])
m4trace:configure.ac:4: -1- m4_pattern_allow([^AM_DEFAULT_VERBOSITY$])
m4trace:configure.ac:4: -1- m4_pattern_allow([^AM_BACKSLASH$])
m4trace:configure.ac:4: -1- _AM_SUBST_NOTMAKE([AM_BACKSLASH])
m4trace:configure.ac:6: -1- TUXBOX_APPS
m4trace:configure.ac:6: -1- AM_CONFIG_HEADER([config.h])
m4trace:configure.ac:6: -1- _m4_warn([obsolete], ['AM_CONFIG_HEADER': this macro is obsolete.
You should use the 'AC_CONFIG_HEADERS' macro instead.], [/usr/share/aclocal-1.16/obsolete.m4:11: AM_CONFIG_HEADER is expanded from...
acinclude.m4:1: TUXBOX_APPS is expanded from...
configure.ac:6: the top level])
m4trace:configure.ac:6: -1- AM_MAINTAINER_MODE
m4trace:configure.ac:6: -1- AM_CONDITIONAL([MAINTAINER_MODE], [test $USE_MAINTAINER_MODE = yes])
m4trace:configure.ac:6: -1- m4_pattern_allow([^MAINTAINER_MODE_TRUE$])
m4trace:configure.ac:6: -1- m4_pattern_allow([^MAINTAINER_MODE_FALSE$])
m4trace:configure.ac:6: -1- _AM_SUBST_NOTMAKE([MAINTAINER_MODE_TRUE])
m4trace:configure.ac:6: -1- _AM_SUBST_NOTMAKE([MAINTAINER_MODE_FALSE])
m4trace:configure.ac:6: -1- m4_pattern_allow([^MAINT$])
m4trace:configure.ac:6: -1- AC_GNU_SOURCE
m4trace:configure.ac:6: -1- m4_pattern_allow([^_GNU_SOURCE$])
m4trace:configure.ac:6: -1- m4_pattern_allow([^CC$])
m4trace:configure.ac:6: -1- m4_pattern_allow([^CFLAGS$])
m4trace:configure.ac:6: -1- m4_pattern_allow([^LDFLAGS$])
m4trace:configure.ac:6: -1- m4_pattern_allow([^LIBS$])
m4trace:configure.ac:6: -1- m4_pattern_allow([^CPPFLAGS$])
m4trace:configure.ac:6: -1- m4_pattern_allow([^CC$])
m4trace:configure.ac:6: -1- m4_pattern_allow([^CC$])
m4trace:configure.ac:6: -1- m4_pattern_allow([^CC$])
m4trace:configure.ac:6: -1- m4_pattern_allow([^CC$])
m4trace:configure.ac:6: -1- m4_pattern_allow([^ac_ct_CC$])
m4trace:configure.ac:6: -1- m4_pattern_allow([^EXEEXT$])
m4trace:configure.ac:6: -1- m4_pattern_allow([^OBJEXT$])
m4trace:configure.ac:6: -1- _AM_PROG_CC_C_O
m4trace:configure.ac:6: -1- AM_RUN_LOG([$CC -c conftest.$ac_ext -o conftest2.$ac_objext])
m4trace:configure.ac:6: -1- _AM_DEPENDENCIES([CC])
m4trace:configure.ac:6: -1- AM_SET_DEPDIR
m4trace:configure.ac:6: -1- m4_pattern_allow([^DEPDIR$])
m4trace:configure.ac:6: -1- AM_OUTPUT_DEPENDENCY_COMMANDS
m4trace:configure.ac:6: -1- AM_MAKE_INCLUDE
m4trace:configure.ac:6: -1- AM_RUN_LOG([${MAKE-make} -f confmf.$s && cat confinc.out])
m4trace:configure.ac:6: -1- m4_pattern_allow([^am__include$])
m4trace:configure.ac:6: -1- AM_DEP_TRACK
m4trace:configure.ac:6: -1- AM_CONDITIONAL([AMDEP], [test "x$enable_dependency_tracking" != xno])
m4trace:configure.ac:6: -1- m4_pattern_allow([^AMDEP_TRUE$])
m4trace:configure.ac:6: -1- m4_pattern_allow([^AMDEP_FALSE$])
m4trace:configure.ac:6: -1- _AM_SUBST_NOTMAKE([AMDEP_TRUE])
m4trace:configure.ac:6: -1- _AM_SUBST_NOTMAKE([AMDEP_FALSE])
m4trace:configure.ac:6: -1- m4_pattern_allow([^AMDEPBACKSLASH$])
m4trace:configure.ac:6: -1- _AM_SUBST_NOTMAKE([AMDEPBACKSLASH])
m4trace:configure.ac:6: -1- m4_pattern_allow([^am__nodep$])
m4trace:configure.ac:6: -1- _AM_SUBST_NOTMAKE([am__nodep])
m4trace:configure.ac:6: -1- m4_pattern_allow([^CCDEPMODE$])
m4trace:configure.ac:6: -1- AM_CONDITIONAL([am__fastdepCC], [
  test "x$enable_dependency_tracking" != xno \
  && test "$am_cv_CC_dependencies_compiler_type" = gcc3])
m4trace:configure.ac:6: -1- m4_pattern_allow([^am__fastdepCC_TRUE$])
m4trace:configure.ac:6: -1- m4_pattern_allow([^am__fastdepCC_FALSE$])
m4trace:configure.ac:6: -1- _AM_SUBST_NOTMAKE([am__fastdepCC_TRUE])
m4trace:configure.ac:6: -1- _AM_SUBST_NOTMAKE([am__fastdepCC_FALSE])
m4trace:configure.ac:6: -1- m4_pattern_allow([^_FILE_OFFSET_BITS$])
m4trace:configure.ac:6: -1- m4_pattern_allow([^_LARGE_FILES$])
m4trace:configure.ac:6: -1- m4_pattern_allow([^DEBUG$])
m4trace:configure.ac:6: -1- m4_pattern_allow([^build$])
m4trace:configure.ac:6: -1- m4_pattern_allow([^build_cpu$])
m4trace:configure.ac:6: -1- m4_pattern_allow([^build_vendor$])
m4trace:configure.ac:6: -1- m4_pattern_allow([^build_os$])
m4trace:configure.ac:6: -1- m4_pattern_allow([^host$])
m4trace:configure.ac:6: -1- m4_pattern_allow([^host_cpu$])
m4trace:configure.ac:6: -1- m4_pattern_allow([^host_vendor$])
m4trace:configure.ac:6: -1- m4_pattern_allow([^host_os$])
m4trace:configure.ac:7: -1- TUXBOX_APPS_DIRECTORY
m4trace:configure.ac:7: -1- TUXBOX_APPS_DIRECTORY_ONE([configdir], [CONFIGDIR], [localstatedir], [/var], [/tuxbox/config], [--with-configdir=PATH   ], [where to find the config files])
m4trace:configure.ac:7: -1- m4_pattern_allow([^CONFIGDIR$])
m4trace:configure.ac:7: -1- m4_pattern_allow([^TARGET_CONFIGDIR$])
m4trace:configure.ac:7: -1- TUXBOX_APPS_DIRECTORY_ONE([datadir], [DATADIR], [datadir], [/share], [/tuxbox], [--with-datadir=PATH     ], [where to find data])
m4trace:configure.ac:7: -1- m4_pattern_allow([^DATADIR$])
m4trace:configure.ac:7: -1- m4_pattern_allow([^TARGET_DATADIR$])
m4trace:configure.ac:7: -1- TUXBOX_APPS_DIRECTORY_ONE([plugindir], [PLUGINDIR], [localstatedir], [/var], [/tuxbox/plugins], [--with-plugindir=PATH   ], [where to find the plugins])
m4trace:configure.ac:7: -1- m4_pattern_allow([^PLUGINDIR$])
m4trace:configure.ac:7: -1- m4_pattern_allow([^TARGET_PLUGINDIR$])
m4trace:configure.ac:7: -1- TUXBOX_APPS_DIRECTORY_ONE([localedir], [LOCALEDIR], [localstatedir], [/var], [/tuxbox/locale], [--with-localedir=PATH   ], [where to find locales])
m4trace:configure.ac:7: -1- m4_pattern_allow([^LOCALEDIR$])
m4trace:configure.ac:7: -1- m4_pattern_allow([^TARGET_LOCALEDIR$])
m4trace:configure.ac:8: -1- TUXBOX_APPS_DVB
m4trace:configure.ac:8: -1- m4_pattern_allow([^CPP$])
m4trace:configure.ac:8: -1- m4_pattern_allow([^CPPFLAGS$])
m4trace:configure.ac:8: -1- m4_pattern_allow([^CPP$])
m4trace:configure.ac:8: -1- AC_PROG_EGREP
m4trace:configure.ac:8: -1- m4_pattern_allow([^EGREP$])
m4trace:configure.ac:8: -1- m4_pattern_allow([^STDC_HEADERS$])
m4trace:configure.ac:8: -1- m4_pattern_allow([^HAVE_OST_DMX_H$])
m4trace:configure.ac:8: -1- m4_pattern_allow([^HAVE_LINUX_DVB_VERSION_H$])
m4trace:configure.ac:8: -1- m4_pattern_allow([^HAVE_DVB$])
m4trace:configure.ac:8: -1- m4_pattern_allow([^HAVE_DVB_API_VERSION$])
m4trace:configure.ac:9: -1- TUXBOX_BOXTYPE
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXTYPE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL$])
m4trace:configure.ac:9: -1- AM_CONDITIONAL([BOXTYPE_GENERIC], [test "$BOXTYPE" = "generic"])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXTYPE_GENERIC_TRUE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXTYPE_GENERIC_FALSE$])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXTYPE_GENERIC_TRUE])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXTYPE_GENERIC_FALSE])
m4trace:configure.ac:9: -1- AM_CONDITIONAL([BOXTYPE_DGS], [test "$BOXTYPE" = "dgs"])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXTYPE_DGS_TRUE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXTYPE_DGS_FALSE$])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXTYPE_DGS_TRUE])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXTYPE_DGS_FALSE])
m4trace:configure.ac:9: -1- AM_CONDITIONAL([BOXTYPE_GIGABLUE], [test "$BOXTYPE" = "gigablue"])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXTYPE_GIGABLUE_TRUE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXTYPE_GIGABLUE_FALSE$])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXTYPE_GIGABLUE_TRUE])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXTYPE_GIGABLUE_FALSE])
m4trace:configure.ac:9: -1- AM_CONDITIONAL([BOXTYPE_DREAMBOX], [test "$BOXTYPE" = "dreambox"])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXTYPE_DREAMBOX_TRUE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXTYPE_DREAMBOX_FALSE$])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXTYPE_DREAMBOX_TRUE])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXTYPE_DREAMBOX_FALSE])
m4trace:configure.ac:9: -1- AM_CONDITIONAL([BOXTYPE_XTREND], [test "$BOXTYPE" = "xtrend"])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXTYPE_XTREND_TRUE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXTYPE_XTREND_FALSE$])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXTYPE_XTREND_TRUE])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXTYPE_XTREND_FALSE])
m4trace:configure.ac:9: -1- AM_CONDITIONAL([BOXTYPE_FULAN], [test "$BOXTYPE" = "fulan"])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXTYPE_FULAN_TRUE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXTYPE_FULAN_FALSE$])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXTYPE_FULAN_TRUE])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXTYPE_FULAN_FALSE])
m4trace:configure.ac:9: -1- AM_CONDITIONAL([BOXTYPE_KATHREIN], [test "$BOXTYPE" = "kathrein"])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXTYPE_KATHREIN_TRUE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXTYPE_KATHREIN_FALSE$])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXTYPE_KATHREIN_TRUE])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXTYPE_KATHREIN_FALSE])
m4trace:configure.ac:9: -1- AM_CONDITIONAL([BOXTYPE_IPBOX], [test "$BOXTYPE" = "ipbox"])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXTYPE_IPBOX_TRUE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXTYPE_IPBOX_FALSE$])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXTYPE_IPBOX_TRUE])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXTYPE_IPBOX_FALSE])
m4trace:configure.ac:9: -1- AM_CONDITIONAL([BOXTYPE_HL101], [test "$BOXTYPE" = "hl101"])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXTYPE_HL101_TRUE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXTYPE_HL101_FALSE$])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXTYPE_HL101_TRUE])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXTYPE_HL101_FALSE])
m4trace:configure.ac:9: -1- AM_CONDITIONAL([BOXTYPE_TOPFIELD], [test "$BOXTYPE" = "toptfield"])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXTYPE_TOPFIELD_TRUE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXTYPE_TOPFIELD_FALSE$])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXTYPE_TOPFIELD_TRUE])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXTYPE_TOPFIELD_FALSE])
m4trace:configure.ac:9: -1- AM_CONDITIONAL([BOXTYPE_FORTIS_HDBOX], [test "$BOXTYPE" = "fortis_hdbox"])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXTYPE_FORTIS_HDBOX_TRUE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXTYPE_FORTIS_HDBOX_FALSE$])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXTYPE_FORTIS_HDBOX_TRUE])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXTYPE_FORTIS_HDBOX_FALSE])
m4trace:configure.ac:9: -1- AM_CONDITIONAL([BOXTYPE_OCTAGON], [test "$BOXTYPE" = "octagon"])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXTYPE_OCTAGON_TRUE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXTYPE_OCTAGON_FALSE$])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXTYPE_OCTAGON_TRUE])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXTYPE_OCTAGON_FALSE])
m4trace:configure.ac:9: -1- AM_CONDITIONAL([BOXTYPE_ATEVIO], [test "$BOXTYPE" = "atevio"])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXTYPE_ATEVIO_TRUE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXTYPE_ATEVIO_FALSE$])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXTYPE_ATEVIO_TRUE])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXTYPE_ATEVIO_FALSE])
m4trace:configure.ac:9: -1- AM_CONDITIONAL([BOXTYPE_ADB_BOX], [test "$BOXTYPE" = "adb_box"])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXTYPE_ADB_BOX_TRUE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXTYPE_ADB_BOX_FALSE$])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXTYPE_ADB_BOX_TRUE])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXTYPE_ADB_BOX_FALSE])
m4trace:configure.ac:9: -1- AM_CONDITIONAL([BOXTYPE_WHITEBOX], [test "$BOXTYPE" = "whitebox"])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXTYPE_WHITEBOX_TRUE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXTYPE_WHITEBOX_FALSE$])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXTYPE_WHITEBOX_TRUE])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXTYPE_WHITEBOX_FALSE])
m4trace:configure.ac:9: -1- AM_CONDITIONAL([BOXTYPE_VIP], [test "$BOXTYPE" = "vip"])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXTYPE_VIP_TRUE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXTYPE_VIP_FALSE$])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXTYPE_VIP_TRUE])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXTYPE_VIP_FALSE])
m4trace:configure.ac:9: -1- AM_CONDITIONAL([BOXTYPE_HOMECAST], [test "$BOXTYPE" = "homecast"])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXTYPE_HOMECAST_TRUE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXTYPE_HOMECAST_FALSE$])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXTYPE_HOMECAST_TRUE])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXTYPE_HOMECAST_FALSE])
m4trace:configure.ac:9: -1- AM_CONDITIONAL([BOXTYPE_VUPLUS], [test "$BOXTYPE" = "vuplus"])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXTYPE_VUPLUS_TRUE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXTYPE_VUPLUS_FALSE$])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXTYPE_VUPLUS_TRUE])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXTYPE_VUPLUS_FALSE])
m4trace:configure.ac:9: -1- AM_CONDITIONAL([BOXTYPE_AZBOX], [test "$BOXTYPE" = "azbox"])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXTYPE_AZBOX_TRUE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXTYPE_AZBOX_FALSE$])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXTYPE_AZBOX_TRUE])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXTYPE_AZBOX_FALSE])
m4trace:configure.ac:9: -1- AM_CONDITIONAL([BOXTYPE_TECHNOMATE], [test "$BOXTYPE" = "technomate"])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXTYPE_TECHNOMATE_TRUE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXTYPE_TECHNOMATE_FALSE$])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXTYPE_TECHNOMATE_TRUE])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXTYPE_TECHNOMATE_FALSE])
m4trace:configure.ac:9: -1- AM_CONDITIONAL([BOXTYPE_IPBOX], [test "$BOXTYPE" = "ipbox"])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXTYPE_IPBOX_TRUE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXTYPE_IPBOX_FALSE$])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXTYPE_IPBOX_TRUE])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXTYPE_IPBOX_FALSE])
m4trace:configure.ac:9: -1- AM_CONDITIONAL([BOXTYPE_KATHREIN], [test "$BOXTYPE" = "kathrein"])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXTYPE_KATHREIN_TRUE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXTYPE_KATHREIN_FALSE$])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXTYPE_KATHREIN_TRUE])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXTYPE_KATHREIN_FALSE])
m4trace:configure.ac:9: -1- AM_CONDITIONAL([BOXTYPE_COOLSTREAM], [test "$BOXTYPE" = "coolstream"])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXTYPE_COOLSTREAM_TRUE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXTYPE_COOLSTREAM_FALSE$])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXTYPE_COOLSTREAM_TRUE])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXTYPE_COOLSTREAM_FALSE])
m4trace:configure.ac:9: -1- AM_CONDITIONAL([BOXTYPE_HYPERCUBE], [test "$BOXTYPE" = "hypercube"])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXTYPE_HYPERCUBE_TRUE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXTYPE_HYPERCUBE_FALSE$])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXTYPE_HYPERCUBE_TRUE])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXTYPE_HYPERCUBE_FALSE])
m4trace:configure.ac:9: -1- AM_CONDITIONAL([BOXTYPE_VENTON], [test "$BOXTYPE" = "venton"])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXTYPE_VENTON_TRUE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXTYPE_VENTON_FALSE$])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXTYPE_VENTON_TRUE])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXTYPE_VENTON_FALSE])
m4trace:configure.ac:9: -1- AM_CONDITIONAL([BOXTYPE_IXUSS], [test "$BOXTYPE" = "ixuss"])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXTYPE_IXUSS_TRUE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXTYPE_IXUSS_FALSE$])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXTYPE_IXUSS_TRUE])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXTYPE_IXUSS_FALSE])
m4trace:configure.ac:9: -1- AM_CONDITIONAL([BOXTYPE_IQONIOS], [test "$BOXTYPE" = "iqonios"])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXTYPE_IQONIOS_TRUE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXTYPE_IQONIOS_FALSE$])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXTYPE_IQONIOS_TRUE])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXTYPE_IQONIOS_FALSE])
m4trace:configure.ac:9: -1- AM_CONDITIONAL([BOXTYPE_ODIN], [test "$BOXTYPE" = "odin"])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXTYPE_ODIN_TRUE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXTYPE_ODIN_FALSE$])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXTYPE_ODIN_TRUE])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXTYPE_ODIN_FALSE])
m4trace:configure.ac:9: -1- AM_CONDITIONAL([BOXTYPE_XP1000], [test "$BOXTYPE" = "xp1000"])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXTYPE_XP1000_TRUE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXTYPE_XP1000_FALSE$])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXTYPE_XP1000_TRUE])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXTYPE_XP1000_FALSE])
m4trace:configure.ac:9: -1- AM_CONDITIONAL([BOXTYPE_E3HD], [test "$BOXTYPE" = "e3hd"])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXTYPE_E3HD_TRUE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXTYPE_E3HD_FALSE$])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXTYPE_E3HD_TRUE])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXTYPE_E3HD_FALSE])
m4trace:configure.ac:9: -1- AM_CONDITIONAL([BOXTYPE_EBOX5000], [test "$BOXTYPE" = "ebox5000"])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXTYPE_EBOX5000_TRUE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXTYPE_EBOX5000_FALSE$])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXTYPE_EBOX5000_TRUE])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXTYPE_EBOX5000_FALSE])
m4trace:configure.ac:9: -1- AM_CONDITIONAL([BOXTYPE_WETEK], [test "$BOXTYPE" = "wetek"])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXTYPE_WETEK_TRUE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXTYPE_WETEK_FALSE$])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXTYPE_WETEK_TRUE])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXTYPE_WETEK_FALSE])
m4trace:configure.ac:9: -1- AM_CONDITIONAL([BOXTYPE_EDISION], [test "$BOXTYPE" = "edision"])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXTYPE_EDISION_TRUE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXTYPE_EDISION_FALSE$])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXTYPE_EDISION_TRUE])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXTYPE_EDISION_FALSE])
m4trace:configure.ac:9: -1- AM_CONDITIONAL([BOXTYPE_HD], [test "$BOXTYPE" = "hd"])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXTYPE_HD_TRUE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXTYPE_HD_FALSE$])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXTYPE_HD_TRUE])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXTYPE_HD_FALSE])
m4trace:configure.ac:9: -1- AM_CONDITIONAL([BOXTYPE_GI], [test "$BOXTYPE" = "gi"])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXTYPE_GI_TRUE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXTYPE_GI_FALSE$])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXTYPE_GI_TRUE])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXTYPE_GI_FALSE])
m4trace:configure.ac:9: -1- AM_CONDITIONAL([BOXTYPE_XPEEDC], [test "$BOXTYPE" = "xpeedc"])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXTYPE_XPEEDC_TRUE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXTYPE_XPEEDC_FALSE$])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXTYPE_XPEEDC_TRUE])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXTYPE_XPEEDC_FALSE])
m4trace:configure.ac:9: -1- AM_CONDITIONAL([BOXTYPE_FORMULER], [test "$BOXTYPE" = "formuler"])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXTYPE_FORMULER_TRUE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXTYPE_FORMULER_FALSE$])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXTYPE_FORMULER_TRUE])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXTYPE_FORMULER_FALSE])
m4trace:configure.ac:9: -1- AM_CONDITIONAL([BOXTYPE_MIRACLEBOX], [test "$BOXTYPE" = "miraclebox"])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXTYPE_MIRACLEBOX_TRUE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXTYPE_MIRACLEBOX_FALSE$])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXTYPE_MIRACLEBOX_TRUE])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXTYPE_MIRACLEBOX_FALSE])
m4trace:configure.ac:9: -1- AM_CONDITIONAL([BOXTYPE_SPYCAT], [test "$BOXTYPE" = "spycat"])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXTYPE_SPYCAT_TRUE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXTYPE_SPYCAT_FALSE$])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXTYPE_SPYCAT_TRUE])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXTYPE_SPYCAT_FALSE])
m4trace:configure.ac:9: -1- AM_CONDITIONAL([BOXTYPE_XSARIUS], [test "$BOXTYPE" = "xsarius"])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXTYPE_XSARIUS_TRUE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXTYPE_XSARIUS_FALSE$])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXTYPE_XSARIUS_TRUE])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXTYPE_XSARIUS_FALSE])
m4trace:configure.ac:9: -1- AM_CONDITIONAL([BOXTYPE_ZGEMMA], [test "$BOXTYPE" = "zgemma"])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXTYPE_ZGEMMA_TRUE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXTYPE_ZGEMMA_FALSE$])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXTYPE_ZGEMMA_TRUE])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXTYPE_ZGEMMA_FALSE])
m4trace:configure.ac:9: -1- AM_CONDITIONAL([BOXTYPE_WWIO], [test "$BOXTYPE" = "wwio"])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXTYPE_WWIO_TRUE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXTYPE_WWIO_FALSE$])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXTYPE_WWIO_TRUE])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXTYPE_WWIO_FALSE])
m4trace:configure.ac:9: -1- AM_CONDITIONAL([BOXMODEL_CUBEREVO], [test "$BOXMODEL" = "cuberevo"])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_CUBEREVO_TRUE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_CUBEREVO_FALSE$])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_CUBEREVO_TRUE])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_CUBEREVO_FALSE])
m4trace:configure.ac:9: -1- AM_CONDITIONAL([BOXMODEL_CUBEREVO_MINI], [test "$BOXMODEL" = "cuberevo_mini"])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_CUBEREVO_MINI_TRUE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_CUBEREVO_MINI_FALSE$])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_CUBEREVO_MINI_TRUE])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_CUBEREVO_MINI_FALSE])
m4trace:configure.ac:9: -1- AM_CONDITIONAL([BOXMODEL_CUBEREVO_MINI2], [test "$BOXMODEL" = "cuberevo_mini2"])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_CUBEREVO_MINI2_TRUE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_CUBEREVO_MINI2_FALSE$])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_CUBEREVO_MINI2_TRUE])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_CUBEREVO_MINI2_FALSE])
m4trace:configure.ac:9: -1- AM_CONDITIONAL([BOXMODEL_CUBEREVO_MINI_FTA], [test "$BOXMODEL" = "cuberevo_mini_fta"])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_CUBEREVO_MINI_FTA_TRUE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_CUBEREVO_MINI_FTA_FALSE$])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_CUBEREVO_MINI_FTA_TRUE])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_CUBEREVO_MINI_FTA_FALSE])
m4trace:configure.ac:9: -1- AM_CONDITIONAL([BOXMODEL_CUBEREVO_250HD], [test "$BOXMODEL" = "cuberevo_250hd"])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_CUBEREVO_250HD_TRUE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_CUBEREVO_250HD_FALSE$])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_CUBEREVO_250HD_TRUE])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_CUBEREVO_250HD_FALSE])
m4trace:configure.ac:9: -1- AM_CONDITIONAL([BOXMODEL_CUBEREVO_2000HD], [test "$BOXMODEL" = "cuberevo_2000hd"])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_CUBEREVO_2000HD_TRUE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_CUBEREVO_2000HD_FALSE$])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_CUBEREVO_2000HD_TRUE])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_CUBEREVO_2000HD_FALSE])
m4trace:configure.ac:9: -1- AM_CONDITIONAL([BOXMODEL_CUBEREVO_9500HD], [test "$BOXMODEL" = "cuberevo_9500HD"])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_CUBEREVO_9500HD_TRUE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_CUBEREVO_9500HD_FALSE$])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_CUBEREVO_9500HD_TRUE])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_CUBEREVO_9500HD_FALSE])
m4trace:configure.ac:9: -1- AM_CONDITIONAL([BOXMODEL_TOPFIELD_TF7700], [test "$BOXMODEL" = "tf7700"])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_TOPFIELD_TF7700_TRUE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_TOPFIELD_TF7700_FALSE$])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_TOPFIELD_TF7700_TRUE])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_TOPFIELD_TF7700_FALSE])
m4trace:configure.ac:9: -1- AM_CONDITIONAL([BOXMODEL_GB800SOLO], [test "$BOXMODEL" = "gb800solo"])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_GB800SOLO_TRUE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_GB800SOLO_FALSE$])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_GB800SOLO_TRUE])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_GB800SOLO_FALSE])
m4trace:configure.ac:9: -1- AM_CONDITIONAL([BOXMODEL_GB800SE], [test "$BOXMODEL" = "gb800se"])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_GB800SE_TRUE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_GB800SE_FALSE$])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_GB800SE_TRUE])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_GB800SE_FALSE])
m4trace:configure.ac:9: -1- AM_CONDITIONAL([BOXMODEL_GB800UE], [test "$BOXMODEL" = "gb800ue"])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_GB800UE_TRUE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_GB800UE_FALSE$])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_GB800UE_TRUE])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_GB800UE_FALSE])
m4trace:configure.ac:9: -1- AM_CONDITIONAL([BOXMODEL_GB800SEPLUS], [test "$BOXMODEL" = "gb800seplus"])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_GB800SEPLUS_TRUE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_GB800SEPLUS_FALSE$])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_GB800SEPLUS_TRUE])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_GB800SEPLUS_FALSE])
m4trace:configure.ac:9: -1- AM_CONDITIONAL([BOXMODEL_GB800UEPLUS], [test "$BOXMODEL" = "gb800ueplus"])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_GB800UEPLUS_TRUE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_GB800UEPLUS_FALSE$])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_GB800UEPLUS_TRUE])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_GB800UEPLUS_FALSE])
m4trace:configure.ac:9: -1- AM_CONDITIONAL([BOXMODEL_GBQUAD], [test "$BOXMODEL" = "gbquad"])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_GBQUAD_TRUE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_GBQUAD_FALSE$])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_GBQUAD_TRUE])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_GBQUAD_FALSE])
m4trace:configure.ac:9: -1- AM_CONDITIONAL([BOXMODEL_DM500], [test "$BOXMODEL" = "dm500"])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_DM500_TRUE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_DM500_FALSE$])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_DM500_TRUE])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_DM500_FALSE])
m4trace:configure.ac:9: -1- AM_CONDITIONAL([BOXMODEL_DM500PLUS], [test "$BOXMODEL" = "dm500plus"])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_DM500PLUS_TRUE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_DM500PLUS_FALSE$])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_DM500PLUS_TRUE])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_DM500PLUS_FALSE])
m4trace:configure.ac:9: -1- AM_CONDITIONAL([BOXMODEL_DM600PVR], [test "$BOXMODEL" = "dm600pvr"])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_DM600PVR_TRUE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_DM600PVR_FALSE$])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_DM600PVR_TRUE])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_DM600PVR_FALSE])
m4trace:configure.ac:9: -1- AM_CONDITIONAL([BOXMODEL_DM56x0], [test "$BOXMODEL" = "dm56x0"])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_DM56x0_TRUE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_DM56x0_FALSE$])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_DM56x0_TRUE])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_DM56x0_FALSE])
m4trace:configure.ac:9: -1- AM_CONDITIONAL([BOXMODEL_DM7000], [test "$BOXMODEL" = "dm7000" -o "$BOXMODEL" = "dm7020" -o "$BOXMODEL" = "dm7025"])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_DM7000_TRUE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_DM7000_FALSE$])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_DM7000_TRUE])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_DM7000_FALSE])
m4trace:configure.ac:9: -1- AM_CONDITIONAL([BOXMODEL_DM500HD], [test "$BOXMODEL" = "dm500hd"])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_DM500HD_TRUE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_DM500HD_FALSE$])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_DM500HD_TRUE])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_DM500HD_FALSE])
m4trace:configure.ac:9: -1- AM_CONDITIONAL([BOXMODEL_DM800HD], [test "$BOXMODEL" = "dm800"])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_DM800HD_TRUE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_DM800HD_FALSE$])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_DM800HD_TRUE])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_DM800HD_FALSE])
m4trace:configure.ac:9: -1- AM_CONDITIONAL([BOXMODEL_DM800SE], [test "$BOXMODEL" = "dm800se"])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_DM800SE_TRUE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_DM800SE_FALSE$])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_DM800SE_TRUE])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_DM800SE_FALSE])
m4trace:configure.ac:9: -1- AM_CONDITIONAL([BOXMODEL_DM7000HD], [test "$BOXMODEL" = "dm7020hd"])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_DM7000HD_TRUE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_DM7000HD_FALSE$])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_DM7000HD_TRUE])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_DM7000HD_FALSE])
m4trace:configure.ac:9: -1- AM_CONDITIONAL([BOXMODEL_DM8000HD], [test "$BOXMODEL" = "dm8000"])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_DM8000HD_TRUE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_DM8000HD_FALSE$])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_DM8000HD_TRUE])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_DM8000HD_FALSE])
m4trace:configure.ac:9: -1- AM_CONDITIONAL([BOXMODEL_DM520], [test "$BOXMODEL" = "dm520"])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_DM520_TRUE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_DM520_FALSE$])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_DM520_TRUE])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_DM520_FALSE])
m4trace:configure.ac:9: -1- AM_CONDITIONAL([BOXMODEL_ET4X00], [test "$BOXMODEL" = "et4x00"])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_ET4X00_TRUE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_ET4X00_FALSE$])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_ET4X00_TRUE])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_ET4X00_FALSE])
m4trace:configure.ac:9: -1- AM_CONDITIONAL([BOXMODEL_ET5X00], [test "$BOXMODEL" = "et5x00"])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_ET5X00_TRUE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_ET5X00_FALSE$])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_ET5X00_TRUE])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_ET5X00_FALSE])
m4trace:configure.ac:9: -1- AM_CONDITIONAL([BOXMODEL_ET6X00], [test "$BOXMODEL" = "et6x00"])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_ET6X00_TRUE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_ET6X00_FALSE$])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_ET6X00_TRUE])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_ET6X00_FALSE])
m4trace:configure.ac:9: -1- AM_CONDITIONAL([BOXMODEL_ET7X00], [test "$BOXMODEL" = "et7x00"])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_ET7X00_TRUE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_ET7X00_FALSE$])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_ET7X00_TRUE])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_ET7X00_FALSE])
m4trace:configure.ac:9: -1- AM_CONDITIONAL([BOXMODEL_ET8000], [test "$BOXMODEL" = "et8000"])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_ET8000_TRUE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_ET8000_FALSE$])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_ET8000_TRUE])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_ET8000_FALSE])
m4trace:configure.ac:9: -1- AM_CONDITIONAL([BOXMODEL_ET8500], [test "$BOXMODEL" = "et8500"])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_ET8500_TRUE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_ET8500_FALSE$])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_ET8500_TRUE])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_ET8500_FALSE])
m4trace:configure.ac:9: -1- AM_CONDITIONAL([BOXMODEL_ET9X00], [test "$BOXMODEL" = "et9x00"])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_ET9X00_TRUE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_ET9X00_FALSE$])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_ET9X00_TRUE])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_ET9X00_FALSE])
m4trace:configure.ac:9: -1- AM_CONDITIONAL([BOXMODEL_ET10000], [test "$BOXMODEL" = "et10000"])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_ET10000_TRUE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_ET10000_FALSE$])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_ET10000_TRUE])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_ET10000_FALSE])
m4trace:configure.ac:9: -1- AM_CONDITIONAL([BOXMODEL_SPARK], [test "$BOXMODEL" = "spark"])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_SPARK_TRUE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_SPARK_FALSE$])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_SPARK_TRUE])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_SPARK_FALSE])
m4trace:configure.ac:9: -1- AM_CONDITIONAL([BOXMODEL_SPARK7162], [test "$BOXMODEL" = "spark7162"])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_SPARK7162_TRUE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_SPARK7162_FALSE$])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_SPARK7162_TRUE])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_SPARK7162_FALSE])
m4trace:configure.ac:9: -1- AM_CONDITIONAL([BOXMODEL_UFS910], [test "$BOXMODEL" = "ufs910"])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_UFS910_TRUE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_UFS910_FALSE$])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_UFS910_TRUE])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_UFS910_FALSE])
m4trace:configure.ac:9: -1- AM_CONDITIONAL([BOXMODEL_UFS912], [test "$BOXMODEL" = "ufs912"])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_UFS912_TRUE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_UFS912_FALSE$])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_UFS912_TRUE])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_UFS912_FALSE])
m4trace:configure.ac:9: -1- AM_CONDITIONAL([BOXMODEL_UFS913], [test "$BOXMODEL" = "ufs913"])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_UFS913_TRUE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_UFS913_FALSE$])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_UFS913_TRUE])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_UFS913_FALSE])
m4trace:configure.ac:9: -1- AM_CONDITIONAL([BOXMODEL_UFS922], [test "$BOXMODEL" = "ufs922"])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_UFS922_TRUE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_UFS922_FALSE$])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_UFS922_TRUE])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_UFS922_FALSE])
m4trace:configure.ac:9: -1- AM_CONDITIONAL([BOXMODEL_UFC960], [test "$BOXMODEL" = "ufc960"])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_UFC960_TRUE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_UFC960_FALSE$])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_UFC960_TRUE])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_UFC960_FALSE])
m4trace:configure.ac:9: -1- AM_CONDITIONAL([BOXMODEL_IPBOX55], [test "$BOXMODEL" = "ipbox55"])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_IPBOX55_TRUE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_IPBOX55_FALSE$])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_IPBOX55_TRUE])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_IPBOX55_FALSE])
m4trace:configure.ac:9: -1- AM_CONDITIONAL([BOXMODEL_IPBOX99], [test "$BOXMODEL" = "ipbox99"])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_IPBOX99_TRUE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_IPBOX99_FALSE$])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_IPBOX99_TRUE])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_IPBOX99_FALSE])
m4trace:configure.ac:9: -1- AM_CONDITIONAL([BOXMODEL_IPBOX9900], [test "$BOXMODEL" = "ipbox9900"])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_IPBOX9900_TRUE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_IPBOX9900_FALSE$])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_IPBOX9900_TRUE])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_IPBOX9900_FALSE])
m4trace:configure.ac:9: -1- AM_CONDITIONAL([BOXMODEL_HL101], [test "$BOXMODEL" = "hl101"])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_HL101_TRUE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_HL101_FALSE$])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_HL101_TRUE])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_HL101_FALSE])
m4trace:configure.ac:9: -1- AM_CONDITIONAL([BOXMODEL_ATEVIO700], [test "$BOXMODEL" = "atevio700"])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_ATEVIO700_TRUE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_ATEVIO700_FALSE$])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_ATEVIO700_TRUE])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_ATEVIO700_FALSE])
m4trace:configure.ac:9: -1- AM_CONDITIONAL([BOXMODEL_ATEVIO7000], [test "$BOXMODEL" = "atevio7000"])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_ATEVIO7000_TRUE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_ATEVIO7000_FALSE$])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_ATEVIO7000_TRUE])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_ATEVIO7000_FALSE])
m4trace:configure.ac:9: -1- AM_CONDITIONAL([BOXMODEL_ATEVIO7500], [test "$BOXMODEL" = "atevio7500"])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_ATEVIO7500_TRUE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_ATEVIO7500_FALSE$])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_ATEVIO7500_TRUE])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_ATEVIO7500_FALSE])
m4trace:configure.ac:9: -1- AM_CONDITIONAL([BOXMODEL_ATEVIO7600], [test "$BOXMODEL" = "atevio7600"])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_ATEVIO7600_TRUE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_ATEVIO7600_FALSE$])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_ATEVIO7600_TRUE])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_ATEVIO7600_FALSE])
m4trace:configure.ac:9: -1- AM_CONDITIONAL([BOXMODEL_OCTAGON_1008], [test "$BOXMODEL" = "octagon1008"])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_OCTAGON_1008_TRUE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_OCTAGON_1008_FALSE$])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_OCTAGON_1008_TRUE])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_OCTAGON_1008_FALSE])
m4trace:configure.ac:9: -1- AM_CONDITIONAL([BOXMODEL_VUSOLO2], [test "$BOXMODEL" = "vusolo2"])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_VUSOLO2_TRUE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_VUSOLO2_FALSE$])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_VUSOLO2_TRUE])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_VUSOLO2_FALSE])
m4trace:configure.ac:9: -1- AM_CONDITIONAL([BOXMODEL_VUDUO2], [test "$BOXMODEL" = "vuduo2"])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_VUDUO2_TRUE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_VUDUO2_FALSE$])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_VUDUO2_TRUE])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_VUDUO2_FALSE])
m4trace:configure.ac:9: -1- AM_CONDITIONAL([BOXMODEL_VUSOLO], [test "$BOXMODEL" = "vusolo"])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_VUSOLO_TRUE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_VUSOLO_FALSE$])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_VUSOLO_TRUE])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_VUSOLO_FALSE])
m4trace:configure.ac:9: -1- AM_CONDITIONAL([BOXMODEL_VUDUO], [test "$BOXMODEL" = "vuduo"])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_VUDUO_TRUE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_VUDUO_FALSE$])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_VUDUO_TRUE])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_VUDUO_FALSE])
m4trace:configure.ac:9: -1- AM_CONDITIONAL([BOXMODEL_VUUNO], [test "$BOXMODEL" = "vuuno"])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_VUUNO_TRUE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_VUUNO_FALSE$])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_VUUNO_TRUE])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_VUUNO_FALSE])
m4trace:configure.ac:9: -1- AM_CONDITIONAL([BOXMODEL_VUULTIMO], [test "$BOXMODEL" = "vuultimo"])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_VUULTIMO_TRUE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_VUULTIMO_FALSE$])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_VUULTIMO_TRUE])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_VUULTIMO_FALSE])
m4trace:configure.ac:9: -1- AM_CONDITIONAL([BOXMODEL_VUSOLOSE], [test "$BOXMODEL" = "vusolose"])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_VUSOLOSE_TRUE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_VUSOLOSE_FALSE$])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_VUSOLOSE_TRUE])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_VUSOLOSE_FALSE])
m4trace:configure.ac:9: -1- AM_CONDITIONAL([BOXMODEL_VUSOLO4K], [test "$BOXMODEL" = "vusolo4k"])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_VUSOLO4K_TRUE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_VUSOLO4K_FALSE$])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_VUSOLO4K_TRUE])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_VUSOLO4K_FALSE])
m4trace:configure.ac:9: -1- AM_CONDITIONAL([BOXMODEL_VUZERO], [test "$BOXMODEL" = "vuzero"])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_VUZERO_TRUE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_VUZERO_FALSE$])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_VUZERO_TRUE])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_VUZERO_FALSE])
m4trace:configure.ac:9: -1- AM_CONDITIONAL([BOXMODEL_VUDUO4K], [test "$BOXMODEL" = "vuduo4k"])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_VUDUO4K_TRUE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_VUDUO4K_FALSE$])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_VUDUO4K_TRUE])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_VUDUO4K_FALSE])
m4trace:configure.ac:9: -1- AM_CONDITIONAL([BOXMODEL_AZBOXHD], [test "$BOXMODEL" = "azboxhd"])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_AZBOXHD_TRUE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_AZBOXHD_FALSE$])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_AZBOXHD_TRUE])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_AZBOXHD_FALSE])
m4trace:configure.ac:9: -1- AM_CONDITIONAL([BOXMODEL_AZBOXME], [test "$BOXMODEL" = "azboxme"])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_AZBOXME_TRUE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_AZBOXME_FALSE$])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_AZBOXME_TRUE])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_AZBOXME_FALSE])
m4trace:configure.ac:9: -1- AM_CONDITIONAL([BOXMODEL_AZBOXMINIME], [test "$BOXMODEL" = "azboxminime"])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_AZBOXMINIME_TRUE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_AZBOXMINIME_FALSE$])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_AZBOXMINIME_TRUE])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_AZBOXMINIME_FALSE])
m4trace:configure.ac:9: -1- AM_CONDITIONAL([BOXMODEL_TMTWIN], [test "$BOXMODEL" = "tmtwin"])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_TMTWIN_TRUE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_TMTWIN_FALSE$])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_TMTWIN_TRUE])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_TMTWIN_FALSE])
m4trace:configure.ac:9: -1- AM_CONDITIONAL([BOXMODEL_TM2T], [test "$BOXMODEL" = "tm2t"])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_TM2T_TRUE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_TM2T_FALSE$])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_TM2T_TRUE])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_TM2T_FALSE])
m4trace:configure.ac:9: -1- AM_CONDITIONAL([BOXMODEL_TMSINGLE], [test "$BOXMODEL" = "tmsingle"])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_TMSINGLE_TRUE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_TMSINGLE_FALSE$])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_TMSINGLE_TRUE])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_TMSINGLE_FALSE])
m4trace:configure.ac:9: -1- AM_CONDITIONAL([BOXMODEL_TMNANO], [test "$BOXMODEL" = "tmnano"])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_TMNANO_TRUE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_TMNANO_FALSE$])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_TMNANO_TRUE])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_TMNANO_FALSE])
m4trace:configure.ac:9: -1- AM_CONDITIONAL([BOXMODEL_VENTONHDE], [test "$BOXMODEL" = "ventonhde"])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_VENTONHDE_TRUE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_VENTONHDE_FALSE$])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_VENTONHDE_TRUE])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_VENTONHDE_FALSE])
m4trace:configure.ac:9: -1- AM_CONDITIONAL([BOXMODEL_VENTONHDX], [test "$BOXMODEL" = "ventonhdx"])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_VENTONHDX_TRUE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_VENTONHDX_FALSE$])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_VENTONHDX_TRUE])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_VENTONHDX_FALSE])
m4trace:configure.ac:9: -1- AM_CONDITIONAL([BOXMODEL_INIHDE], [test "$BOXMODEL" = "inihde"])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_INIHDE_TRUE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_INIHDE_FALSE$])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_INIHDE_TRUE])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_INIHDE_FALSE])
m4trace:configure.ac:9: -1- AM_CONDITIONAL([BOXMODEL_INIHDP], [test "$BOXMODEL" = "inihdp"])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_INIHDP_TRUE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_INIHDP_FALSE$])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_INIHDP_TRUE])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_INIHDP_FALSE])
m4trace:configure.ac:9: -1- AM_CONDITIONAL([BOXMODEL_IXUSSZERO], [test "$BOXMODEL" = "ixusszero"])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_IXUSSZERO_TRUE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_IXUSSZERO_FALSE$])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_IXUSSZERO_TRUE])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_IXUSSZERO_FALSE])
m4trace:configure.ac:9: -1- AM_CONDITIONAL([BOXMODEL_IXUSSONE], [test "$BOXMODEL" = "ixussone"])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_IXUSSONE_TRUE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_IXUSSONE_FALSE$])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_IXUSSONE_TRUE])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_IXUSSONE_FALSE])
m4trace:configure.ac:9: -1- AM_CONDITIONAL([BOXMODEL_IQONIOS100HD], [test "$BOXMODEL" = "iqonios100hd"])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_IQONIOS100HD_TRUE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_IQONIOS100HD_FALSE$])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_IQONIOS100HD_TRUE])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_IQONIOS100HD_FALSE])
m4trace:configure.ac:9: -1- AM_CONDITIONAL([BOXMODEL_IQONIOS300HD], [test "$BOXMODEL" = "iqonios300hd"])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_IQONIOS300HD_TRUE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_IQONIOS300HD_FALSE$])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_IQONIOS300HD_TRUE])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_IQONIOS300HD_FALSE])
m4trace:configure.ac:9: -1- AM_CONDITIONAL([BOXMODEL_MEDIABOX], [test "$BOXMODEL" = "mediabox"])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_MEDIABOX_TRUE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_MEDIABOX_FALSE$])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_MEDIABOX_TRUE])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_MEDIABOX_FALSE])
m4trace:configure.ac:9: -1- AM_CONDITIONAL([BOXMODEL_OPTIMUSSOS1], [test "$BOXMODEL" = "optimussos1"])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_OPTIMUSSOS1_TRUE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_OPTIMUSSOS1_FALSE$])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_OPTIMUSSOS1_TRUE])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_OPTIMUSSOS1_FALSE])
m4trace:configure.ac:9: -1- AM_CONDITIONAL([BOXMODEL_OPTIMUSSOS2], [test "$BOXMODEL" = "optimussos2"])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_OPTIMUSSOS2_TRUE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_OPTIMUSSOS2_FALSE$])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_OPTIMUSSOS2_TRUE])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_OPTIMUSSOS2_FALSE])
m4trace:configure.ac:9: -1- AM_CONDITIONAL([BOXMODEL_ODINM6], [test "$BOXMODEL" = "odinm6"])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_ODINM6_TRUE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_ODINM6_FALSE$])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_ODINM6_TRUE])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_ODINM6_FALSE])
m4trace:configure.ac:9: -1- AM_CONDITIONAL([BOXMODEL_ODINM7], [test "$BOXMODEL" = "odinm7"])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_ODINM7_TRUE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_ODINM7_FALSE$])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_ODINM7_TRUE])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_ODINM7_FALSE])
m4trace:configure.ac:9: -1- AM_CONDITIONAL([BOXMODEL_ODINM9], [test "$BOXMODEL" = "odinm9"])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_ODINM9_TRUE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_ODINM9_FALSE$])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_ODINM9_TRUE])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_ODINM9_FALSE])
m4trace:configure.ac:9: -1- AM_CONDITIONAL([BOXMODEL_E3HD], [test "$BOXMODEL" = "e3hd"])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_E3HD_TRUE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_E3HD_FALSE$])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_E3HD_TRUE])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_E3HD_FALSE])
m4trace:configure.ac:9: -1- AM_CONDITIONAL([BOXMODEL_WETEKPLAY], [test "$BOXMODEL" = "wetekplay"])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_WETEKPLAY_TRUE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_WETEKPLAY_FALSE$])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_WETEKPLAY_TRUE])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_WETEKPLAY_FALSE])
m4trace:configure.ac:9: -1- AM_CONDITIONAL([BOXMODEL_OSMINI], [test "$BOXMODEL" = "osmini"])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_OSMINI_TRUE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_OSMINI_FALSE$])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_OSMINI_TRUE])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_OSMINI_FALSE])
m4trace:configure.ac:9: -1- AM_CONDITIONAL([BOXMODEL_OSMINIPLUS], [test "$BOXMODEL" = "osminiplus"])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_OSMINIPLUS_TRUE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_OSMINIPLUS_FALSE$])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_OSMINIPLUS_TRUE])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_OSMINIPLUS_FALSE])
m4trace:configure.ac:9: -1- AM_CONDITIONAL([BOXMODEL_OSNINO], [test "$BOXMODEL" = "osnino"])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_OSNINO_TRUE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_OSNINO_FALSE$])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_OSNINO_TRUE])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_OSNINO_FALSE])
m4trace:configure.ac:9: -1- AM_CONDITIONAL([BOXMODEL_OSNINOPLUS], [test "$BOXMODEL" = "osninoplus"])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_OSNINOPLUS_TRUE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_OSNINOPLUS_FALSE$])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_OSNINOPLUS_TRUE])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_OSNINOPLUS_FALSE])
m4trace:configure.ac:9: -1- AM_CONDITIONAL([BOXMODEL_OSNINOPRO], [test "$BOXMODEL" = "osninopro"])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_OSNINOPRO_TRUE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_OSNINOPRO_FALSE$])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_OSNINOPRO_TRUE])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_OSNINOPRO_FALSE])
m4trace:configure.ac:9: -1- AM_CONDITIONAL([BOXMODEL_OSMIO4K], [test "$BOXMODEL" = "osmio4k"])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_OSMIO4K_TRUE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_OSMIO4K_FALSE$])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_OSMIO4K_TRUE])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_OSMIO4K_FALSE])
m4trace:configure.ac:9: -1- AM_CONDITIONAL([BOXMODEL_OSMIO4KPLUS], [test "$BOXMODEL" = "osmio4kplus"])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_OSMIO4KPLUS_TRUE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_OSMIO4KPLUS_FALSE$])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_OSMIO4KPLUS_TRUE])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_OSMIO4KPLUS_FALSE])
m4trace:configure.ac:9: -1- AM_CONDITIONAL([BOXMODEL_HD11], [test "$BOXMODEL" = "hd11"])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_HD11_TRUE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_HD11_FALSE$])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_HD11_TRUE])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_HD11_FALSE])
m4trace:configure.ac:9: -1- AM_CONDITIONAL([BOXMODEL_HD51], [test "$BOXMODEL" = "hd51"])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_HD51_TRUE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_HD51_FALSE$])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_HD51_TRUE])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_HD51_FALSE])
m4trace:configure.ac:9: -1- AM_CONDITIONAL([BOXMODEL_AX51], [test "$BOXMODEL" = "ax51"])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_AX51_TRUE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_AX51_FALSE$])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_AX51_TRUE])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_AX51_FALSE])
m4trace:configure.ac:9: -1- AM_CONDITIONAL([BOXMODEL_HD500C], [test "$BOXMODEL" = "hd500c"])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_HD500C_TRUE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_HD500C_FALSE$])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_HD500C_TRUE])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_HD500C_FALSE])
m4trace:configure.ac:9: -1- AM_CONDITIONAL([BOXMODEL_HD1100], [test "$BOXMODEL" = "hd1100"])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_HD1100_TRUE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_HD1100_FALSE$])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_HD1100_TRUE])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_HD1100_FALSE])
m4trace:configure.ac:9: -1- AM_CONDITIONAL([BOXMODEL_HD1200], [test "$BOXMODEL" = "hd1200"])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_HD1200_TRUE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_HD1200_FALSE$])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_HD1200_TRUE])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_HD1200_FALSE])
m4trace:configure.ac:9: -1- AM_CONDITIONAL([BOXMODEL_HD1265], [test "$BOXMODEL" = "hd1265"])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_HD1265_TRUE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_HD1265_FALSE$])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_HD1265_TRUE])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_HD1265_FALSE])
m4trace:configure.ac:9: -1- AM_CONDITIONAL([BOXMODEL_HD1500], [test "$BOXMODEL" = "hd1500"])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_HD1500_TRUE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_HD1500_FALSE$])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_HD1500_TRUE])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_HD1500_FALSE])
m4trace:configure.ac:9: -1- AM_CONDITIONAL([BOXMODEL_HD2400], [test "$BOXMODEL" = "hd2400"])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_HD2400_TRUE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_HD2400_FALSE$])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_HD2400_TRUE])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_HD2400_FALSE])
m4trace:configure.ac:9: -1- AM_CONDITIONAL([BOXMODEL_ET7000MINI], [test "$BOXMODEL" = "et7000mini"])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_ET7000MINI_TRUE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_ET7000MINI_FALSE$])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_ET7000MINI_TRUE])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_ET7000MINI_FALSE])
m4trace:configure.ac:9: -1- AM_CONDITIONAL([BOXMODEL_XPEEDC], [test "$BOXMODEL" = "xpeedc"])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_XPEEDC_TRUE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_XPEEDC_FALSE$])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_XPEEDC_TRUE])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_XPEEDC_FALSE])
m4trace:configure.ac:9: -1- AM_CONDITIONAL([BOXMODEL_FORMULER1], [test "$BOXMODEL" = "formuler1"])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_FORMULER1_TRUE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_FORMULER1_FALSE$])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_FORMULER1_TRUE])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_FORMULER1_FALSE])
m4trace:configure.ac:9: -1- AM_CONDITIONAL([BOXMODEL_FORMULER3], [test "$BOXMODEL" = "formuler3"])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_FORMULER3_TRUE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_FORMULER3_FALSE$])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_FORMULER3_TRUE])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_FORMULER3_FALSE])
m4trace:configure.ac:9: -1- AM_CONDITIONAL([BOXMODEL_FORMULER4], [test "$BOXMODEL" = "formuler4"])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_FORMULER4_TRUE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_FORMULER4_FALSE$])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_FORMULER4_TRUE])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_FORMULER4_FALSE])
m4trace:configure.ac:9: -1- AM_CONDITIONAL([BOXMODEL_MBMICRO], [test "$BOXMODEL" = "mbmicro"])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_MBMICRO_TRUE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_MBMICRO_FALSE$])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_MBMICRO_TRUE])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_MBMICRO_FALSE])
m4trace:configure.ac:9: -1- AM_CONDITIONAL([BOXMODEL_MBTWINPLUS], [test "$BOXMODEL" = "mbtwinplus"])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_MBTWINPLUS_TRUE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_MBTWINPLUS_FALSE$])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_MBTWINPLUS_TRUE])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_MBTWINPLUS_FALSE])
m4trace:configure.ac:9: -1- AM_CONDITIONAL([BOXMODEL_SPYCAT], [test "$BOXMODEL" = "spycat"])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_SPYCAT_TRUE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_SPYCAT_FALSE$])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_SPYCAT_TRUE])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_SPYCAT_FALSE])
m4trace:configure.ac:9: -1- AM_CONDITIONAL([BOXMODEL_SPYCATMINI], [test "$BOXMODEL" = "spycatmini"])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_SPYCATMINI_TRUE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_SPYCATMINI_FALSE$])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_SPYCATMINI_TRUE])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_SPYCATMINI_FALSE])
m4trace:configure.ac:9: -1- AM_CONDITIONAL([BOXMODEL_FUSIONHD], [test "$BOXMODEL" = "fusionhd"])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_FUSIONHD_TRUE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_FUSIONHD_FALSE$])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_FUSIONHD_TRUE])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_FUSIONHD_FALSE])
m4trace:configure.ac:9: -1- AM_CONDITIONAL([BOXMODEL_FUSIONHDSE], [test "$BOXMODEL" = "fusionhdse"])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_FUSIONHDSE_TRUE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_FUSIONHDSE_FALSE$])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_FUSIONHDSE_TRUE])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_FUSIONHDSE_FALSE])
m4trace:configure.ac:9: -1- AM_CONDITIONAL([BOXMODEL_PUREHD], [test "$BOXMODEL" = "purehd"])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_PUREHD_TRUE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_PUREHD_FALSE$])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_PUREHD_TRUE])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_PUREHD_FALSE])
m4trace:configure.ac:9: -1- AM_CONDITIONAL([BOXMODEL_H3], [test "$BOXMODEL" = "h3"])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_H3_TRUE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_H3_FALSE$])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_H3_TRUE])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_H3_FALSE])
m4trace:configure.ac:9: -1- AM_CONDITIONAL([BOXMODEL_H4], [test "$BOXMODEL" = "h4"])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_H4_TRUE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_H4_FALSE$])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_H4_TRUE])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_H4_FALSE])
m4trace:configure.ac:9: -1- AM_CONDITIONAL([BOXMODEL_H5], [test "$BOXMODEL" = "h5"])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_H5_TRUE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_H5_FALSE$])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_H5_TRUE])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_H5_FALSE])
m4trace:configure.ac:9: -1- AM_CONDITIONAL([BOXMODEL_H7], [test "$BOXMODEL" = "h7"])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_H7_TRUE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_H7_FALSE$])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_H7_TRUE])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_H7_FALSE])
m4trace:configure.ac:9: -1- AM_CONDITIONAL([BOXMODEL_I55], [test "$BOXMODEL" = "i55"])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_I55_TRUE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_I55_FALSE$])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_I55_TRUE])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_I55_FALSE])
m4trace:configure.ac:9: -1- AM_CONDITIONAL([BOXMODEL_LC], [test "$BOXMODEL" = "lc"])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_LC_TRUE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_LC_FALSE$])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_LC_TRUE])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_LC_FALSE])
m4trace:configure.ac:9: -1- AM_CONDITIONAL([BOXMODEL_SH1], [test "$BOXMODEL" = "sh1"])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_SH1_TRUE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_SH1_FALSE$])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_SH1_TRUE])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_SH1_FALSE])
m4trace:configure.ac:9: -1- AM_CONDITIONAL([BOXMODEL_BRE2ZE4K], [test "$BOXMODEL" = "bre2ze4k"])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_BRE2ZE4K_TRUE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_BRE2ZE4K_FALSE$])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_BRE2ZE4K_TRUE])
m4trace:configure.ac:9: -1- _AM_SUBST_NOTMAKE([BOXMODEL_BRE2ZE4K_FALSE])
m4trace:configure.ac:9: -1- m4_pattern_allow([^PLATFORM_GENERIC$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^PLATFORM_DGS$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^PLATFORM_GIGABLUE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^PLATFORM_DREAMBOX$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^PLATFORM_XTREND$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^PLATFORM_FULAN$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^PLATFORM_KATHREIN$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^PLATFORM_IPBOX$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^HAVE_DUCKBOX_HARDWARE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^PLATFORM_TF7700$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^PLATFORM_FORTIS_HDBOX$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^PLATFORM_OCTAGON$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^PLATFORM_ATEVIO$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^PLATFORM_ADB_BOX$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^PLATFORM_WHITEBOX$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^PLATFORM_VIP$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^PLATFORM_HOMECAST$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^PLATFORM_VUPLUS$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^PLATFORM_AZBOX$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^PLATFORM_TECHNOMATE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^PLATFORM_COOLSTREAM$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^PLATFORM_HYPERCUBE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^PLATFORM_VENTON$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^PLATFORM_IXUSS$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^PLATFORM_IQONIOS$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^PLATFORM_ODIN$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^PLATFORM_XP1000$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^PLATFORM_E3HD$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^PLATFORM_EBOX5000$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^PLATFORM_WETEK$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^PLATFORM_EDISION$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^PLATFORM_HD$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^PLATFORM_GI$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^PLATFORM_XPEEDC$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^PLATFORM_FORMULER$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^PLATFORM_MIRACLEBOX$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^PLATFORM_SPYCAT$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^PLATFORM_XSARIUS$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^PLATFORM_ZGEMMA$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^PLATFORM_WWIO$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^PLATFORM_CUBEREVO$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^PLATFORM_CUBEREVO_MINI$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^PLATFORM_CUBEREVO_MINI2$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^PLATFORM_CUBEREVO_MINI_FTA$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^PLATFORM_CUBEREVO_250HD$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^PLATFORM_CUBEREVO_2000HD$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^PLATFORM_CUBEREVO_9500HD$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_GB800SOLO$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_GB800SE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_GB800UE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_GB800SEPLUS$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_GB800UEPLUS$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_GBQUAD$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_DM500$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_DM500PLUS$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_DM600PVR$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_DM56x0$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_DM7000$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_DM500HD$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_DM7000HD$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_DM8000HD$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_DM800HD$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_DM800SE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_DM520$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_ET4X00$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_ET5X00$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_ET6X00$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_ET7X00$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_ET8000$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_ET8500$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_ET9X00$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_ET10000$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^PLATFORM_SPARK$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^PLATFORM_SPARK7162$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^PLATFORM_UFS910$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^PLATFORM_UFS912$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^PLATFORM_UFS913$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^PLATFORM_UFS922$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^PLATFORM_UFC960$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^PLATFORM_IPBOX55$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^PLATFORM_IPBOX99$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^PLATFORM_IPBOX9900$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_HL101$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_ATEVIO700$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_ATEVIO7000$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_ATEVIO7500$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_ATEVIO7600$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_OCTAGON_1008$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_VUSOLO2$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_VUDUO2$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_VUSOLO$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_VUDUO$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_VUUNO$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_VUULTIMO$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_VUSOLOSE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_VUSOLO4K$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_VUZERO$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_VUDUO4K$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_AZBOXHD$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_AZBOXME$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_AZBOXMINIME$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_TMTWIN$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_TM2T$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_TMSINGLE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_TMNANO$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_VENTONHDE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_VENTONHDX$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_INIHDE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_INIHDP$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_IXUSSZERO$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_IXUSSONE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_IQONIOS100HD$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_IQONIOS300HD$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_MEDIABOX$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_OPTIMUSSOS1$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_OPTIMUSSOS2$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_ODINM6$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_ODINM7$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_ODINM9$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_E3HD$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_WETEKPLAY$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_OSMINI$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_OSMINIPLUS$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_OSNINO$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_OSNINOPLUS$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_OSNINOPRO$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_OSMIO4K$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_OSMIO4KPLUS$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_HD11$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_HD51$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_AX51$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_HD500C$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_HD1100$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_HD1200$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_HD1265$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_HD1500$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_HD2400$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_ET7000MINI$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_XPEEDC$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_FORMULER1$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_FORMULER3$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_FORMULER4$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_MBMINI$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_MBTWINPLUS$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_SPYCAT$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_SPYCATMINI$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_FUSIONHD$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_FUSIONHDSE$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_PUREHD$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_H3$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_H4$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_H5$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_H7$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_I55$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_LC$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_SH1$])
m4trace:configure.ac:9: -1- m4_pattern_allow([^BOXMODEL_BRE2ZE4K$])
m4trace:configure.ac:11: -1- m4_pattern_allow([^CC$])
m4trace:configure.ac:11: -1- m4_pattern_allow([^CFLAGS$])
m4trace:configure.ac:11: -1- m4_pattern_allow([^LDFLAGS$])
m4trace:configure.ac:11: -1- m4_pattern_allow([^LIBS$])
m4trace:configure.ac:11: -1- m4_pattern_allow([^CPPFLAGS$])
m4trace:configure.ac:11: -1- m4_pattern_allow([^CC$])
m4trace:configure.ac:11: -1- m4_pattern_allow([^CC$])
m4trace:configure.ac:11: -1- m4_pattern_allow([^CC$])
m4trace:configure.ac:11: -1- m4_pattern_allow([^CC$])
m4trace:configure.ac:11: -1- m4_pattern_allow([^ac_ct_CC$])
m4trace:configure.ac:11: -1- _AM_PROG_CC_C_O
m4trace:configure.ac:11: -1- AM_RUN_LOG([$CC -c conftest.$ac_ext -o conftest2.$ac_objext])
m4trace:configure.ac:11: -1- _AM_DEPENDENCIES([CC])
m4trace:configure.ac:11: -1- m4_pattern_allow([^CCDEPMODE$])
m4trace:configure.ac:11: -1- AM_CONDITIONAL([am__fastdepCC], [
  test "x$enable_dependency_tracking" != xno \
  && test "$am_cv_CC_dependencies_compiler_type" = gcc3])
m4trace:configure.ac:11: -1- m4_pattern_allow([^am__fastdepCC_TRUE$])
m4trace:configure.ac:11: -1- m4_pattern_allow([^am__fastdepCC_FALSE$])
m4trace:configure.ac:11: -1- _AM_SUBST_NOTMAKE([am__fastdepCC_TRUE])
m4trace:configure.ac:11: -1- _AM_SUBST_NOTMAKE([am__fastdepCC_FALSE])
m4trace:configure.ac:12: -1- m4_pattern_allow([^CXX$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^CXXFLAGS$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^LDFLAGS$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^LIBS$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^CPPFLAGS$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^CXX$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^ac_ct_CXX$])
m4trace:configure.ac:12: -1- _AM_DEPENDENCIES([CXX])
m4trace:configure.ac:12: -1- m4_pattern_allow([^CXXDEPMODE$])
m4trace:configure.ac:12: -1- AM_CONDITIONAL([am__fastdepCXX], [
  test "x$enable_dependency_tracking" != xno \
  && test "$am_cv_CXX_dependencies_compiler_type" = gcc3])
m4trace:configure.ac:12: -1- m4_pattern_allow([^am__fastdepCXX_TRUE$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^am__fastdepCXX_FALSE$])
m4trace:configure.ac:12: -1- _AM_SUBST_NOTMAKE([am__fastdepCXX_TRUE])
m4trace:configure.ac:12: -1- _AM_SUBST_NOTMAKE([am__fastdepCXX_FALSE])
m4trace:configure.ac:13: -1- AC_DISABLE_STATIC
m4trace:configure.ac:15: -1- AM_PROG_LIBTOOL
m4trace:configure.ac:15: -1- _m4_warn([obsolete], [The macro `AM_PROG_LIBTOOL' is obsolete.
You should run autoupdate.], [/usr/share/aclocal/libtool.m4:100: AM_PROG_LIBTOOL is expanded from...
configure.ac:15: the top level])
m4trace:configure.ac:15: -1- LT_INIT
m4trace:configure.ac:15: -1- m4_pattern_forbid([^_?LT_[A-Z_]+$])
m4trace:configure.ac:15: -1- m4_pattern_allow([^(_LT_EOF|LT_DLGLOBAL|LT_DLLAZY_OR_NOW|LT_MULTI_MODULE)$])
m4trace:configure.ac:15: -1- LTOPTIONS_VERSION
m4trace:configure.ac:15: -1- LTSUGAR_VERSION
m4trace:configure.ac:15: -1- LTVERSION_VERSION
m4trace:configure.ac:15: -1- LTOBSOLETE_VERSION
m4trace:configure.ac:15: -1- _LT_PROG_LTMAIN
m4trace:configure.ac:15: -1- m4_pattern_allow([^LIBTOOL$])
m4trace:configure.ac:15: -1- _LT_PREPARE_SED_QUOTE_VARS
m4trace:configure.ac:15: -1- _LT_PROG_ECHO_BACKSLASH
m4trace:configure.ac:15: -1- LT_PATH_LD
m4trace:configure.ac:15: -1- m4_pattern_allow([^SED$])
m4trace:configure.ac:15: -1- m4_pattern_allow([^GREP$])
m4trace:configure.ac:15: -1- m4_pattern_allow([^FGREP$])
m4trace:configure.ac:15: -1- m4_pattern_allow([^GREP$])
m4trace:configure.ac:15: -1- m4_pattern_allow([^LD$])
m4trace:configure.ac:15: -1- LT_PATH_NM
m4trace:configure.ac:15: -1- m4_pattern_allow([^DUMPBIN$])
m4trace:configure.ac:15: -1- m4_pattern_allow([^ac_ct_DUMPBIN$])
m4trace:configure.ac:15: -1- m4_pattern_allow([^DUMPBIN$])
m4trace:configure.ac:15: -1- m4_pattern_allow([^NM$])
m4trace:configure.ac:15: -1- m4_pattern_allow([^LN_S$])
m4trace:configure.ac:15: -1- LT_CMD_MAX_LEN
m4trace:configure.ac:15: -1- m4_pattern_allow([^OBJDUMP$])
m4trace:configure.ac:15: -1- m4_pattern_allow([^OBJDUMP$])
m4trace:configure.ac:15: -1- m4_pattern_allow([^DLLTOOL$])
m4trace:configure.ac:15: -1- m4_pattern_allow([^DLLTOOL$])
m4trace:configure.ac:15: -1- m4_pattern_allow([^AR$])
m4trace:configure.ac:15: -1- m4_pattern_allow([^ac_ct_AR$])
m4trace:configure.ac:15: -1- m4_pattern_allow([^STRIP$])
m4trace:configure.ac:15: -1- m4_pattern_allow([^RANLIB$])
m4trace:configure.ac:15: -1- _LT_WITH_SYSROOT
m4trace:configure.ac:15: -1- m4_pattern_allow([LT_OBJDIR])
m4trace:configure.ac:15: -1- m4_pattern_allow([^LT_OBJDIR$])
m4trace:configure.ac:15: -1- _LT_CC_BASENAME([$compiler])
m4trace:configure.ac:15: -1- _LT_PATH_TOOL_PREFIX([${ac_tool_prefix}file], [/usr/bin$PATH_SEPARATOR$PATH])
m4trace:configure.ac:15: -1- _LT_PATH_TOOL_PREFIX([file], [/usr/bin$PATH_SEPARATOR$PATH])
m4trace:configure.ac:15: -1- LT_SUPPORTED_TAG([CC])
m4trace:configure.ac:15: -1- _LT_COMPILER_BOILERPLATE
m4trace:configure.ac:15: -1- _LT_LINKER_BOILERPLATE
m4trace:configure.ac:15: -1- _LT_COMPILER_OPTION([if $compiler supports -fno-rtti -fno-exceptions], [lt_cv_prog_compiler_rtti_exceptions], [-fno-rtti -fno-exceptions], [], [_LT_TAGVAR(lt_prog_compiler_no_builtin_flag, )="$_LT_TAGVAR(lt_prog_compiler_no_builtin_flag, ) -fno-rtti -fno-exceptions"])
m4trace:configure.ac:15: -1- _LT_COMPILER_OPTION([if $compiler PIC flag $_LT_TAGVAR(lt_prog_compiler_pic, ) works], [_LT_TAGVAR(lt_cv_prog_compiler_pic_works, )], [$_LT_TAGVAR(lt_prog_compiler_pic, )@&t@m4_if([],[],[ -DPIC],[m4_if([],[CXX],[ -DPIC],[])])], [], [case $_LT_TAGVAR(lt_prog_compiler_pic, ) in
     "" | " "*) ;;
     *) _LT_TAGVAR(lt_prog_compiler_pic, )=" $_LT_TAGVAR(lt_prog_compiler_pic, )" ;;
     esac], [_LT_TAGVAR(lt_prog_compiler_pic, )=
     _LT_TAGVAR(lt_prog_compiler_can_build_shared, )=no])
m4trace:configure.ac:15: -1- _LT_LINKER_OPTION([if $compiler static flag $lt_tmp_static_flag works], [lt_cv_prog_compiler_static_works], [$lt_tmp_static_flag], [], [_LT_TAGVAR(lt_prog_compiler_static, )=])
m4trace:configure.ac:15: -1- m4_pattern_allow([^MANIFEST_TOOL$])
m4trace:configure.ac:15: -1- _LT_DLL_DEF_P([$export_symbols])
m4trace:configure.ac:15: -1- _LT_DLL_DEF_P([$export_symbols])
m4trace:configure.ac:15: -1- _LT_REQUIRED_DARWIN_CHECKS
m4trace:configure.ac:15: -1- m4_pattern_allow([^DSYMUTIL$])
m4trace:configure.ac:15: -1- m4_pattern_allow([^NMEDIT$])
m4trace:configure.ac:15: -1- m4_pattern_allow([^LIPO$])
m4trace:configure.ac:15: -1- m4_pattern_allow([^OTOOL$])
m4trace:configure.ac:15: -1- m4_pattern_allow([^OTOOL64$])
m4trace:configure.ac:15: -1- _LT_LINKER_OPTION([if $CC understands -b], [lt_cv_prog_compiler__b], [-b], [_LT_TAGVAR(archive_cmds, )='$CC -b $wl+h $wl$soname $wl+b $wl$install_libdir -o $lib $libobjs $deplibs $compiler_flags'], [_LT_TAGVAR(archive_cmds, )='$LD -b +h $soname +b $install_libdir -o $lib $libobjs $deplibs $linker_flags'])
m4trace:configure.ac:15: -1- m4_pattern_allow([^LT_SYS_LIBRARY_PATH$])
m4trace:configure.ac:15: -1- LT_SYS_DLOPEN_SELF
m4trace:configure.ac:15: -1- m4_pattern_allow([^HAVE_DLFCN_H$])
m4trace:configure.ac:15: -1- LT_LANG([CXX])
m4trace:configure.ac:15: -1- LT_SUPPORTED_TAG([CXX])
m4trace:configure.ac:15: -1- m4_pattern_allow([^CXXCPP$])
m4trace:configure.ac:15: -1- m4_pattern_allow([^CPPFLAGS$])
m4trace:configure.ac:15: -1- m4_pattern_allow([^CXXCPP$])
m4trace:configure.ac:15: -1- _LT_COMPILER_BOILERPLATE
m4trace:configure.ac:15: -1- _LT_LINKER_BOILERPLATE
m4trace:configure.ac:15: -1- _LT_CC_BASENAME([$compiler])
m4trace:configure.ac:15: -1- LT_PATH_LD
m4trace:configure.ac:15: -1- m4_pattern_allow([^LD$])
m4trace:configure.ac:15: -1- _LT_DLL_DEF_P([$export_symbols])
m4trace:configure.ac:15: -1- _LT_DLL_DEF_P([$export_symbols])
m4trace:configure.ac:15: -1- _LT_COMPILER_OPTION([if $compiler PIC flag $_LT_TAGVAR(lt_prog_compiler_pic, CXX) works], [_LT_TAGVAR(lt_cv_prog_compiler_pic_works, CXX)], [$_LT_TAGVAR(lt_prog_compiler_pic, CXX)@&t@m4_if([CXX],[],[ -DPIC],[m4_if([CXX],[CXX],[ -DPIC],[])])], [], [case $_LT_TAGVAR(lt_prog_compiler_pic, CXX) in
     "" | " "*) ;;
     *) _LT_TAGVAR(lt_prog_compiler_pic, CXX)=" $_LT_TAGVAR(lt_prog_compiler_pic, CXX)" ;;
     esac], [_LT_TAGVAR(lt_prog_compiler_pic, CXX)=
     _LT_TAGVAR(lt_prog_compiler_can_build_shared, CXX)=no])
m4trace:configure.ac:15: -1- _LT_LINKER_OPTION([if $compiler static flag $lt_tmp_static_flag works], [lt_cv_prog_compiler_static_works_CXX], [$lt_tmp_static_flag], [], [_LT_TAGVAR(lt_prog_compiler_static, CXX)=])
m4trace:configure.ac:15: -1- m4_pattern_allow([^LT_SYS_LIBRARY_PATH$])
m4trace:configure.ac:18: -1- m4_pattern_allow([^MSGFMT$])
m4trace:configure.ac:19: -1- m4_pattern_allow([^MSGINIT$])
m4trace:configure.ac:20: -1- m4_pattern_allow([^MSGMERGE$])
m4trace:configure.ac:21: -1- m4_pattern_allow([^MSGUNIQ$])
m4trace:configure.ac:22: -1- m4_pattern_allow([^MSGATTRIB$])
m4trace:configure.ac:23: -1- m4_pattern_allow([^XGETTEXT$])
m4trace:configure.ac:25: -1- PKG_CHECK_MODULES([CURL], [libcurl])
m4trace:configure.ac:25: -1- PKG_PROG_PKG_CONFIG
m4trace:configure.ac:25: -1- m4_pattern_forbid([^_?PKG_[A-Z_]+$])
m4trace:configure.ac:25: -1- m4_pattern_allow([^PKG_CONFIG(_(PATH|LIBDIR|SYSROOT_DIR|ALLOW_SYSTEM_(CFLAGS|LIBS)))?$])
m4trace:configure.ac:25: -1- m4_pattern_allow([^PKG_CONFIG_(DISABLE_UNINSTALLED|TOP_BUILD_DIR|DEBUG_SPEW)$])
m4trace:configure.ac:25: -1- m4_pattern_allow([^PKG_CONFIG$])
m4trace:configure.ac:25: -1- m4_pattern_allow([^PKG_CONFIG_PATH$])
m4trace:configure.ac:25: -1- m4_pattern_allow([^PKG_CONFIG_LIBDIR$])
m4trace:configure.ac:25: -1- m4_pattern_allow([^PKG_CONFIG$])
m4trace:configure.ac:25: -1- m4_pattern_allow([^CURL_CFLAGS$])
m4trace:configure.ac:25: -1- m4_pattern_allow([^CURL_LIBS$])
m4trace:configure.ac:25: -1- PKG_CHECK_EXISTS([libcurl], [pkg_cv_[]CURL_CFLAGS=`$PKG_CONFIG --[]cflags "libcurl" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:25: -1- PKG_CHECK_EXISTS([libcurl], [pkg_cv_[]CURL_LIBS=`$PKG_CONFIG --[]libs "libcurl" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:25: -1- _PKG_SHORT_ERRORS_SUPPORTED
m4trace:configure.ac:26: -1- PKG_CHECK_MODULES([FREETYPE], [freetype2])
m4trace:configure.ac:26: -1- m4_pattern_allow([^FREETYPE_CFLAGS$])
m4trace:configure.ac:26: -1- m4_pattern_allow([^FREETYPE_LIBS$])
m4trace:configure.ac:26: -1- PKG_CHECK_EXISTS([freetype2], [pkg_cv_[]FREETYPE_CFLAGS=`$PKG_CONFIG --[]cflags "freetype2" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:26: -1- PKG_CHECK_EXISTS([freetype2], [pkg_cv_[]FREETYPE_LIBS=`$PKG_CONFIG --[]libs "freetype2" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:26: -1- _PKG_SHORT_ERRORS_SUPPORTED
m4trace:configure.ac:27: -1- PKG_CHECK_MODULES([PNG], [libpng])
m4trace:configure.ac:27: -1- m4_pattern_allow([^PNG_CFLAGS$])
m4trace:configure.ac:27: -1- m4_pattern_allow([^PNG_LIBS$])
m4trace:configure.ac:27: -1- PKG_CHECK_EXISTS([libpng], [pkg_cv_[]PNG_CFLAGS=`$PKG_CONFIG --[]cflags "libpng" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:27: -1- PKG_CHECK_EXISTS([libpng], [pkg_cv_[]PNG_LIBS=`$PKG_CONFIG --[]libs "libpng" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:27: -1- _PKG_SHORT_ERRORS_SUPPORTED
m4trace:configure.ac:33: -1- AM_CONDITIONAL([ENABLE_TESTING], [test "$enable_testing" = "yes"])
m4trace:configure.ac:33: -1- m4_pattern_allow([^ENABLE_TESTING_TRUE$])
m4trace:configure.ac:33: -1- m4_pattern_allow([^ENABLE_TESTING_FALSE$])
m4trace:configure.ac:33: -1- _AM_SUBST_NOTMAKE([ENABLE_TESTING_TRUE])
m4trace:configure.ac:33: -1- _AM_SUBST_NOTMAKE([ENABLE_TESTING_FALSE])
m4trace:configure.ac:39: -1- AM_CONDITIONAL([ENABLE_PYTHON], [test "$enable_python" = "yes"])
m4trace:configure.ac:39: -1- m4_pattern_allow([^ENABLE_PYTHON_TRUE$])
m4trace:configure.ac:39: -1- m4_pattern_allow([^ENABLE_PYTHON_FALSE$])
m4trace:configure.ac:39: -1- _AM_SUBST_NOTMAKE([ENABLE_PYTHON_TRUE])
m4trace:configure.ac:39: -1- _AM_SUBST_NOTMAKE([ENABLE_PYTHON_FALSE])
m4trace:configure.ac:45: -1- AM_CONDITIONAL([ENABLE_LUA], [test "$enable_lua" = "yes"])
m4trace:configure.ac:45: -1- m4_pattern_allow([^ENABLE_LUA_TRUE$])
m4trace:configure.ac:45: -1- m4_pattern_allow([^ENABLE_LUA_FALSE$])
m4trace:configure.ac:45: -1- _AM_SUBST_NOTMAKE([ENABLE_LUA_TRUE])
m4trace:configure.ac:45: -1- _AM_SUBST_NOTMAKE([ENABLE_LUA_FALSE])
m4trace:configure.ac:47: -1- _m4_warn([obsolete], [AC_OUTPUT should be used without arguments.
You should run autoupdate.], [])
m4trace:configure.ac:47: -1- m4_pattern_allow([^LIB@&t@OBJS$])
m4trace:configure.ac:47: -1- m4_pattern_allow([^LTLIBOBJS$])
m4trace:configure.ac:47: -1- AM_CONDITIONAL([am__EXEEXT], [test -n "$EXEEXT"])
m4trace:configure.ac:47: -1- m4_pattern_allow([^am__EXEEXT_TRUE$])
m4trace:configure.ac:47: -1- m4_pattern_allow([^am__EXEEXT_FALSE$])
m4trace:configure.ac:47: -1- _AM_SUBST_NOTMAKE([am__EXEEXT_TRUE])
m4trace:configure.ac:47: -1- _AM_SUBST_NOTMAKE([am__EXEEXT_FALSE])
m4trace:configure.ac:47: -1- _AC_AM_CONFIG_HEADER_HOOK(["$ac_file"])
m4trace:configure.ac:47: -1- _AM_OUTPUT_DEPENDENCY_COMMANDS
m4trace:configure.ac:47: -1- AM_RUN_LOG([cd "$am_dirpart" \
      && sed -e '/# am--include-marker/d' "$am_filepart" \
        | $MAKE -f - am--depfiles])
m4trace:configure.ac:47: -1- _LT_PROG_LTMAIN
